// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.0
// source: game/v1/game.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GameReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameReq) Reset() {
	*x = GameReq{}
	mi := &file_game_v1_game_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameReq) ProtoMessage() {}

func (x *GameReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameReq.ProtoReflect.Descriptor instead.
func (*GameReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{0}
}

type GameReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameReply) Reset() {
	*x = GameReply{}
	mi := &file_game_v1_game_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameReply) ProtoMessage() {}

func (x *GameReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameReply.ProtoReflect.Descriptor instead.
func (*GameReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{1}
}

type SingleEnterGameReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlatformKey   int64                  `protobuf:"varint,1,opt,name=platform_key,json=platformKey,proto3" json:"platform_key,omitempty"`   //游戏平台key  唯一标识
	GameKey       int64                  `protobuf:"varint,2,opt,name=game_key,json=gameKey,proto3" json:"game_key,omitempty"`               //游戏标志
	UserId        uint64                 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                  //用户ID
	UserToken     string                 `protobuf:"bytes,4,opt,name=user_token,json=userToken,proto3" json:"user_token,omitempty"`          //用户TOKEN
	Language      string                 `protobuf:"bytes,5,opt,name=language,proto3" json:"language,omitempty"`                             //语言
	CurrencyCode  string                 `protobuf:"bytes,6,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"` //货币Code
	Param         string                 `protobuf:"bytes,7,opt,name=param,proto3" json:"param,omitempty"`                                   //参数
	ShowScene     string                 `protobuf:"bytes,8,opt,name=show_scene,json=showScene,proto3" json:"show_scene,omitempty"`          //游戏进入场景
	OsType        string                 `protobuf:"bytes,9,opt,name=os_type,json=osType,proto3" json:"os_type,omitempty"`                   //类型 “web” or “android” or "h5" or "ios"
	Referer       string                 `protobuf:"bytes,10,opt,name=referer,proto3" json:"referer,omitempty"`                              //请求页面
	UserIp        string                 `protobuf:"bytes,11,opt,name=user_ip,json=userIp,proto3" json:"user_ip,omitempty"`                  //玩家IP
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SingleEnterGameReq) Reset() {
	*x = SingleEnterGameReq{}
	mi := &file_game_v1_game_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SingleEnterGameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleEnterGameReq) ProtoMessage() {}

func (x *SingleEnterGameReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleEnterGameReq.ProtoReflect.Descriptor instead.
func (*SingleEnterGameReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{2}
}

func (x *SingleEnterGameReq) GetPlatformKey() int64 {
	if x != nil {
		return x.PlatformKey
	}
	return 0
}

func (x *SingleEnterGameReq) GetGameKey() int64 {
	if x != nil {
		return x.GameKey
	}
	return 0
}

func (x *SingleEnterGameReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SingleEnterGameReq) GetUserToken() string {
	if x != nil {
		return x.UserToken
	}
	return ""
}

func (x *SingleEnterGameReq) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *SingleEnterGameReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *SingleEnterGameReq) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

func (x *SingleEnterGameReq) GetShowScene() string {
	if x != nil {
		return x.ShowScene
	}
	return ""
}

func (x *SingleEnterGameReq) GetOsType() string {
	if x != nil {
		return x.OsType
	}
	return ""
}

func (x *SingleEnterGameReq) GetReferer() string {
	if x != nil {
		return x.Referer
	}
	return ""
}

func (x *SingleEnterGameReq) GetUserIp() string {
	if x != nil {
		return x.UserIp
	}
	return ""
}

type SingleEnterGameReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"` //游戏地址
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SingleEnterGameReply) Reset() {
	*x = SingleEnterGameReply{}
	mi := &file_game_v1_game_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SingleEnterGameReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleEnterGameReply) ProtoMessage() {}

func (x *SingleEnterGameReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleEnterGameReply.ProtoReflect.Descriptor instead.
func (*SingleEnterGameReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{3}
}

func (x *SingleEnterGameReply) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type SingleEnterGameTryReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlatformKey   int64                  `protobuf:"varint,1,opt,name=platform_key,json=platformKey,proto3" json:"platform_key,omitempty"`   //游戏平台key  唯一标识
	GameKey       int64                  `protobuf:"varint,2,opt,name=game_key,json=gameKey,proto3" json:"game_key,omitempty"`               //游戏标志
	UserId        uint64                 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                  //用户ID
	UserToken     string                 `protobuf:"bytes,4,opt,name=user_token,json=userToken,proto3" json:"user_token,omitempty"`          //用户TOKEN
	Language      string                 `protobuf:"bytes,5,opt,name=language,proto3" json:"language,omitempty"`                             //语言
	CurrencyCode  string                 `protobuf:"bytes,6,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"` //货币Code
	Param         string                 `protobuf:"bytes,7,opt,name=param,proto3" json:"param,omitempty"`                                   //参数
	OsType        string                 `protobuf:"bytes,8,opt,name=os_type,json=osType,proto3" json:"os_type,omitempty"`                   //类型 “web” or “android” or "h5" or "ios"
	Referer       string                 `protobuf:"bytes,9,opt,name=referer,proto3" json:"referer,omitempty"`                               //请求页面
	UserIp        string                 `protobuf:"bytes,10,opt,name=user_ip,json=userIp,proto3" json:"user_ip,omitempty"`                  //玩家IP
	Nickname      string                 `protobuf:"bytes,11,opt,name=nickname,proto3" json:"nickname,omitempty"`
	UserAvatar    string                 `protobuf:"bytes,12,opt,name=user_avatar,json=userAvatar,proto3" json:"user_avatar,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SingleEnterGameTryReq) Reset() {
	*x = SingleEnterGameTryReq{}
	mi := &file_game_v1_game_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SingleEnterGameTryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleEnterGameTryReq) ProtoMessage() {}

func (x *SingleEnterGameTryReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleEnterGameTryReq.ProtoReflect.Descriptor instead.
func (*SingleEnterGameTryReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{4}
}

func (x *SingleEnterGameTryReq) GetPlatformKey() int64 {
	if x != nil {
		return x.PlatformKey
	}
	return 0
}

func (x *SingleEnterGameTryReq) GetGameKey() int64 {
	if x != nil {
		return x.GameKey
	}
	return 0
}

func (x *SingleEnterGameTryReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SingleEnterGameTryReq) GetUserToken() string {
	if x != nil {
		return x.UserToken
	}
	return ""
}

func (x *SingleEnterGameTryReq) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *SingleEnterGameTryReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *SingleEnterGameTryReq) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

func (x *SingleEnterGameTryReq) GetOsType() string {
	if x != nil {
		return x.OsType
	}
	return ""
}

func (x *SingleEnterGameTryReq) GetReferer() string {
	if x != nil {
		return x.Referer
	}
	return ""
}

func (x *SingleEnterGameTryReq) GetUserIp() string {
	if x != nil {
		return x.UserIp
	}
	return ""
}

func (x *SingleEnterGameTryReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SingleEnterGameTryReq) GetUserAvatar() string {
	if x != nil {
		return x.UserAvatar
	}
	return ""
}

type SingleEnterGameTryReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"` //游戏地址
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SingleEnterGameTryReply) Reset() {
	*x = SingleEnterGameTryReply{}
	mi := &file_game_v1_game_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SingleEnterGameTryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleEnterGameTryReply) ProtoMessage() {}

func (x *SingleEnterGameTryReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleEnterGameTryReply.ProtoReflect.Descriptor instead.
func (*SingleEnterGameTryReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{5}
}

func (x *SingleEnterGameTryReply) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type TransferEnterGameReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlatformKey   int64                  `protobuf:"varint,1,opt,name=platform_key,json=platformKey,proto3" json:"platform_key,omitempty"`   //游戏平台key  唯一标识
	GameKey       int64                  `protobuf:"varint,2,opt,name=game_key,json=gameKey,proto3" json:"game_key,omitempty"`               //游戏标志
	UserId        int64                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                  //用户ID
	UserToken     string                 `protobuf:"bytes,4,opt,name=user_token,json=userToken,proto3" json:"user_token,omitempty"`          //用户TOKEN
	Language      string                 `protobuf:"bytes,5,opt,name=language,proto3" json:"language,omitempty"`                             //语言
	CurrencyCode  string                 `protobuf:"bytes,6,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"` //货币Code
	Param         string                 `protobuf:"bytes,7,opt,name=param,proto3" json:"param,omitempty"`                                   //参数
	ShowScene     string                 `protobuf:"bytes,8,opt,name=show_scene,json=showScene,proto3" json:"show_scene,omitempty"`          //游戏进入场景
	OsType        string                 `protobuf:"bytes,9,opt,name=os_type,json=osType,proto3" json:"os_type,omitempty"`                   //类型 “web” or “android” or "h5" or "ios"
	Referer       string                 `protobuf:"bytes,10,opt,name=referer,proto3" json:"referer,omitempty"`                              //请求页面
	UserIp        string                 `protobuf:"bytes,11,opt,name=user_ip,json=userIp,proto3" json:"user_ip,omitempty"`                  //玩家IP
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferEnterGameReq) Reset() {
	*x = TransferEnterGameReq{}
	mi := &file_game_v1_game_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferEnterGameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferEnterGameReq) ProtoMessage() {}

func (x *TransferEnterGameReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferEnterGameReq.ProtoReflect.Descriptor instead.
func (*TransferEnterGameReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{6}
}

func (x *TransferEnterGameReq) GetPlatformKey() int64 {
	if x != nil {
		return x.PlatformKey
	}
	return 0
}

func (x *TransferEnterGameReq) GetGameKey() int64 {
	if x != nil {
		return x.GameKey
	}
	return 0
}

func (x *TransferEnterGameReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TransferEnterGameReq) GetUserToken() string {
	if x != nil {
		return x.UserToken
	}
	return ""
}

func (x *TransferEnterGameReq) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *TransferEnterGameReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *TransferEnterGameReq) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

func (x *TransferEnterGameReq) GetShowScene() string {
	if x != nil {
		return x.ShowScene
	}
	return ""
}

func (x *TransferEnterGameReq) GetOsType() string {
	if x != nil {
		return x.OsType
	}
	return ""
}

func (x *TransferEnterGameReq) GetReferer() string {
	if x != nil {
		return x.Referer
	}
	return ""
}

func (x *TransferEnterGameReq) GetUserIp() string {
	if x != nil {
		return x.UserIp
	}
	return ""
}

type TransferEnterGameReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"` //游戏地址
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferEnterGameReply) Reset() {
	*x = TransferEnterGameReply{}
	mi := &file_game_v1_game_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferEnterGameReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferEnterGameReply) ProtoMessage() {}

func (x *TransferEnterGameReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferEnterGameReply.ProtoReflect.Descriptor instead.
func (*TransferEnterGameReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{7}
}

func (x *TransferEnterGameReply) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type WalletTransferInGameReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlatformKey   int64                  `protobuf:"varint,1,opt,name=platform_key,json=platformKey,proto3" json:"platform_key,omitempty"`   //游戏平台key  唯一标识
	GameKey       int64                  `protobuf:"varint,2,opt,name=game_key,json=gameKey,proto3" json:"game_key,omitempty"`               //游戏标志
	UserId        int64                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                  //用户ID
	CurrencyCode  string                 `protobuf:"bytes,4,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"` //货币Code
	Amount        int64                  `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`                                //金额  整数且大于0
	GameOrderNo   string                 `protobuf:"bytes,6,opt,name=game_order_no,json=gameOrderNo,proto3" json:"game_order_no,omitempty"`  // 订单号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WalletTransferInGameReq) Reset() {
	*x = WalletTransferInGameReq{}
	mi := &file_game_v1_game_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WalletTransferInGameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletTransferInGameReq) ProtoMessage() {}

func (x *WalletTransferInGameReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletTransferInGameReq.ProtoReflect.Descriptor instead.
func (*WalletTransferInGameReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{8}
}

func (x *WalletTransferInGameReq) GetPlatformKey() int64 {
	if x != nil {
		return x.PlatformKey
	}
	return 0
}

func (x *WalletTransferInGameReq) GetGameKey() int64 {
	if x != nil {
		return x.GameKey
	}
	return 0
}

func (x *WalletTransferInGameReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *WalletTransferInGameReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *WalletTransferInGameReq) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *WalletTransferInGameReq) GetGameOrderNo() string {
	if x != nil {
		return x.GameOrderNo
	}
	return ""
}

type WalletTransferInGameReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`                               //成功状态， true：成功，false 失败
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                 //用户ID
	Amount        int64                  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`                               //金额
	GameOrderNo   string                 `protobuf:"bytes,4,opt,name=game_order_no,json=gameOrderNo,proto3" json:"game_order_no,omitempty"` //转入订单编号
	ErrMsg        string                 `protobuf:"bytes,5,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`                  //失败消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WalletTransferInGameReply) Reset() {
	*x = WalletTransferInGameReply{}
	mi := &file_game_v1_game_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WalletTransferInGameReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletTransferInGameReply) ProtoMessage() {}

func (x *WalletTransferInGameReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletTransferInGameReply.ProtoReflect.Descriptor instead.
func (*WalletTransferInGameReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{9}
}

func (x *WalletTransferInGameReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *WalletTransferInGameReply) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *WalletTransferInGameReply) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *WalletTransferInGameReply) GetGameOrderNo() string {
	if x != nil {
		return x.GameOrderNo
	}
	return ""
}

func (x *WalletTransferInGameReply) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type WalletTransferInGameReqV2 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameId        int64                  `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`                 //游戏标志
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                 //用户ID
	Amount        int64                  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`                               //金额  整数且大于0
	GameOrderNo   string                 `protobuf:"bytes,4,opt,name=game_order_no,json=gameOrderNo,proto3" json:"game_order_no,omitempty"` // 订单号
	DeviceOs      string                 `protobuf:"bytes,5,opt,name=device_os,json=deviceOs,proto3" json:"device_os,omitempty"`            //设备类型
	DeviceId      string                 `protobuf:"bytes,6,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`            //设备ID
	ClientIp      string                 `protobuf:"bytes,7,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`            //IP
	Language      string                 `protobuf:"bytes,8,opt,name=language,proto3" json:"language,omitempty"`                            // 语言code
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WalletTransferInGameReqV2) Reset() {
	*x = WalletTransferInGameReqV2{}
	mi := &file_game_v1_game_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WalletTransferInGameReqV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletTransferInGameReqV2) ProtoMessage() {}

func (x *WalletTransferInGameReqV2) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletTransferInGameReqV2.ProtoReflect.Descriptor instead.
func (*WalletTransferInGameReqV2) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{10}
}

func (x *WalletTransferInGameReqV2) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *WalletTransferInGameReqV2) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *WalletTransferInGameReqV2) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *WalletTransferInGameReqV2) GetGameOrderNo() string {
	if x != nil {
		return x.GameOrderNo
	}
	return ""
}

func (x *WalletTransferInGameReqV2) GetDeviceOs() string {
	if x != nil {
		return x.DeviceOs
	}
	return ""
}

func (x *WalletTransferInGameReqV2) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *WalletTransferInGameReqV2) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *WalletTransferInGameReqV2) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type WalletTransferInGameReplyV2 struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserId         int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                         //用户ID
	Amount         int64                  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`                                       //金额
	GameOrderNo    string                 `protobuf:"bytes,3,opt,name=game_order_no,json=gameOrderNo,proto3" json:"game_order_no,omitempty"`         //转入订单编号
	GameLink       string                 `protobuf:"bytes,4,opt,name=game_link,json=gameLink,proto3" json:"game_link,omitempty"`                    // 游戏链接
	TransferStatus int64                  `protobuf:"varint,5,opt,name=transfer_status,json=transferStatus,proto3" json:"transfer_status,omitempty"` // 转账状态 0 处理中 1 成功 2 失败 3 未处理
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WalletTransferInGameReplyV2) Reset() {
	*x = WalletTransferInGameReplyV2{}
	mi := &file_game_v1_game_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WalletTransferInGameReplyV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletTransferInGameReplyV2) ProtoMessage() {}

func (x *WalletTransferInGameReplyV2) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletTransferInGameReplyV2.ProtoReflect.Descriptor instead.
func (*WalletTransferInGameReplyV2) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{11}
}

func (x *WalletTransferInGameReplyV2) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *WalletTransferInGameReplyV2) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *WalletTransferInGameReplyV2) GetGameOrderNo() string {
	if x != nil {
		return x.GameOrderNo
	}
	return ""
}

func (x *WalletTransferInGameReplyV2) GetGameLink() string {
	if x != nil {
		return x.GameLink
	}
	return ""
}

func (x *WalletTransferInGameReplyV2) GetTransferStatus() int64 {
	if x != nil {
		return x.TransferStatus
	}
	return 0
}

type WalletTransferOutGameReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlatformKey   int64                  `protobuf:"varint,1,opt,name=platform_key,json=platformKey,proto3" json:"platform_key,omitempty"`   //游戏平台key  唯一标识
	GameKey       int64                  `protobuf:"varint,2,opt,name=game_key,json=gameKey,proto3" json:"game_key,omitempty"`               //游戏标志
	UserId        int64                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                  //用户ID
	CurrencyCode  string                 `protobuf:"bytes,4,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"` //货币Code
	Amount        string                 `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`                                 //金额
	GameOrderNo   string                 `protobuf:"bytes,6,opt,name=game_order_no,json=gameOrderNo,proto3" json:"game_order_no,omitempty"`  // 订单号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WalletTransferOutGameReq) Reset() {
	*x = WalletTransferOutGameReq{}
	mi := &file_game_v1_game_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WalletTransferOutGameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletTransferOutGameReq) ProtoMessage() {}

func (x *WalletTransferOutGameReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletTransferOutGameReq.ProtoReflect.Descriptor instead.
func (*WalletTransferOutGameReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{12}
}

func (x *WalletTransferOutGameReq) GetPlatformKey() int64 {
	if x != nil {
		return x.PlatformKey
	}
	return 0
}

func (x *WalletTransferOutGameReq) GetGameKey() int64 {
	if x != nil {
		return x.GameKey
	}
	return 0
}

func (x *WalletTransferOutGameReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *WalletTransferOutGameReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *WalletTransferOutGameReq) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *WalletTransferOutGameReq) GetGameOrderNo() string {
	if x != nil {
		return x.GameOrderNo
	}
	return ""
}

type WalletTransferOutGameReply struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Status             bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`                                                     //成功状态， true：成功，false 失败
	UserId             int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                       //用户ID
	Amount             string                 `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`                                                      //金额
	GameOrderNo        string                 `protobuf:"bytes,4,opt,name=game_order_no,json=gameOrderNo,proto3" json:"game_order_no,omitempty"`                       //转出订单编号
	ErrMsg             string                 `protobuf:"bytes,5,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`                                        //失败消息
	SkipMqDone         int32                  `protobuf:"varint,6,opt,name=skip_mq_done,json=skipMqDone,proto3" json:"skip_mq_done,omitempty"`                         // 是否跳过mq回调 1:跳过 0:不跳过
	MiddlePlatformType int32                  `protobuf:"varint,7,opt,name=middle_platform_type,json=middlePlatformType,proto3" json:"middle_platform_type,omitempty"` // 中台类型 1 老中台 2 新中台
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *WalletTransferOutGameReply) Reset() {
	*x = WalletTransferOutGameReply{}
	mi := &file_game_v1_game_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WalletTransferOutGameReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletTransferOutGameReply) ProtoMessage() {}

func (x *WalletTransferOutGameReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletTransferOutGameReply.ProtoReflect.Descriptor instead.
func (*WalletTransferOutGameReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{13}
}

func (x *WalletTransferOutGameReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *WalletTransferOutGameReply) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *WalletTransferOutGameReply) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *WalletTransferOutGameReply) GetGameOrderNo() string {
	if x != nil {
		return x.GameOrderNo
	}
	return ""
}

func (x *WalletTransferOutGameReply) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *WalletTransferOutGameReply) GetSkipMqDone() int32 {
	if x != nil {
		return x.SkipMqDone
	}
	return 0
}

func (x *WalletTransferOutGameReply) GetMiddlePlatformType() int32 {
	if x != nil {
		return x.MiddlePlatformType
	}
	return 0
}

type GetWalletTransferBalanceReq struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	PlatformKey          int64                  `protobuf:"varint,1,opt,name=platform_key,json=platformKey,proto3" json:"platform_key,omitempty"`                              //游戏平台key  唯一标识
	GameKey              int64                  `protobuf:"varint,2,opt,name=game_key,json=gameKey,proto3" json:"game_key,omitempty"`                                          //
	TripartitePlatformId int64                  `protobuf:"varint,3,opt,name=tripartite_platform_id,json=tripartitePlatformId,proto3" json:"tripartite_platform_id,omitempty"` // 三方平台ID
	UserId               int64                  `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                             //用户ID
	CurrencyCode         string                 `protobuf:"bytes,5,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`                            //货币Code
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetWalletTransferBalanceReq) Reset() {
	*x = GetWalletTransferBalanceReq{}
	mi := &file_game_v1_game_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletTransferBalanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletTransferBalanceReq) ProtoMessage() {}

func (x *GetWalletTransferBalanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletTransferBalanceReq.ProtoReflect.Descriptor instead.
func (*GetWalletTransferBalanceReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{14}
}

func (x *GetWalletTransferBalanceReq) GetPlatformKey() int64 {
	if x != nil {
		return x.PlatformKey
	}
	return 0
}

func (x *GetWalletTransferBalanceReq) GetGameKey() int64 {
	if x != nil {
		return x.GameKey
	}
	return 0
}

func (x *GetWalletTransferBalanceReq) GetTripartitePlatformId() int64 {
	if x != nil {
		return x.TripartitePlatformId
	}
	return 0
}

func (x *GetWalletTransferBalanceReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetWalletTransferBalanceReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

type GetWalletTransferBalanceReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                  //用户ID
	CurrencyCode  string                 `protobuf:"bytes,2,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"` //货币Code
	Amount        string                 `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`                                 //金额
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWalletTransferBalanceReply) Reset() {
	*x = GetWalletTransferBalanceReply{}
	mi := &file_game_v1_game_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletTransferBalanceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletTransferBalanceReply) ProtoMessage() {}

func (x *GetWalletTransferBalanceReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletTransferBalanceReply.ProtoReflect.Descriptor instead.
func (*GetWalletTransferBalanceReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{15}
}

func (x *GetWalletTransferBalanceReply) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetWalletTransferBalanceReply) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *GetWalletTransferBalanceReply) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type GetWalletTransferBalanceReqV2 struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	PlatformKey          int64                  `protobuf:"varint,1,opt,name=platform_key,json=platformKey,proto3" json:"platform_key,omitempty"`                              // 三方平台ID
	GameKey              int64                  `protobuf:"varint,2,opt,name=game_key,json=gameKey,proto3" json:"game_key,omitempty"`                                          // 游戏id
	TripartitePlatformId int64                  `protobuf:"varint,3,opt,name=tripartite_platform_id,json=tripartitePlatformId,proto3" json:"tripartite_platform_id,omitempty"` // 三方平台ID
	UserId               int64                  `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                             //用户ID
	CurrencyCode         string                 `protobuf:"bytes,5,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`                            //货币Code
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetWalletTransferBalanceReqV2) Reset() {
	*x = GetWalletTransferBalanceReqV2{}
	mi := &file_game_v1_game_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletTransferBalanceReqV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletTransferBalanceReqV2) ProtoMessage() {}

func (x *GetWalletTransferBalanceReqV2) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletTransferBalanceReqV2.ProtoReflect.Descriptor instead.
func (*GetWalletTransferBalanceReqV2) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{16}
}

func (x *GetWalletTransferBalanceReqV2) GetPlatformKey() int64 {
	if x != nil {
		return x.PlatformKey
	}
	return 0
}

func (x *GetWalletTransferBalanceReqV2) GetGameKey() int64 {
	if x != nil {
		return x.GameKey
	}
	return 0
}

func (x *GetWalletTransferBalanceReqV2) GetTripartitePlatformId() int64 {
	if x != nil {
		return x.TripartitePlatformId
	}
	return 0
}

func (x *GetWalletTransferBalanceReqV2) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetWalletTransferBalanceReqV2) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

type GetWalletTransferBalanceReplyV2 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                  //用户ID
	CurrencyCode  string                 `protobuf:"bytes,2,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"` //货币Code
	Amount        string                 `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`                                 //金额
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWalletTransferBalanceReplyV2) Reset() {
	*x = GetWalletTransferBalanceReplyV2{}
	mi := &file_game_v1_game_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletTransferBalanceReplyV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletTransferBalanceReplyV2) ProtoMessage() {}

func (x *GetWalletTransferBalanceReplyV2) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletTransferBalanceReplyV2.ProtoReflect.Descriptor instead.
func (*GetWalletTransferBalanceReplyV2) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{17}
}

func (x *GetWalletTransferBalanceReplyV2) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetWalletTransferBalanceReplyV2) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *GetWalletTransferBalanceReplyV2) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type GetGameTransferOrderStatusReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlatformKey   string                 `protobuf:"bytes,1,opt,name=platform_key,json=platformKey,proto3" json:"platform_key,omitempty"` //游戏平台key  唯一标识
	OrderNo       []string               `protobuf:"bytes,2,rep,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`             //订单编号 最多100个
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGameTransferOrderStatusReq) Reset() {
	*x = GetGameTransferOrderStatusReq{}
	mi := &file_game_v1_game_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameTransferOrderStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameTransferOrderStatusReq) ProtoMessage() {}

func (x *GetGameTransferOrderStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameTransferOrderStatusReq.ProtoReflect.Descriptor instead.
func (*GetGameTransferOrderStatusReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{18}
}

func (x *GetGameTransferOrderStatusReq) GetPlatformKey() string {
	if x != nil {
		return x.PlatformKey
	}
	return ""
}

func (x *GetGameTransferOrderStatusReq) GetOrderNo() []string {
	if x != nil {
		return x.OrderNo
	}
	return nil
}

type GetGameTransferOrderStatusReply struct {
	state         protoimpl.MessageState                               `protogen:"open.v1"`
	Orders        map[string]*GetGameTransferOrderStatusReplyOrderInfo `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGameTransferOrderStatusReply) Reset() {
	*x = GetGameTransferOrderStatusReply{}
	mi := &file_game_v1_game_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameTransferOrderStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameTransferOrderStatusReply) ProtoMessage() {}

func (x *GetGameTransferOrderStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameTransferOrderStatusReply.ProtoReflect.Descriptor instead.
func (*GetGameTransferOrderStatusReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{19}
}

func (x *GetGameTransferOrderStatusReply) GetOrders() map[string]*GetGameTransferOrderStatusReplyOrderInfo {
	if x != nil {
		return x.Orders
	}
	return nil
}

type GetGameTransferBetOrderListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     string                 `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` //开始时间 查询玩家投注记录，按最后更新时间查询，最多查询上一个月数据。
	EndTime       string                 `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       //结束时间 投注记录统一使用 UTC 时区，且投注记录会有 2 分钟左右的延迟，请查询当前时间前
	PageNumber    int64                  `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGameTransferBetOrderListReq) Reset() {
	*x = GetGameTransferBetOrderListReq{}
	mi := &file_game_v1_game_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameTransferBetOrderListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameTransferBetOrderListReq) ProtoMessage() {}

func (x *GetGameTransferBetOrderListReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameTransferBetOrderListReq.ProtoReflect.Descriptor instead.
func (*GetGameTransferBetOrderListReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{20}
}

func (x *GetGameTransferBetOrderListReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetGameTransferBetOrderListReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *GetGameTransferBetOrderListReq) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type TransferBetRecord struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Id                   int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                   // 记录 ID
	MerchantKey          string                 `protobuf:"bytes,2,opt,name=merchant_key,json=merchantKey,proto3" json:"merchant_key,omitempty"`                               // 商户 KEY
	UserId               string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                              // 玩家唯一标识
	TrilateralPlatformId int64                  `protobuf:"varint,4,opt,name=trilateral_platform_id,json=trilateralPlatformId,proto3" json:"trilateral_platform_id,omitempty"` // 厂商 ID
	TrilateralGameId     int64                  `protobuf:"varint,5,opt,name=trilateral_game_id,json=trilateralGameId,proto3" json:"trilateral_game_id,omitempty"`             // 游戏 ID
	GameName             string                 `protobuf:"bytes,6,opt,name=game_name,json=gameName,proto3" json:"game_name,omitempty"`                                        // 游戏名称
	BetId                string                 `protobuf:"bytes,7,opt,name=bet_id,json=betId,proto3" json:"bet_id,omitempty"`                                                 // 投注 ID
	Currency             string                 `protobuf:"bytes,8,opt,name=currency,proto3" json:"currency,omitempty"`                                                        // 货币
	Status               int64                  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`                                                           // 投注状态（1 未结算 2 已结算 3 已取消 4 无效）
	BetTime              string                 `protobuf:"bytes,10,opt,name=bet_time,json=betTime,proto3" json:"bet_time,omitempty"`                                          // 投注时间（字符串）
	SettleTime           string                 `protobuf:"bytes,11,opt,name=settle_time,json=settleTime,proto3" json:"settle_time,omitempty"`                                 // 结算时间（字符串）
	UpdateTime           string                 `protobuf:"bytes,12,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`                                 // 最后更新时间（字符串）
	BetDetail            string                 `protobuf:"bytes,13,opt,name=bet_detail,json=betDetail,proto3" json:"bet_detail,omitempty"`                                    // 投注记录详细，JSON 字符串
	BetAmount            string                 `protobuf:"bytes,14,opt,name=bet_amount,json=betAmount,proto3" json:"bet_amount,omitempty"`                                    // 投注金额（作为字符串）
	PayAmount            string                 `protobuf:"bytes,15,opt,name=pay_amount,json=payAmount,proto3" json:"pay_amount,omitempty"`                                    // 赔付金额（作为字符串）
	ProfitLoss           string                 `protobuf:"bytes,16,opt,name=profit_loss,json=profitLoss,proto3" json:"profit_loss,omitempty"`                                 // 输赢金额（作为字符串）
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *TransferBetRecord) Reset() {
	*x = TransferBetRecord{}
	mi := &file_game_v1_game_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferBetRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferBetRecord) ProtoMessage() {}

func (x *TransferBetRecord) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferBetRecord.ProtoReflect.Descriptor instead.
func (*TransferBetRecord) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{21}
}

func (x *TransferBetRecord) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TransferBetRecord) GetMerchantKey() string {
	if x != nil {
		return x.MerchantKey
	}
	return ""
}

func (x *TransferBetRecord) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TransferBetRecord) GetTrilateralPlatformId() int64 {
	if x != nil {
		return x.TrilateralPlatformId
	}
	return 0
}

func (x *TransferBetRecord) GetTrilateralGameId() int64 {
	if x != nil {
		return x.TrilateralGameId
	}
	return 0
}

func (x *TransferBetRecord) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *TransferBetRecord) GetBetId() string {
	if x != nil {
		return x.BetId
	}
	return ""
}

func (x *TransferBetRecord) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *TransferBetRecord) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TransferBetRecord) GetBetTime() string {
	if x != nil {
		return x.BetTime
	}
	return ""
}

func (x *TransferBetRecord) GetSettleTime() string {
	if x != nil {
		return x.SettleTime
	}
	return ""
}

func (x *TransferBetRecord) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *TransferBetRecord) GetBetDetail() string {
	if x != nil {
		return x.BetDetail
	}
	return ""
}

func (x *TransferBetRecord) GetBetAmount() string {
	if x != nil {
		return x.BetAmount
	}
	return ""
}

func (x *TransferBetRecord) GetPayAmount() string {
	if x != nil {
		return x.PayAmount
	}
	return ""
}

func (x *TransferBetRecord) GetProfitLoss() string {
	if x != nil {
		return x.ProfitLoss
	}
	return ""
}

type GetGameTransferBetOrderListReply struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TotalPage      int64                  `protobuf:"varint,1,opt,name=total_page,json=totalPage,proto3" json:"total_page,omitempty"`                  //总页数
	CurrentPage    int64                  `protobuf:"varint,2,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"`            //当前页数
	LastUpdateDate int64                  `protobuf:"varint,3,opt,name=last_update_date,json=lastUpdateDate,proto3" json:"last_update_date,omitempty"` //本批次数据的最后更新时间
	BetList        []*TransferBetRecord   `protobuf:"bytes,4,rep,name=bet_list,json=betList,proto3" json:"bet_list,omitempty"`                         //订单列表
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetGameTransferBetOrderListReply) Reset() {
	*x = GetGameTransferBetOrderListReply{}
	mi := &file_game_v1_game_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameTransferBetOrderListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameTransferBetOrderListReply) ProtoMessage() {}

func (x *GetGameTransferBetOrderListReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameTransferBetOrderListReply.ProtoReflect.Descriptor instead.
func (*GetGameTransferBetOrderListReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{22}
}

func (x *GetGameTransferBetOrderListReply) GetTotalPage() int64 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

func (x *GetGameTransferBetOrderListReply) GetCurrentPage() int64 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *GetGameTransferBetOrderListReply) GetLastUpdateDate() int64 {
	if x != nil {
		return x.LastUpdateDate
	}
	return 0
}

func (x *GetGameTransferBetOrderListReply) GetBetList() []*TransferBetRecord {
	if x != nil {
		return x.BetList
	}
	return nil
}

type GetGameTransferOrderStatusV2Req struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`   //游戏平台key  唯一标识
	OrderNo       []string               `protobuf:"bytes,2,rep,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"` //订单编号 最多100个
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGameTransferOrderStatusV2Req) Reset() {
	*x = GetGameTransferOrderStatusV2Req{}
	mi := &file_game_v1_game_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameTransferOrderStatusV2Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameTransferOrderStatusV2Req) ProtoMessage() {}

func (x *GetGameTransferOrderStatusV2Req) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameTransferOrderStatusV2Req.ProtoReflect.Descriptor instead.
func (*GetGameTransferOrderStatusV2Req) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{23}
}

func (x *GetGameTransferOrderStatusV2Req) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetGameTransferOrderStatusV2Req) GetOrderNo() []string {
	if x != nil {
		return x.OrderNo
	}
	return nil
}

// 获取K9游戏接入key
type GetK9GameAccessKeyReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          int64                  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"` // 1：单一钱包，2：转账钱包
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetK9GameAccessKeyReq) Reset() {
	*x = GetK9GameAccessKeyReq{}
	mi := &file_game_v1_game_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetK9GameAccessKeyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetK9GameAccessKeyReq) ProtoMessage() {}

func (x *GetK9GameAccessKeyReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetK9GameAccessKeyReq.ProtoReflect.Descriptor instead.
func (*GetK9GameAccessKeyReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{24}
}

func (x *GetK9GameAccessKeyReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

// 获取K9游戏接入key
type GetK9GameAccessKeyReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccessKey     string                 `protobuf:"bytes,1,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetK9GameAccessKeyReply) Reset() {
	*x = GetK9GameAccessKeyReply{}
	mi := &file_game_v1_game_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetK9GameAccessKeyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetK9GameAccessKeyReply) ProtoMessage() {}

func (x *GetK9GameAccessKeyReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetK9GameAccessKeyReply.ProtoReflect.Descriptor instead.
func (*GetK9GameAccessKeyReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{25}
}

func (x *GetK9GameAccessKeyReply) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

// 游戏投注创建请求
type GameUserBetReq struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	WalletModel      int64                  `protobuf:"varint,1,opt,name=wallet_model,json=walletModel,proto3" json:"wallet_model,omitempty"`                  // 钱包模式：1：单一钱包，2：转账钱包
	UserId           int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                 // 用户ID
	TripartiteGameId int64                  `protobuf:"varint,3,opt,name=tripartite_game_id,json=tripartiteGameId,proto3" json:"tripartite_game_id,omitempty"` // 三方游戏id
	RoundId          string                 `protobuf:"bytes,4,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"`                               // 牌局 ID
	OrderNo          string                 `protobuf:"bytes,5,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`                               // 投注订单号(每笔记录唯一)
	Amount           string                 `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`                                                //投注金额(6 位小数)
	CurrencyCode     string                 `protobuf:"bytes,7,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`                // 玩家货币code
	Timestamp        int64                  `protobuf:"varint,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                         //时间戳（毫秒）
	PostBetBalance   int64                  `protobuf:"varint,9,opt,name=post_bet_balance,json=postBetBalance,proto3" json:"post_bet_balance,omitempty"`       //投注后余额
	OrderId          string                 `protobuf:"bytes,10,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                              // 内部订单号(数据表的order_id)
	WeiBetAmount     int64                  `protobuf:"varint,11,opt,name=wei_bet_amount,json=weiBetAmount,proto3" json:"wei_bet_amount,omitempty"`            // 内部的投注金额
	MsgId            string                 `protobuf:"bytes,12,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`                                    // mq的消息ID
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GameUserBetReq) Reset() {
	*x = GameUserBetReq{}
	mi := &file_game_v1_game_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameUserBetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameUserBetReq) ProtoMessage() {}

func (x *GameUserBetReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameUserBetReq.ProtoReflect.Descriptor instead.
func (*GameUserBetReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{26}
}

func (x *GameUserBetReq) GetWalletModel() int64 {
	if x != nil {
		return x.WalletModel
	}
	return 0
}

func (x *GameUserBetReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GameUserBetReq) GetTripartiteGameId() int64 {
	if x != nil {
		return x.TripartiteGameId
	}
	return 0
}

func (x *GameUserBetReq) GetRoundId() string {
	if x != nil {
		return x.RoundId
	}
	return ""
}

func (x *GameUserBetReq) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *GameUserBetReq) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *GameUserBetReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *GameUserBetReq) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GameUserBetReq) GetPostBetBalance() int64 {
	if x != nil {
		return x.PostBetBalance
	}
	return 0
}

func (x *GameUserBetReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *GameUserBetReq) GetWeiBetAmount() int64 {
	if x != nil {
		return x.WeiBetAmount
	}
	return 0
}

func (x *GameUserBetReq) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

// 游戏投注创建回应
type GameUserBetReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Balance       string                 `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`                               //用户余额
	CurrencyCode  string                 `protobuf:"bytes,2,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"` //货币代码
	OrderId       string                 `protobuf:"bytes,3,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                // 投注记录表内部订单号(数据表的order_id)
	BetRecordId   string                 `protobuf:"bytes,4,opt,name=bet_record_id,json=betRecordId,proto3" json:"bet_record_id,omitempty"`  // 投注记录表ID(数据表的ID)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameUserBetReply) Reset() {
	*x = GameUserBetReply{}
	mi := &file_game_v1_game_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameUserBetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameUserBetReply) ProtoMessage() {}

func (x *GameUserBetReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameUserBetReply.ProtoReflect.Descriptor instead.
func (*GameUserBetReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{27}
}

func (x *GameUserBetReply) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *GameUserBetReply) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *GameUserBetReply) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *GameUserBetReply) GetBetRecordId() string {
	if x != nil {
		return x.BetRecordId
	}
	return ""
}

// 游戏订单派奖创建
type GameUserRewardReq struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	WalletModel      int64                  `protobuf:"varint,1,opt,name=wallet_model,json=walletModel,proto3" json:"wallet_model,omitempty"`                  // 钱包模式：1：单一钱包，2：转账钱包
	UserId           int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                 // 用户ID
	TripartiteGameId int64                  `protobuf:"varint,3,opt,name=tripartite_game_id,json=tripartiteGameId,proto3" json:"tripartite_game_id,omitempty"` // 三方游戏id
	RoundId          string                 `protobuf:"bytes,4,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"`                               // 牌局 ID
	OrderNo          string                 `protobuf:"bytes,5,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`                               // 派奖订单号(每笔记录唯一)
	BetId            string                 `protobuf:"bytes,6,opt,name=bet_id,json=betId,proto3" json:"bet_id,omitempty"`                                     //对应的投注 ID，如果没有就会取牌局 ID
	RewardAmount     string                 `protobuf:"bytes,7,opt,name=reward_amount,json=rewardAmount,proto3" json:"reward_amount,omitempty"`                //交易金额，非负值
	CurrencyCode     string                 `protobuf:"bytes,8,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`                // 玩家货币code
	Timestamp        int64                  `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                         //时间戳（毫秒）
	WeiBetAmount     int64                  `protobuf:"varint,10,opt,name=wei_bet_amount,json=weiBetAmount,proto3" json:"wei_bet_amount,omitempty"`            // 内部的投注金额
	MsgId            string                 `protobuf:"bytes,11,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`                                    // mq的消息ID
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GameUserRewardReq) Reset() {
	*x = GameUserRewardReq{}
	mi := &file_game_v1_game_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameUserRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameUserRewardReq) ProtoMessage() {}

func (x *GameUserRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameUserRewardReq.ProtoReflect.Descriptor instead.
func (*GameUserRewardReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{28}
}

func (x *GameUserRewardReq) GetWalletModel() int64 {
	if x != nil {
		return x.WalletModel
	}
	return 0
}

func (x *GameUserRewardReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GameUserRewardReq) GetTripartiteGameId() int64 {
	if x != nil {
		return x.TripartiteGameId
	}
	return 0
}

func (x *GameUserRewardReq) GetRoundId() string {
	if x != nil {
		return x.RoundId
	}
	return ""
}

func (x *GameUserRewardReq) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *GameUserRewardReq) GetBetId() string {
	if x != nil {
		return x.BetId
	}
	return ""
}

func (x *GameUserRewardReq) GetRewardAmount() string {
	if x != nil {
		return x.RewardAmount
	}
	return ""
}

func (x *GameUserRewardReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *GameUserRewardReq) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GameUserRewardReq) GetWeiBetAmount() int64 {
	if x != nil {
		return x.WeiBetAmount
	}
	return 0
}

func (x *GameUserRewardReq) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

type GameUserRewardReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Balance       string                 `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`                               //余额
	CurrencyCode  string                 `protobuf:"bytes,2,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"` //货币代码
	OrderId       string                 `protobuf:"bytes,4,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                //订单ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameUserRewardReply) Reset() {
	*x = GameUserRewardReply{}
	mi := &file_game_v1_game_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameUserRewardReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameUserRewardReply) ProtoMessage() {}

func (x *GameUserRewardReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameUserRewardReply.ProtoReflect.Descriptor instead.
func (*GameUserRewardReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{29}
}

func (x *GameUserRewardReply) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *GameUserRewardReply) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *GameUserRewardReply) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

// 游戏投注撤销
type GameUserBetCancelReq struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	WalletModel       int64                  `protobuf:"varint,1,opt,name=wallet_model,json=walletModel,proto3" json:"wallet_model,omitempty"`                      // 钱包模式：1：单一钱包，2：转账钱包
	UserId            int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                     // 用户ID
	TripartiteGameId  int64                  `protobuf:"varint,3,opt,name=tripartite_game_id,json=tripartiteGameId,proto3" json:"tripartite_game_id,omitempty"`     // 三方游戏id
	RoundId           string                 `protobuf:"bytes,4,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"`                                   // 牌局 ID
	OrderNo           string                 `protobuf:"bytes,5,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`                                   // 订单号(每笔记录唯一)
	CancelOrderNo     string                 `protobuf:"bytes,6,opt,name=cancel_order_no,json=cancelOrderNo,proto3" json:"cancel_order_no,omitempty"`               //撤消投注/派奖的原商户订单号
	CancelPlatOrderNo string                 `protobuf:"bytes,7,opt,name=cancel_plat_order_no,json=cancelPlatOrderNo,proto3" json:"cancel_plat_order_no,omitempty"` //撤消投注/派奖的原平台订单号
	OrderAmount       string                 `protobuf:"bytes,8,opt,name=order_amount,json=orderAmount,proto3" json:"order_amount,omitempty"`                       //撤单金额(6 位小数)
	CurrencyCode      string                 `protobuf:"bytes,9,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`                    // 玩家货币code
	Timestamp         int64                  `protobuf:"varint,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                            //时间戳（毫秒）
	OrderDesc         string                 `protobuf:"bytes,11,opt,name=order_desc,json=orderDesc,proto3" json:"order_desc,omitempty"`                            //撤单说明
	CancelType        int64                  `protobuf:"varint,12,opt,name=cancel_type,json=cancelType,proto3" json:"cancel_type,omitempty"`                        //撤单类型：1 投注撤单，2 派奖撤单
	MsgId             string                 `protobuf:"bytes,13,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`                                        // mq的消息ID
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GameUserBetCancelReq) Reset() {
	*x = GameUserBetCancelReq{}
	mi := &file_game_v1_game_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameUserBetCancelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameUserBetCancelReq) ProtoMessage() {}

func (x *GameUserBetCancelReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameUserBetCancelReq.ProtoReflect.Descriptor instead.
func (*GameUserBetCancelReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{30}
}

func (x *GameUserBetCancelReq) GetWalletModel() int64 {
	if x != nil {
		return x.WalletModel
	}
	return 0
}

func (x *GameUserBetCancelReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GameUserBetCancelReq) GetTripartiteGameId() int64 {
	if x != nil {
		return x.TripartiteGameId
	}
	return 0
}

func (x *GameUserBetCancelReq) GetRoundId() string {
	if x != nil {
		return x.RoundId
	}
	return ""
}

func (x *GameUserBetCancelReq) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *GameUserBetCancelReq) GetCancelOrderNo() string {
	if x != nil {
		return x.CancelOrderNo
	}
	return ""
}

func (x *GameUserBetCancelReq) GetCancelPlatOrderNo() string {
	if x != nil {
		return x.CancelPlatOrderNo
	}
	return ""
}

func (x *GameUserBetCancelReq) GetOrderAmount() string {
	if x != nil {
		return x.OrderAmount
	}
	return ""
}

func (x *GameUserBetCancelReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *GameUserBetCancelReq) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GameUserBetCancelReq) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

func (x *GameUserBetCancelReq) GetCancelType() int64 {
	if x != nil {
		return x.CancelType
	}
	return 0
}

func (x *GameUserBetCancelReq) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

// 游戏投注撤销响应
type GameUserBetCancelReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Balance       string                 `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`                               //余额
	CurrencyCode  string                 `protobuf:"bytes,2,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"` //货币代码
	OrderId       string                 `protobuf:"bytes,4,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                //订单ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameUserBetCancelReply) Reset() {
	*x = GameUserBetCancelReply{}
	mi := &file_game_v1_game_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameUserBetCancelReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameUserBetCancelReply) ProtoMessage() {}

func (x *GameUserBetCancelReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameUserBetCancelReply.ProtoReflect.Descriptor instead.
func (*GameUserBetCancelReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{31}
}

func (x *GameUserBetCancelReply) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *GameUserBetCancelReply) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *GameUserBetCancelReply) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

// 游戏调整玩家余额(订单、活动等调整) 请求
type GameUserAdjustmentReq struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	WalletModel          int64                  `protobuf:"varint,1,opt,name=wallet_model,json=walletModel,proto3" json:"wallet_model,omitempty"`                              // 钱包模式：1：单一钱包，2：转账钱包
	UserId               int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                             // 用户ID
	TripartitePlatformId int64                  `protobuf:"varint,3,opt,name=tripartite_platform_id,json=tripartitePlatformId,proto3" json:"tripartite_platform_id,omitempty"` // 三方产商id
	TripartiteGameId     int64                  `protobuf:"varint,4,opt,name=tripartite_game_id,json=tripartiteGameId,proto3" json:"tripartite_game_id,omitempty"`             // 三方游戏id （可以为空）
	OrderNo              string                 `protobuf:"bytes,5,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`                                           // 订单号(每笔记录唯一)
	AdjustAmounts        string                 `protobuf:"bytes,6,opt,name=adjust_amounts,json=adjustAmounts,proto3" json:"adjust_amounts,omitempty"`                         //交易金额，加：正数，减：负数
	AdjustDesc           string                 `protobuf:"bytes,7,opt,name=adjust_desc,json=adjustDesc,proto3" json:"adjust_desc,omitempty"`                                  //调整描述
	CurrencyCode         string                 `protobuf:"bytes,8,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`                            //货币Code
	Timestamp            int64                  `protobuf:"varint,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                    //时间戳（毫秒）
	OrderId              string                 `protobuf:"bytes,11,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                                          //内部订单ID
	MsgId                string                 `protobuf:"bytes,12,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`                                                // mq的消息ID
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GameUserAdjustmentReq) Reset() {
	*x = GameUserAdjustmentReq{}
	mi := &file_game_v1_game_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameUserAdjustmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameUserAdjustmentReq) ProtoMessage() {}

func (x *GameUserAdjustmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameUserAdjustmentReq.ProtoReflect.Descriptor instead.
func (*GameUserAdjustmentReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{32}
}

func (x *GameUserAdjustmentReq) GetWalletModel() int64 {
	if x != nil {
		return x.WalletModel
	}
	return 0
}

func (x *GameUserAdjustmentReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GameUserAdjustmentReq) GetTripartitePlatformId() int64 {
	if x != nil {
		return x.TripartitePlatformId
	}
	return 0
}

func (x *GameUserAdjustmentReq) GetTripartiteGameId() int64 {
	if x != nil {
		return x.TripartiteGameId
	}
	return 0
}

func (x *GameUserAdjustmentReq) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *GameUserAdjustmentReq) GetAdjustAmounts() string {
	if x != nil {
		return x.AdjustAmounts
	}
	return ""
}

func (x *GameUserAdjustmentReq) GetAdjustDesc() string {
	if x != nil {
		return x.AdjustDesc
	}
	return ""
}

func (x *GameUserAdjustmentReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *GameUserAdjustmentReq) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GameUserAdjustmentReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *GameUserAdjustmentReq) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

// 游戏调整玩家余额(订单、活动等调整) 响应
type GameUserAdjustmentReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Balance       string                 `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`                               //余额
	CurrencyCode  string                 `protobuf:"bytes,2,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"` //货币代码
	OrderId       string                 `protobuf:"bytes,4,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                //订单ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameUserAdjustmentReply) Reset() {
	*x = GameUserAdjustmentReply{}
	mi := &file_game_v1_game_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameUserAdjustmentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameUserAdjustmentReply) ProtoMessage() {}

func (x *GameUserAdjustmentReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameUserAdjustmentReply.ProtoReflect.Descriptor instead.
func (*GameUserAdjustmentReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{33}
}

func (x *GameUserAdjustmentReply) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *GameUserAdjustmentReply) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *GameUserAdjustmentReply) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

// 游戏转账订单回调
type TransferCallbackReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OrderNo       string                 `protobuf:"bytes,3,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`                 //订单编号
	TransferType  int64                  `protobuf:"varint,4,opt,name=transfer_type,json=transferType,proto3" json:"transfer_type,omitempty"` //交易类型：1:转入 2:转出
	Status        int64                  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`                                 //状态：100(处理中) 200(成功) -100(失败)
	Amount        string                 `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`                                  //订单金额
	Description   string                 `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`                        //信息描述
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferCallbackReq) Reset() {
	*x = TransferCallbackReq{}
	mi := &file_game_v1_game_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferCallbackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferCallbackReq) ProtoMessage() {}

func (x *TransferCallbackReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferCallbackReq.ProtoReflect.Descriptor instead.
func (*TransferCallbackReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{34}
}

func (x *TransferCallbackReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TransferCallbackReq) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *TransferCallbackReq) GetTransferType() int64 {
	if x != nil {
		return x.TransferType
	}
	return 0
}

func (x *TransferCallbackReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TransferCallbackReq) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *TransferCallbackReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// 游戏转账订单回调响应
type TransferCallbackReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferCallbackReply) Reset() {
	*x = TransferCallbackReply{}
	mi := &file_game_v1_game_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferCallbackReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferCallbackReply) ProtoMessage() {}

func (x *TransferCallbackReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferCallbackReply.ProtoReflect.Descriptor instead.
func (*TransferCallbackReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{35}
}

type AddTripartiteTransferRecordReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OrderId        string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                         // 内部转账订单号
	UserId         int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                           // 用户ID
	GameId         int64                  `protobuf:"varint,3,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`                           // 游戏ID
	GamePlatformId int64                  `protobuf:"varint,4,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"` // 平台ID
	CurrencyCode   string                 `protobuf:"bytes,5,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`          // 货币代码
	Amount         int64                  `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`                                         // 操作金额
	Remark         string                 `protobuf:"bytes,12,opt,name=remark,proto3" json:"remark,omitempty"`                                         // 备注说明
	TransferType   int64                  `protobuf:"varint,13,opt,name=transfer_type,json=transferType,proto3" json:"transfer_type,omitempty"`        // 交易类型：1:转入 2:转出
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AddTripartiteTransferRecordReq) Reset() {
	*x = AddTripartiteTransferRecordReq{}
	mi := &file_game_v1_game_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTripartiteTransferRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTripartiteTransferRecordReq) ProtoMessage() {}

func (x *AddTripartiteTransferRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTripartiteTransferRecordReq.ProtoReflect.Descriptor instead.
func (*AddTripartiteTransferRecordReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{36}
}

func (x *AddTripartiteTransferRecordReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *AddTripartiteTransferRecordReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddTripartiteTransferRecordReq) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *AddTripartiteTransferRecordReq) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

func (x *AddTripartiteTransferRecordReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *AddTripartiteTransferRecordReq) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AddTripartiteTransferRecordReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AddTripartiteTransferRecordReq) GetTransferType() int64 {
	if x != nil {
		return x.TransferType
	}
	return 0
}

type AddTripartiteTransferRecordStatusReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OrderId        string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                         // 关联的转账订单号
	GamePlatformId int64                  `protobuf:"varint,2,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"` // 平台ID
	UserId         int64                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                           //用户ID
	TransferType   int64                  `protobuf:"varint,5,opt,name=transfer_type,json=transferType,proto3" json:"transfer_type,omitempty"`         //交易类型：1:转入 2:转出
	Status         int64                  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`                                         //转账状态， 1:处理中 2:处理成功 3:处理失败
	Amount         int64                  `protobuf:"varint,7,opt,name=amount,proto3" json:"amount,omitempty"`                                         //订单金额
	Msg            string                 `protobuf:"bytes,8,opt,name=msg,proto3" json:"msg,omitempty"`                                                //信息
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AddTripartiteTransferRecordStatusReq) Reset() {
	*x = AddTripartiteTransferRecordStatusReq{}
	mi := &file_game_v1_game_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTripartiteTransferRecordStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTripartiteTransferRecordStatusReq) ProtoMessage() {}

func (x *AddTripartiteTransferRecordStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTripartiteTransferRecordStatusReq.ProtoReflect.Descriptor instead.
func (*AddTripartiteTransferRecordStatusReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{37}
}

func (x *AddTripartiteTransferRecordStatusReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *AddTripartiteTransferRecordStatusReq) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

func (x *AddTripartiteTransferRecordStatusReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddTripartiteTransferRecordStatusReq) GetTransferType() int64 {
	if x != nil {
		return x.TransferType
	}
	return 0
}

func (x *AddTripartiteTransferRecordStatusReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddTripartiteTransferRecordStatusReq) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AddTripartiteTransferRecordStatusReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type TripartiteTransferRecordStatusReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OrderId        string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                         // 内部转账订单号
	UserId         int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                           // 用户ID
	GameId         int64                  `protobuf:"varint,3,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`                           // 游戏ID
	GamePlatformId int64                  `protobuf:"varint,4,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"` // 平台ID
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TripartiteTransferRecordStatusReq) Reset() {
	*x = TripartiteTransferRecordStatusReq{}
	mi := &file_game_v1_game_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TripartiteTransferRecordStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TripartiteTransferRecordStatusReq) ProtoMessage() {}

func (x *TripartiteTransferRecordStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TripartiteTransferRecordStatusReq.ProtoReflect.Descriptor instead.
func (*TripartiteTransferRecordStatusReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{38}
}

func (x *TripartiteTransferRecordStatusReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *TripartiteTransferRecordStatusReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TripartiteTransferRecordStatusReq) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *TripartiteTransferRecordStatusReq) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

type ProcessMessageTransferDataReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                   // 用户ID
	OrderNo       string                 `protobuf:"bytes,2,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`                 // 订单号
	Status        int64                  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`                                 // 状态：1(处理中) 2(成功) 3(失败)
	TransferType  int64                  `protobuf:"varint,4,opt,name=transfer_type,json=transferType,proto3" json:"transfer_type,omitempty"` //交易类型：1:转入 2:转出
	Amount        int64                  `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`                                 //订单金额（处理之后的数据）
	Description   string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`                        // 描述
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessMessageTransferDataReq) Reset() {
	*x = ProcessMessageTransferDataReq{}
	mi := &file_game_v1_game_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessMessageTransferDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessMessageTransferDataReq) ProtoMessage() {}

func (x *ProcessMessageTransferDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessMessageTransferDataReq.ProtoReflect.Descriptor instead.
func (*ProcessMessageTransferDataReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{39}
}

func (x *ProcessMessageTransferDataReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ProcessMessageTransferDataReq) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *ProcessMessageTransferDataReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ProcessMessageTransferDataReq) GetTransferType() int64 {
	if x != nil {
		return x.TransferType
	}
	return 0
}

func (x *ProcessMessageTransferDataReq) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ProcessMessageTransferDataReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ProcessMessageTransferDataReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"` //订单编号(内部)
	Status        int64                  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`                 //状态：1(处理中) 2(成功) 3(失败)
	UserId        int64                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	WalletType    int64                  `protobuf:"varint,4,opt,name=wallet_type,json=walletType,proto3" json:"wallet_type,omitempty"`      // 钱包类型 1：用户钱包,2：代理钱包,3：奖励钱包,4：余额宝
	Balance       int64                  `protobuf:"varint,5,opt,name=balance,proto3" json:"balance,omitempty"`                              //用户余额
	CurrencyCode  string                 `protobuf:"bytes,6,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"` // 货币代码
	GameId        int64                  `protobuf:"varint,7,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`                  // 游戏Id
	DealStatus    int64                  `protobuf:"varint,8,opt,name=deal_status,json=dealStatus,proto3" json:"deal_status,omitempty"`      // 是否处理，1：已处理，2：未处理
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessMessageTransferDataReply) Reset() {
	*x = ProcessMessageTransferDataReply{}
	mi := &file_game_v1_game_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessMessageTransferDataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessMessageTransferDataReply) ProtoMessage() {}

func (x *ProcessMessageTransferDataReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessMessageTransferDataReply.ProtoReflect.Descriptor instead.
func (*ProcessMessageTransferDataReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{40}
}

func (x *ProcessMessageTransferDataReply) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ProcessMessageTransferDataReply) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ProcessMessageTransferDataReply) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ProcessMessageTransferDataReply) GetWalletType() int64 {
	if x != nil {
		return x.WalletType
	}
	return 0
}

func (x *ProcessMessageTransferDataReply) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *ProcessMessageTransferDataReply) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *ProcessMessageTransferDataReply) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *ProcessMessageTransferDataReply) GetDealStatus() int64 {
	if x != nil {
		return x.DealStatus
	}
	return 0
}

type ProcessMessageTransferSendReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserId         int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Balance        int64                  `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`                                       //用户余额
	GameId         int64                  `protobuf:"varint,3,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`                           // 游戏Id
	OrderId        string                 `protobuf:"bytes,4,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                         //订单编号
	GamePlatformId int64                  `protobuf:"varint,6,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"` // 平台ID
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ProcessMessageTransferSendReq) Reset() {
	*x = ProcessMessageTransferSendReq{}
	mi := &file_game_v1_game_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessMessageTransferSendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessMessageTransferSendReq) ProtoMessage() {}

func (x *ProcessMessageTransferSendReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessMessageTransferSendReq.ProtoReflect.Descriptor instead.
func (*ProcessMessageTransferSendReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{41}
}

func (x *ProcessMessageTransferSendReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ProcessMessageTransferSendReq) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *ProcessMessageTransferSendReq) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *ProcessMessageTransferSendReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ProcessMessageTransferSendReq) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

type ProcessMessageTransferSendReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SendStatus    int64                  `protobuf:"varint,1,opt,name=send_status,json=sendStatus,proto3" json:"send_status,omitempty"` // 是否发送，1：已发送，2：未发送
	OrderId       string                 `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`           //订单编号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessMessageTransferSendReply) Reset() {
	*x = ProcessMessageTransferSendReply{}
	mi := &file_game_v1_game_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessMessageTransferSendReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessMessageTransferSendReply) ProtoMessage() {}

func (x *ProcessMessageTransferSendReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessMessageTransferSendReply.ProtoReflect.Descriptor instead.
func (*ProcessMessageTransferSendReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{42}
}

func (x *ProcessMessageTransferSendReply) GetSendStatus() int64 {
	if x != nil {
		return x.SendStatus
	}
	return 0
}

func (x *ProcessMessageTransferSendReply) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type TripartiteTransferRecord struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	OrderId                  string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                                                         // 内部转账订单号
	UserId                   int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                           // 用户ID
	GameId                   int64                  `protobuf:"varint,3,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`                                                           // 游戏ID
	TripartiteGameId         int64                  `protobuf:"varint,4,opt,name=tripartite_game_id,json=tripartiteGameId,proto3" json:"tripartite_game_id,omitempty"`                           // 游戏ID
	GameName                 string                 `protobuf:"bytes,5,opt,name=game_name,json=gameName,proto3" json:"game_name,omitempty"`                                                      // 游戏ID
	GamePlatformId           int64                  `protobuf:"varint,6,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"`                                 // 平台ID
	TripartiteGamePlatformId int64                  `protobuf:"varint,7,opt,name=tripartite_game_platform_id,json=tripartiteGamePlatformId,proto3" json:"tripartite_game_platform_id,omitempty"` // 平台ID
	GamePlatformName         string                 `protobuf:"bytes,8,opt,name=game_platform_name,json=gamePlatformName,proto3" json:"game_platform_name,omitempty"`                            // 平台ID
	CurrencyCode             string                 `protobuf:"bytes,9,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`                                          // 货币代码
	TransferMoney            int64                  `protobuf:"varint,10,opt,name=transfer_money,json=transferMoney,proto3" json:"transfer_money,omitempty"`                                     // 转入/转出的金额
	Remark                   string                 `protobuf:"bytes,11,opt,name=remark,proto3" json:"remark,omitempty"`                                                                         // 备注说明
	TransferType             int64                  `protobuf:"varint,12,opt,name=transfer_type,json=transferType,proto3" json:"transfer_type,omitempty"`                                        // 交易类型：1:转入 2:转出
	TransferStatus           int64                  `protobuf:"varint,13,opt,name=transfer_status,json=transferStatus,proto3" json:"transfer_status,omitempty"`                                  //转账状态， 1:处理中 2:处理成功 3:处理失败
	TransferTime             int64                  `protobuf:"varint,14,opt,name=transfer_time,json=transferTime,proto3" json:"transfer_time,omitempty"`
	EventTime                int64                  `protobuf:"varint,15,opt,name=event_time,json=eventTime,proto3" json:"event_time,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *TripartiteTransferRecord) Reset() {
	*x = TripartiteTransferRecord{}
	mi := &file_game_v1_game_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TripartiteTransferRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TripartiteTransferRecord) ProtoMessage() {}

func (x *TripartiteTransferRecord) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TripartiteTransferRecord.ProtoReflect.Descriptor instead.
func (*TripartiteTransferRecord) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{43}
}

func (x *TripartiteTransferRecord) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *TripartiteTransferRecord) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TripartiteTransferRecord) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *TripartiteTransferRecord) GetTripartiteGameId() int64 {
	if x != nil {
		return x.TripartiteGameId
	}
	return 0
}

func (x *TripartiteTransferRecord) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *TripartiteTransferRecord) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

func (x *TripartiteTransferRecord) GetTripartiteGamePlatformId() int64 {
	if x != nil {
		return x.TripartiteGamePlatformId
	}
	return 0
}

func (x *TripartiteTransferRecord) GetGamePlatformName() string {
	if x != nil {
		return x.GamePlatformName
	}
	return ""
}

func (x *TripartiteTransferRecord) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *TripartiteTransferRecord) GetTransferMoney() int64 {
	if x != nil {
		return x.TransferMoney
	}
	return 0
}

func (x *TripartiteTransferRecord) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *TripartiteTransferRecord) GetTransferType() int64 {
	if x != nil {
		return x.TransferType
	}
	return 0
}

func (x *TripartiteTransferRecord) GetTransferStatus() int64 {
	if x != nil {
		return x.TransferStatus
	}
	return 0
}

func (x *TripartiteTransferRecord) GetTransferTime() int64 {
	if x != nil {
		return x.TransferTime
	}
	return 0
}

func (x *TripartiteTransferRecord) GetEventTime() int64 {
	if x != nil {
		return x.EventTime
	}
	return 0
}

// 创建补偿失败的记录请求
type CreateCompensationRecordReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                  // 用户ID
	Amount        int64                  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`                                // 金额（分）
	OrderNo       string                 `protobuf:"bytes,3,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`                // 原始订单号
	GameId        int64                  `protobuf:"varint,4,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`                  // 游戏ID
	GameOrderNo   string                 `protobuf:"bytes,5,opt,name=game_order_no,json=gameOrderNo,proto3" json:"game_order_no,omitempty"`  // 游戏方订单号（可选）
	ErrorMessage  string                 `protobuf:"bytes,6,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // 错误信息
	CurrencyCode  string                 `protobuf:"bytes,7,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"` // 货币代码
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCompensationRecordReq) Reset() {
	*x = CreateCompensationRecordReq{}
	mi := &file_game_v1_game_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCompensationRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCompensationRecordReq) ProtoMessage() {}

func (x *CreateCompensationRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCompensationRecordReq.ProtoReflect.Descriptor instead.
func (*CreateCompensationRecordReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{44}
}

func (x *CreateCompensationRecordReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateCompensationRecordReq) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreateCompensationRecordReq) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *CreateCompensationRecordReq) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *CreateCompensationRecordReq) GetGameOrderNo() string {
	if x != nil {
		return x.GameOrderNo
	}
	return ""
}

func (x *CreateCompensationRecordReq) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CreateCompensationRecordReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

type CreateCompensationRecordResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 补偿记录ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCompensationRecordResp) Reset() {
	*x = CreateCompensationRecordResp{}
	mi := &file_game_v1_game_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCompensationRecordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCompensationRecordResp) ProtoMessage() {}

func (x *CreateCompensationRecordResp) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCompensationRecordResp.ProtoReflect.Descriptor instead.
func (*CreateCompensationRecordResp) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{45}
}

func (x *CreateCompensationRecordResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetGameDetailsByThirdReq struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	WalletModel      int64                  `protobuf:"varint,1,opt,name=wallet_model,json=walletModel,proto3" json:"wallet_model,omitempty"`                  // 钱包类型
	TripartiteGameId int64                  `protobuf:"varint,2,opt,name=tripartite_game_id,json=tripartiteGameId,proto3" json:"tripartite_game_id,omitempty"` // 三方游戏ID
	CurrencyCode     string                 `protobuf:"bytes,3,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`                //  货币code
	Timestamp        int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                         //  毫秒
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetGameDetailsByThirdReq) Reset() {
	*x = GetGameDetailsByThirdReq{}
	mi := &file_game_v1_game_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameDetailsByThirdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameDetailsByThirdReq) ProtoMessage() {}

func (x *GetGameDetailsByThirdReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameDetailsByThirdReq.ProtoReflect.Descriptor instead.
func (*GetGameDetailsByThirdReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{46}
}

func (x *GetGameDetailsByThirdReq) GetWalletModel() int64 {
	if x != nil {
		return x.WalletModel
	}
	return 0
}

func (x *GetGameDetailsByThirdReq) GetTripartiteGameId() int64 {
	if x != nil {
		return x.TripartiteGameId
	}
	return 0
}

func (x *GetGameDetailsByThirdReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *GetGameDetailsByThirdReq) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type GetGameDetailsByThirdReply struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	GameId             int64                  `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	TripartiteGameId   int64                  `protobuf:"varint,2,opt,name=tripartite_game_id,json=tripartiteGameId,proto3" json:"tripartite_game_id,omitempty"`
	Rank               int64                  `protobuf:"varint,3,opt,name=rank,proto3" json:"rank,omitempty"`
	CurrencyCode       string                 `protobuf:"bytes,4,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	GamePlatformId     int64                  `protobuf:"varint,5,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"`
	GameCategoryId     int64                  `protobuf:"varint,6,opt,name=game_category_id,json=gameCategoryId,proto3" json:"game_category_id,omitempty"`
	GameName           string                 `protobuf:"bytes,7,opt,name=game_name,json=gameName,proto3" json:"game_name,omitempty"`
	IsFeatured         int64                  `protobuf:"varint,9,opt,name=is_featured,json=isFeatured,proto3" json:"is_featured,omitempty"` //  是否推荐(1:开启，2：关闭)
	IsJumpTab          int64                  `protobuf:"varint,10,opt,name=is_jump_tab,json=isJumpTab,proto3" json:"is_jump_tab,omitempty"` //  是否开启跳转(1:开启，2：关闭)
	WalletModel        int64                  `protobuf:"varint,13,opt,name=wallet_model,json=walletModel,proto3" json:"wallet_model,omitempty"`
	HorizontalSupport  int64                  `protobuf:"varint,14,opt,name=horizontal_support,json=horizontalSupport,proto3" json:"horizontal_support,omitempty"`
	VerticalSupport    int64                  `protobuf:"varint,15,opt,name=vertical_support,json=verticalSupport,proto3" json:"vertical_support,omitempty"`
	TryGameSupport     int64                  `protobuf:"varint,16,opt,name=try_game_support,json=tryGameSupport,proto3" json:"try_game_support,omitempty"`
	Style              string                 `protobuf:"bytes,17,opt,name=style,proto3" json:"style,omitempty"`
	IconStyle          int64                  `protobuf:"varint,18,opt,name=icon_style,json=iconStyle,proto3" json:"icon_style,omitempty"`
	LogoUrl            string                 `protobuf:"bytes,19,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	IconImageUrl       string                 `protobuf:"bytes,20,opt,name=icon_image_url,json=iconImageUrl,proto3" json:"icon_image_url,omitempty"`
	IsGameActive       int64                  `protobuf:"varint,21,opt,name=is_game_active,json=isGameActive,proto3" json:"is_game_active,omitempty"`
	IsUnderMaintenance int64                  `protobuf:"varint,22,opt,name=is_under_maintenance,json=isUnderMaintenance,proto3" json:"is_under_maintenance,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetGameDetailsByThirdReply) Reset() {
	*x = GetGameDetailsByThirdReply{}
	mi := &file_game_v1_game_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameDetailsByThirdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameDetailsByThirdReply) ProtoMessage() {}

func (x *GetGameDetailsByThirdReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameDetailsByThirdReply.ProtoReflect.Descriptor instead.
func (*GetGameDetailsByThirdReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{47}
}

func (x *GetGameDetailsByThirdReply) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *GetGameDetailsByThirdReply) GetTripartiteGameId() int64 {
	if x != nil {
		return x.TripartiteGameId
	}
	return 0
}

func (x *GetGameDetailsByThirdReply) GetRank() int64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *GetGameDetailsByThirdReply) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *GetGameDetailsByThirdReply) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

func (x *GetGameDetailsByThirdReply) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

func (x *GetGameDetailsByThirdReply) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *GetGameDetailsByThirdReply) GetIsFeatured() int64 {
	if x != nil {
		return x.IsFeatured
	}
	return 0
}

func (x *GetGameDetailsByThirdReply) GetIsJumpTab() int64 {
	if x != nil {
		return x.IsJumpTab
	}
	return 0
}

func (x *GetGameDetailsByThirdReply) GetWalletModel() int64 {
	if x != nil {
		return x.WalletModel
	}
	return 0
}

func (x *GetGameDetailsByThirdReply) GetHorizontalSupport() int64 {
	if x != nil {
		return x.HorizontalSupport
	}
	return 0
}

func (x *GetGameDetailsByThirdReply) GetVerticalSupport() int64 {
	if x != nil {
		return x.VerticalSupport
	}
	return 0
}

func (x *GetGameDetailsByThirdReply) GetTryGameSupport() int64 {
	if x != nil {
		return x.TryGameSupport
	}
	return 0
}

func (x *GetGameDetailsByThirdReply) GetStyle() string {
	if x != nil {
		return x.Style
	}
	return ""
}

func (x *GetGameDetailsByThirdReply) GetIconStyle() int64 {
	if x != nil {
		return x.IconStyle
	}
	return 0
}

func (x *GetGameDetailsByThirdReply) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *GetGameDetailsByThirdReply) GetIconImageUrl() string {
	if x != nil {
		return x.IconImageUrl
	}
	return ""
}

func (x *GetGameDetailsByThirdReply) GetIsGameActive() int64 {
	if x != nil {
		return x.IsGameActive
	}
	return 0
}

func (x *GetGameDetailsByThirdReply) GetIsUnderMaintenance() int64 {
	if x != nil {
		return x.IsUnderMaintenance
	}
	return 0
}

type AddGameBetBaseReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	WalletType    int64                  `protobuf:"varint,2,opt,name=wallet_type,json=walletType,proto3" json:"wallet_type,omitempty"`      // 钱包类型 1：用户钱包,2：代理钱包,3：奖励钱包,4：余额宝
	Balance       int64                  `protobuf:"varint,3,opt,name=balance,proto3" json:"balance,omitempty"`                              //用户余额
	OrderId       string                 `protobuf:"bytes,4,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                // 投注记录表内部订单号(order_id)
	CurrencyCode  string                 `protobuf:"bytes,5,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"` // 货币代码
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddGameBetBaseReply) Reset() {
	*x = AddGameBetBaseReply{}
	mi := &file_game_v1_game_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddGameBetBaseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGameBetBaseReply) ProtoMessage() {}

func (x *AddGameBetBaseReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGameBetBaseReply.ProtoReflect.Descriptor instead.
func (*AddGameBetBaseReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{48}
}

func (x *AddGameBetBaseReply) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddGameBetBaseReply) GetWalletType() int64 {
	if x != nil {
		return x.WalletType
	}
	return 0
}

func (x *AddGameBetBaseReply) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *AddGameBetBaseReply) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *AddGameBetBaseReply) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

type AddGameBetRecordReq struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	OrderId                string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                                                 // 内部订单号
	UserId                 int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                   // 用户ID
	GameId                 int64                  `protobuf:"varint,3,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`                                                   // 游戏ID
	GamePlatformId         int64                  `protobuf:"varint,4,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"`                         // 平台ID
	GameCategoryId         int64                  `protobuf:"varint,5,opt,name=game_category_id,json=gameCategoryId,proto3" json:"game_category_id,omitempty"`                         // 分类ID
	BetAmount              int64                  `protobuf:"varint,6,opt,name=bet_amount,json=betAmount,proto3" json:"bet_amount,omitempty"`                                          // 下注金额（处理之后的数据）
	TripartiteOrderId      string                 `protobuf:"bytes,7,opt,name=tripartite_order_id,json=tripartiteOrderId,proto3" json:"tripartite_order_id,omitempty"`                 // 订单ID（三方）
	RoundId                string                 `protobuf:"bytes,8,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"`                                                 // 下注牌局ID（三方）
	BetTime                int64                  `protobuf:"varint,9,opt,name=bet_time,json=betTime,proto3" json:"bet_time,omitempty"`                                                // 下注时间毫秒
	TripartiteOriginalData string                 `protobuf:"bytes,10,opt,name=tripartite_original_data,json=tripartiteOriginalData,proto3" json:"tripartite_original_data,omitempty"` // 三方原始数据
	PostBetBalance         int64                  `protobuf:"varint,11,opt,name=post_bet_balance,json=postBetBalance,proto3" json:"post_bet_balance,omitempty"`                        // 投注后余额
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AddGameBetRecordReq) Reset() {
	*x = AddGameBetRecordReq{}
	mi := &file_game_v1_game_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddGameBetRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGameBetRecordReq) ProtoMessage() {}

func (x *AddGameBetRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGameBetRecordReq.ProtoReflect.Descriptor instead.
func (*AddGameBetRecordReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{49}
}

func (x *AddGameBetRecordReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *AddGameBetRecordReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddGameBetRecordReq) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *AddGameBetRecordReq) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

func (x *AddGameBetRecordReq) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

func (x *AddGameBetRecordReq) GetBetAmount() int64 {
	if x != nil {
		return x.BetAmount
	}
	return 0
}

func (x *AddGameBetRecordReq) GetTripartiteOrderId() string {
	if x != nil {
		return x.TripartiteOrderId
	}
	return ""
}

func (x *AddGameBetRecordReq) GetRoundId() string {
	if x != nil {
		return x.RoundId
	}
	return ""
}

func (x *AddGameBetRecordReq) GetBetTime() int64 {
	if x != nil {
		return x.BetTime
	}
	return 0
}

func (x *AddGameBetRecordReq) GetTripartiteOriginalData() string {
	if x != nil {
		return x.TripartiteOriginalData
	}
	return ""
}

func (x *AddGameBetRecordReq) GetPostBetBalance() int64 {
	if x != nil {
		return x.PostBetBalance
	}
	return 0
}

type AddGameBetRecordReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WalletType    int64                  `protobuf:"varint,1,opt,name=wallet_type,json=walletType,proto3" json:"wallet_type,omitempty"`      // 钱包类型 1：用户钱包,2：代理钱包,3：奖励钱包,4：余额宝
	Balance       int64                  `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`                              //用户余额
	OrderId       string                 `protobuf:"bytes,3,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                // 投注记录表内部订单号(order_id)
	BetRecordId   string                 `protobuf:"bytes,4,opt,name=bet_record_id,json=betRecordId,proto3" json:"bet_record_id,omitempty"`  // 投注记录表ID
	CurrencyCode  string                 `protobuf:"bytes,7,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"` // 货币代码
	UserId        int64                  `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddGameBetRecordReply) Reset() {
	*x = AddGameBetRecordReply{}
	mi := &file_game_v1_game_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddGameBetRecordReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGameBetRecordReply) ProtoMessage() {}

func (x *AddGameBetRecordReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGameBetRecordReply.ProtoReflect.Descriptor instead.
func (*AddGameBetRecordReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{50}
}

func (x *AddGameBetRecordReply) GetWalletType() int64 {
	if x != nil {
		return x.WalletType
	}
	return 0
}

func (x *AddGameBetRecordReply) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *AddGameBetRecordReply) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *AddGameBetRecordReply) GetBetRecordId() string {
	if x != nil {
		return x.BetRecordId
	}
	return ""
}

func (x *AddGameBetRecordReply) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *AddGameBetRecordReply) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type BatchAddGameBetRecordReq struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	AddGameBetRecordReq []*AddGameBetRecordReq `protobuf:"bytes,1,rep,name=add_game_bet_record_req,json=addGameBetRecordReq,proto3" json:"add_game_bet_record_req,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *BatchAddGameBetRecordReq) Reset() {
	*x = BatchAddGameBetRecordReq{}
	mi := &file_game_v1_game_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchAddGameBetRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAddGameBetRecordReq) ProtoMessage() {}

func (x *BatchAddGameBetRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAddGameBetRecordReq.ProtoReflect.Descriptor instead.
func (*BatchAddGameBetRecordReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{51}
}

func (x *BatchAddGameBetRecordReq) GetAddGameBetRecordReq() []*AddGameBetRecordReq {
	if x != nil {
		return x.AddGameBetRecordReq
	}
	return nil
}

type AddGameSettledRecordReq struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	RoundId           string                 `protobuf:"bytes,1,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"`                                 // 牌局ID（三方)
	RewardAmount      int64                  `protobuf:"varint,2,opt,name=reward_amount,json=rewardAmount,proto3" json:"reward_amount,omitempty"`                 // 派奖金额（处理之后的数据）
	TripartiteOrderId string                 `protobuf:"bytes,3,opt,name=tripartite_order_id,json=tripartiteOrderId,proto3" json:"tripartite_order_id,omitempty"` // 订单ID（三方）
	SettleTime        int64                  `protobuf:"varint,4,opt,name=settle_time,json=settleTime,proto3" json:"settle_time,omitempty"`                       // 结算时间毫秒
	UserId            int64                  `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                   // 用户ID
	BetId             string                 `protobuf:"bytes,6,opt,name=bet_id,json=betId,proto3" json:"bet_id,omitempty"`                                       // 对应的投注 ID，如果没有就会取牌局 ID（三方)
	OrderId           string                 `protobuf:"bytes,7,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                                 // 内部订单号(order_id)
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AddGameSettledRecordReq) Reset() {
	*x = AddGameSettledRecordReq{}
	mi := &file_game_v1_game_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddGameSettledRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGameSettledRecordReq) ProtoMessage() {}

func (x *AddGameSettledRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGameSettledRecordReq.ProtoReflect.Descriptor instead.
func (*AddGameSettledRecordReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{52}
}

func (x *AddGameSettledRecordReq) GetRoundId() string {
	if x != nil {
		return x.RoundId
	}
	return ""
}

func (x *AddGameSettledRecordReq) GetRewardAmount() int64 {
	if x != nil {
		return x.RewardAmount
	}
	return 0
}

func (x *AddGameSettledRecordReq) GetTripartiteOrderId() string {
	if x != nil {
		return x.TripartiteOrderId
	}
	return ""
}

func (x *AddGameSettledRecordReq) GetSettleTime() int64 {
	if x != nil {
		return x.SettleTime
	}
	return 0
}

func (x *AddGameSettledRecordReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddGameSettledRecordReq) GetBetId() string {
	if x != nil {
		return x.BetId
	}
	return ""
}

func (x *AddGameSettledRecordReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type BatchAddGameSettledRecordReq struct {
	state                   protoimpl.MessageState     `protogen:"open.v1"`
	AddGameSettledRecordReq []*AddGameSettledRecordReq `protobuf:"bytes,1,rep,name=add_game_settled_record_req,json=addGameSettledRecordReq,proto3" json:"add_game_settled_record_req,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *BatchAddGameSettledRecordReq) Reset() {
	*x = BatchAddGameSettledRecordReq{}
	mi := &file_game_v1_game_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchAddGameSettledRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAddGameSettledRecordReq) ProtoMessage() {}

func (x *BatchAddGameSettledRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAddGameSettledRecordReq.ProtoReflect.Descriptor instead.
func (*BatchAddGameSettledRecordReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{53}
}

func (x *BatchAddGameSettledRecordReq) GetAddGameSettledRecordReq() []*AddGameSettledRecordReq {
	if x != nil {
		return x.AddGameSettledRecordReq
	}
	return nil
}

type AddGameCancelRecordReq struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	UserId               int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                              // 用户ID
	GameId               int64                  `protobuf:"varint,3,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`                                              // 游戏ID
	TripartiteGameId     int64                  `protobuf:"varint,4,opt,name=tripartite_game_id,json=tripartiteGameId,proto3" json:"tripartite_game_id,omitempty"`              // 三方游戏ID
	RoundId              string                 `protobuf:"bytes,6,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"`                                            // 牌局 ID
	OrderNo              string                 `protobuf:"bytes,7,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`                                            // 订单号(每笔记录唯一)
	CancelOrderNo        string                 `protobuf:"bytes,8,opt,name=cancel_order_no,json=cancelOrderNo,proto3" json:"cancel_order_no,omitempty"`                        //撤消投注/派奖的原商户订单号
	CancelPlatOrderNo    string                 `protobuf:"bytes,9,opt,name=cancel_plat_order_no,json=cancelPlatOrderNo,proto3" json:"cancel_plat_order_no,omitempty"`          //撤消投注/派奖的原平台订单号
	OrderAmount          int64                  `protobuf:"varint,10,opt,name=order_amount,json=orderAmount,proto3" json:"order_amount,omitempty"`                              //撤单金额（处理之后的数据）
	CurrencyCode         string                 `protobuf:"bytes,11,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`                            // 玩家货币code
	Timestamp            int64                  `protobuf:"varint,12,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                     //时间戳（毫秒）
	OrderDesc            string                 `protobuf:"bytes,13,opt,name=order_desc,json=orderDesc,proto3" json:"order_desc,omitempty"`                                     //撤单说明
	CancelType           int64                  `protobuf:"varint,14,opt,name=cancel_type,json=cancelType,proto3" json:"cancel_type,omitempty"`                                 //撤单类型：1 投注撤单，2 派奖撤单
	GamePlatformId       int64                  `protobuf:"varint,15,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"`                   //游戏厂商ID
	TripartitePlatformId int64                  `protobuf:"varint,16,opt,name=tripartite_platform_id,json=tripartitePlatformId,proto3" json:"tripartite_platform_id,omitempty"` //第三方游戏厂商ID
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *AddGameCancelRecordReq) Reset() {
	*x = AddGameCancelRecordReq{}
	mi := &file_game_v1_game_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddGameCancelRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGameCancelRecordReq) ProtoMessage() {}

func (x *AddGameCancelRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGameCancelRecordReq.ProtoReflect.Descriptor instead.
func (*AddGameCancelRecordReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{54}
}

func (x *AddGameCancelRecordReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddGameCancelRecordReq) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *AddGameCancelRecordReq) GetTripartiteGameId() int64 {
	if x != nil {
		return x.TripartiteGameId
	}
	return 0
}

func (x *AddGameCancelRecordReq) GetRoundId() string {
	if x != nil {
		return x.RoundId
	}
	return ""
}

func (x *AddGameCancelRecordReq) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *AddGameCancelRecordReq) GetCancelOrderNo() string {
	if x != nil {
		return x.CancelOrderNo
	}
	return ""
}

func (x *AddGameCancelRecordReq) GetCancelPlatOrderNo() string {
	if x != nil {
		return x.CancelPlatOrderNo
	}
	return ""
}

func (x *AddGameCancelRecordReq) GetOrderAmount() int64 {
	if x != nil {
		return x.OrderAmount
	}
	return 0
}

func (x *AddGameCancelRecordReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *AddGameCancelRecordReq) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *AddGameCancelRecordReq) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

func (x *AddGameCancelRecordReq) GetCancelType() int64 {
	if x != nil {
		return x.CancelType
	}
	return 0
}

func (x *AddGameCancelRecordReq) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

func (x *AddGameCancelRecordReq) GetTripartitePlatformId() int64 {
	if x != nil {
		return x.TripartitePlatformId
	}
	return 0
}

type AddGameAdjustmentRecordReq struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	UserId               int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                             // 用户ID
	GamePlatformId       int64                  `protobuf:"varint,3,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"`                   //游戏厂商ID
	TripartitePlatformId int64                  `protobuf:"varint,4,opt,name=tripartite_platform_id,json=tripartitePlatformId,proto3" json:"tripartite_platform_id,omitempty"` //第三方游戏厂商ID
	OrderNo              string                 `protobuf:"bytes,5,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`                                           // 订单号(每笔记录唯一)
	AdjustAmount         int64                  `protobuf:"varint,6,opt,name=adjust_amount,json=adjustAmount,proto3" json:"adjust_amount,omitempty"`                           //调整金额（处理之后的数据）
	CurrencyCode         string                 `protobuf:"bytes,7,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`                            // 玩家货币code
	Timestamp            int64                  `protobuf:"varint,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                     //时间戳（毫秒）
	AdjustDesc           string                 `protobuf:"bytes,9,opt,name=adjust_desc,json=adjustDesc,proto3" json:"adjust_desc,omitempty"`                                  //调整说明
	OrderId              string                 `protobuf:"bytes,10,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                                          // 内部订单号(order_id)
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *AddGameAdjustmentRecordReq) Reset() {
	*x = AddGameAdjustmentRecordReq{}
	mi := &file_game_v1_game_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddGameAdjustmentRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGameAdjustmentRecordReq) ProtoMessage() {}

func (x *AddGameAdjustmentRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGameAdjustmentRecordReq.ProtoReflect.Descriptor instead.
func (*AddGameAdjustmentRecordReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{55}
}

func (x *AddGameAdjustmentRecordReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddGameAdjustmentRecordReq) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

func (x *AddGameAdjustmentRecordReq) GetTripartitePlatformId() int64 {
	if x != nil {
		return x.TripartitePlatformId
	}
	return 0
}

func (x *AddGameAdjustmentRecordReq) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *AddGameAdjustmentRecordReq) GetAdjustAmount() int64 {
	if x != nil {
		return x.AdjustAmount
	}
	return 0
}

func (x *AddGameAdjustmentRecordReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *AddGameAdjustmentRecordReq) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *AddGameAdjustmentRecordReq) GetAdjustDesc() string {
	if x != nil {
		return x.AdjustDesc
	}
	return ""
}

func (x *AddGameAdjustmentRecordReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type AddTransferGameBetRecordReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RecordList    []*TransferBetRecord   `protobuf:"bytes,1,rep,name=record_list,json=recordList,proto3" json:"record_list,omitempty"` //下注订单列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTransferGameBetRecordReq) Reset() {
	*x = AddTransferGameBetRecordReq{}
	mi := &file_game_v1_game_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTransferGameBetRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTransferGameBetRecordReq) ProtoMessage() {}

func (x *AddTransferGameBetRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTransferGameBetRecordReq.ProtoReflect.Descriptor instead.
func (*AddTransferGameBetRecordReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{56}
}

func (x *AddTransferGameBetRecordReq) GetRecordList() []*TransferBetRecord {
	if x != nil {
		return x.RecordList
	}
	return nil
}

// 定义 SendGameBetBetMQReq 消息
type SendGameBetBetMQReq struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	UserId               int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                              // 用户ID
	UserAccount          string                 `protobuf:"bytes,2,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`                                // 用户账号
	CurrencyCode         string                 `protobuf:"bytes,3,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`                             // 货币代码
	BetAmount            int64                  `protobuf:"varint,4,opt,name=bet_amount,json=betAmount,proto3" json:"bet_amount,omitempty"`                                     // 投注金额（不包含撤单金额）
	GameName             string                 `protobuf:"bytes,19,opt,name=game_name,json=gameName,proto3" json:"game_name,omitempty"`                                        // 游戏名称
	GameId               int64                  `protobuf:"varint,7,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`                                              // 游戏ID
	BetTime              int64                  `protobuf:"varint,10,opt,name=bet_time,json=betTime,proto3" json:"bet_time,omitempty"`                                          // 投注时间
	BetOrderId           string                 `protobuf:"bytes,16,opt,name=bet_order_id,json=betOrderId,proto3" json:"bet_order_id,omitempty"`                                // 投注ID
	TripartiteGameId     int64                  `protobuf:"varint,18,opt,name=tripartite_game_id,json=tripartiteGameId,proto3" json:"tripartite_game_id,omitempty"`             // 三方游戏ID
	GameCategoryId       int64                  `protobuf:"varint,8,opt,name=game_category_id,json=gameCategoryId,proto3" json:"game_category_id,omitempty"`                    // 游戏类型ID
	GameCategoryName     string                 `protobuf:"bytes,9,opt,name=game_category_name,json=gameCategoryName,proto3" json:"game_category_name,omitempty"`               // 游戏类型名称
	TripartiteCategoryId int64                  `protobuf:"varint,15,opt,name=tripartite_category_id,json=tripartiteCategoryId,proto3" json:"tripartite_category_id,omitempty"` // 三方游戏类型ID
	PlatformId           int64                  `protobuf:"varint,11,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`                                 // 游戏平台ID
	TripartitePlatformId int64                  `protobuf:"varint,17,opt,name=tripartite_platform_id,json=tripartitePlatformId,proto3" json:"tripartite_platform_id,omitempty"` // 三方游戏平台ID
	PlatformName         string                 `protobuf:"bytes,12,opt,name=platform_name,json=platformName,proto3" json:"platform_name,omitempty"`                            // 游戏平台名称
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SendGameBetBetMQReq) Reset() {
	*x = SendGameBetBetMQReq{}
	mi := &file_game_v1_game_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendGameBetBetMQReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGameBetBetMQReq) ProtoMessage() {}

func (x *SendGameBetBetMQReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGameBetBetMQReq.ProtoReflect.Descriptor instead.
func (*SendGameBetBetMQReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{57}
}

func (x *SendGameBetBetMQReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SendGameBetBetMQReq) GetUserAccount() string {
	if x != nil {
		return x.UserAccount
	}
	return ""
}

func (x *SendGameBetBetMQReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *SendGameBetBetMQReq) GetBetAmount() int64 {
	if x != nil {
		return x.BetAmount
	}
	return 0
}

func (x *SendGameBetBetMQReq) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *SendGameBetBetMQReq) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *SendGameBetBetMQReq) GetBetTime() int64 {
	if x != nil {
		return x.BetTime
	}
	return 0
}

func (x *SendGameBetBetMQReq) GetBetOrderId() string {
	if x != nil {
		return x.BetOrderId
	}
	return ""
}

func (x *SendGameBetBetMQReq) GetTripartiteGameId() int64 {
	if x != nil {
		return x.TripartiteGameId
	}
	return 0
}

func (x *SendGameBetBetMQReq) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

func (x *SendGameBetBetMQReq) GetGameCategoryName() string {
	if x != nil {
		return x.GameCategoryName
	}
	return ""
}

func (x *SendGameBetBetMQReq) GetTripartiteCategoryId() int64 {
	if x != nil {
		return x.TripartiteCategoryId
	}
	return 0
}

func (x *SendGameBetBetMQReq) GetPlatformId() int64 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *SendGameBetBetMQReq) GetTripartitePlatformId() int64 {
	if x != nil {
		return x.TripartitePlatformId
	}
	return 0
}

func (x *SendGameBetBetMQReq) GetPlatformName() string {
	if x != nil {
		return x.PlatformName
	}
	return ""
}

// 定义 SendGameBetBetSettlementMQReq 消息
type SendGameBetBetSettlementMQReq struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	UserId               int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                              // 用户ID
	UserAccount          string                 `protobuf:"bytes,2,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`                                // 用户账号
	CurrencyCode         string                 `protobuf:"bytes,3,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`                             // 货币代码
	BetAmount            int64                  `protobuf:"varint,4,opt,name=bet_amount,json=betAmount,proto3" json:"bet_amount,omitempty"`                                     // 投注金额（不包含撤单金额）
	UserWinAmount        int64                  `protobuf:"varint,5,opt,name=user_win_amount,json=userWinAmount,proto3" json:"user_win_amount,omitempty"`                       // 用户中奖金额
	ValidBetAmount       int64                  `protobuf:"varint,6,opt,name=valid_bet_amount,json=validBetAmount,proto3" json:"valid_bet_amount,omitempty"`                    // 有效投注金额
	GameId               int64                  `protobuf:"varint,7,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`                                              // 游戏ID
	TripartiteGameId     int64                  `protobuf:"varint,18,opt,name=tripartite_game_id,json=tripartiteGameId,proto3" json:"tripartite_game_id,omitempty"`             // 三方游戏ID
	GameCategoryId       int64                  `protobuf:"varint,8,opt,name=game_category_id,json=gameCategoryId,proto3" json:"game_category_id,omitempty"`                    // 游戏类型ID
	GameCategoryName     string                 `protobuf:"bytes,9,opt,name=game_category_name,json=gameCategoryName,proto3" json:"game_category_name,omitempty"`               // 游戏类型名称
	TripartiteCategoryId int64                  `protobuf:"varint,10,opt,name=tripartite_category_id,json=tripartiteCategoryId,proto3" json:"tripartite_category_id,omitempty"` // 三方游戏类型ID
	PlatformId           int64                  `protobuf:"varint,11,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`                                 // 游戏平台ID
	TripartitePlatformId int64                  `protobuf:"varint,17,opt,name=tripartite_platform_id,json=tripartitePlatformId,proto3" json:"tripartite_platform_id,omitempty"` // 三方游戏平台ID
	PlatformName         string                 `protobuf:"bytes,12,opt,name=platform_name,json=platformName,proto3" json:"platform_name,omitempty"`                            // 游戏平台名称
	SettlementTime       int64                  `protobuf:"varint,13,opt,name=settlement_time,json=settlementTime,proto3" json:"settlement_time,omitempty"`                     // 结算时间
	BonusAmount          int64                  `protobuf:"varint,14,opt,name=bonus_amount,json=bonusAmount,proto3" json:"bonus_amount,omitempty"`                              // 派奖金额
	BetTime              int64                  `protobuf:"varint,15,opt,name=bet_time,json=betTime,proto3" json:"bet_time,omitempty"`                                          // 投注时间
	BetOrderId           string                 `protobuf:"bytes,16,opt,name=bet_order_id,json=betOrderId,proto3" json:"bet_order_id,omitempty"`                                // 投注ID
	GameName             string                 `protobuf:"bytes,19,opt,name=game_name,json=gameName,proto3" json:"game_name,omitempty"`                                        // 游戏名称
	IsNotRepeat          bool                   `protobuf:"varint,20,opt,name=is_not_repeat,json=isNotRepeat,proto3" json:"is_not_repeat,omitempty"`                            // 是否是重复的结算（一笔订单多笔结算的情况，只处理第一笔结算）
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SendGameBetBetSettlementMQReq) Reset() {
	*x = SendGameBetBetSettlementMQReq{}
	mi := &file_game_v1_game_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendGameBetBetSettlementMQReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGameBetBetSettlementMQReq) ProtoMessage() {}

func (x *SendGameBetBetSettlementMQReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGameBetBetSettlementMQReq.ProtoReflect.Descriptor instead.
func (*SendGameBetBetSettlementMQReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{58}
}

func (x *SendGameBetBetSettlementMQReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SendGameBetBetSettlementMQReq) GetUserAccount() string {
	if x != nil {
		return x.UserAccount
	}
	return ""
}

func (x *SendGameBetBetSettlementMQReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *SendGameBetBetSettlementMQReq) GetBetAmount() int64 {
	if x != nil {
		return x.BetAmount
	}
	return 0
}

func (x *SendGameBetBetSettlementMQReq) GetUserWinAmount() int64 {
	if x != nil {
		return x.UserWinAmount
	}
	return 0
}

func (x *SendGameBetBetSettlementMQReq) GetValidBetAmount() int64 {
	if x != nil {
		return x.ValidBetAmount
	}
	return 0
}

func (x *SendGameBetBetSettlementMQReq) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *SendGameBetBetSettlementMQReq) GetTripartiteGameId() int64 {
	if x != nil {
		return x.TripartiteGameId
	}
	return 0
}

func (x *SendGameBetBetSettlementMQReq) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

func (x *SendGameBetBetSettlementMQReq) GetGameCategoryName() string {
	if x != nil {
		return x.GameCategoryName
	}
	return ""
}

func (x *SendGameBetBetSettlementMQReq) GetTripartiteCategoryId() int64 {
	if x != nil {
		return x.TripartiteCategoryId
	}
	return 0
}

func (x *SendGameBetBetSettlementMQReq) GetPlatformId() int64 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *SendGameBetBetSettlementMQReq) GetTripartitePlatformId() int64 {
	if x != nil {
		return x.TripartitePlatformId
	}
	return 0
}

func (x *SendGameBetBetSettlementMQReq) GetPlatformName() string {
	if x != nil {
		return x.PlatformName
	}
	return ""
}

func (x *SendGameBetBetSettlementMQReq) GetSettlementTime() int64 {
	if x != nil {
		return x.SettlementTime
	}
	return 0
}

func (x *SendGameBetBetSettlementMQReq) GetBonusAmount() int64 {
	if x != nil {
		return x.BonusAmount
	}
	return 0
}

func (x *SendGameBetBetSettlementMQReq) GetBetTime() int64 {
	if x != nil {
		return x.BetTime
	}
	return 0
}

func (x *SendGameBetBetSettlementMQReq) GetBetOrderId() string {
	if x != nil {
		return x.BetOrderId
	}
	return ""
}

func (x *SendGameBetBetSettlementMQReq) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *SendGameBetBetSettlementMQReq) GetIsNotRepeat() bool {
	if x != nil {
		return x.IsNotRepeat
	}
	return false
}

type AddRecentlyGamePlayReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户ID
	GameId        int64                  `protobuf:"varint,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"` // 游戏ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRecentlyGamePlayReq) Reset() {
	*x = AddRecentlyGamePlayReq{}
	mi := &file_game_v1_game_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRecentlyGamePlayReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecentlyGamePlayReq) ProtoMessage() {}

func (x *AddRecentlyGamePlayReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecentlyGamePlayReq.ProtoReflect.Descriptor instead.
func (*AddRecentlyGamePlayReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{59}
}

func (x *AddRecentlyGamePlayReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddRecentlyGamePlayReq) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

// 通过货币获取游戏类型请求参数--
type GetCategoryListByCurrReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurrencyId    int64                  `protobuf:"varint,1,opt,name=currency_id,json=currencyId,proto3" json:"currency_id,omitempty"`
	CurrencyCode  string                 `protobuf:"bytes,2,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	LanguageCode  string                 `protobuf:"bytes,3,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	LanguageId    string                 `protobuf:"bytes,4,opt,name=language_id,json=languageId,proto3" json:"language_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCategoryListByCurrReq) Reset() {
	*x = GetCategoryListByCurrReq{}
	mi := &file_game_v1_game_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCategoryListByCurrReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryListByCurrReq) ProtoMessage() {}

func (x *GetCategoryListByCurrReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryListByCurrReq.ProtoReflect.Descriptor instead.
func (*GetCategoryListByCurrReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{60}
}

func (x *GetCategoryListByCurrReq) GetCurrencyId() int64 {
	if x != nil {
		return x.CurrencyId
	}
	return 0
}

func (x *GetCategoryListByCurrReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *GetCategoryListByCurrReq) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *GetCategoryListByCurrReq) GetLanguageId() string {
	if x != nil {
		return x.LanguageId
	}
	return ""
}

type GetCategoryListByCurrReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rows          []*GameCategoryDetail  `protobuf:"bytes,20,rep,name=rows,proto3" json:"rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCategoryListByCurrReply) Reset() {
	*x = GetCategoryListByCurrReply{}
	mi := &file_game_v1_game_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCategoryListByCurrReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryListByCurrReply) ProtoMessage() {}

func (x *GetCategoryListByCurrReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryListByCurrReply.ProtoReflect.Descriptor instead.
func (*GetCategoryListByCurrReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{61}
}

func (x *GetCategoryListByCurrReply) GetRows() []*GameCategoryDetail {
	if x != nil {
		return x.Rows
	}
	return nil
}

type GameCategoryDetail struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 主键（自增 ID）
	GameCategoryId int64 `protobuf:"varint,1,opt,name=game_category_id,json=gameCategoryId,proto3" json:"game_category_id,omitempty"`
	// 三方游戏类型 ID
	TripartiteCategoryId int64 `protobuf:"varint,2,opt,name=tripartite_category_id,json=tripartiteCategoryId,proto3" json:"tripartite_category_id,omitempty"`
	// 排名（表示货币在列表中的排序位置）
	Rank int64 `protobuf:"varint,3,opt,name=rank,proto3" json:"rank,omitempty"`
	// 货币代码（例如 "INR"）
	CurrencyCode string `protobuf:"bytes,4,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	// 类型名称（JSON 格式）
	CategoryName string `protobuf:"bytes,5,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`
	// 类型开关（启用/禁用标志）
	CategorySwitch int64 `protobuf:"varint,6,opt,name=category_switch,json=categorySwitch,proto3" json:"category_switch,omitempty"`
	// 链接类型（1: 外部链接，2: 其他）
	LinkType int64 `protobuf:"varint,7,opt,name=link_type,json=linkType,proto3" json:"link_type,omitempty"`
	// 链接地址
	LinkUrl string `protobuf:"bytes,8,opt,name=link_url,json=linkUrl,proto3" json:"link_url,omitempty"`
	// 打开方式（1: 默认，2: 外部 URL）
	OpenMethod int64 `protobuf:"varint,9,opt,name=open_method,json=openMethod,proto3" json:"open_method,omitempty"`
	// 图标地址
	IconUrl string `protobuf:"bytes,10,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	// 首页显示行数
	HomeDisplayCount int64 `protobuf:"varint,11,opt,name=home_display_count,json=homeDisplayCount,proto3" json:"home_display_count,omitempty"`
	// 二级页面显示行数
	SecondPageDisplayCount int64 `protobuf:"varint,12,opt,name=second_page_display_count,json=secondPageDisplayCount,proto3" json:"second_page_display_count,omitempty"`
	// 备注
	Remark                string `protobuf:"bytes,13,opt,name=remark,proto3" json:"remark,omitempty"`
	CurrentIconStyle      int64  `protobuf:"varint,14,opt,name=current_icon_style,json=currentIconStyle,proto3" json:"current_icon_style,omitempty"`                  // 当前图标样式，1：竖版图标，2：竖版图标加名称，3：方版图标，4：横版图标
	HomeColumnCount       int64  `protobuf:"varint,15,opt,name=home_column_count,json=homeColumnCount,proto3" json:"home_column_count,omitempty"`                     // 首页显示列数
	SecondPageColumnCount int64  `protobuf:"varint,16,opt,name=second_page_column_count,json=secondPageColumnCount,proto3" json:"second_page_column_count,omitempty"` // 二级页面显示列数
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GameCategoryDetail) Reset() {
	*x = GameCategoryDetail{}
	mi := &file_game_v1_game_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameCategoryDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameCategoryDetail) ProtoMessage() {}

func (x *GameCategoryDetail) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameCategoryDetail.ProtoReflect.Descriptor instead.
func (*GameCategoryDetail) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{62}
}

func (x *GameCategoryDetail) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

func (x *GameCategoryDetail) GetTripartiteCategoryId() int64 {
	if x != nil {
		return x.TripartiteCategoryId
	}
	return 0
}

func (x *GameCategoryDetail) GetRank() int64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *GameCategoryDetail) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *GameCategoryDetail) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *GameCategoryDetail) GetCategorySwitch() int64 {
	if x != nil {
		return x.CategorySwitch
	}
	return 0
}

func (x *GameCategoryDetail) GetLinkType() int64 {
	if x != nil {
		return x.LinkType
	}
	return 0
}

func (x *GameCategoryDetail) GetLinkUrl() string {
	if x != nil {
		return x.LinkUrl
	}
	return ""
}

func (x *GameCategoryDetail) GetOpenMethod() int64 {
	if x != nil {
		return x.OpenMethod
	}
	return 0
}

func (x *GameCategoryDetail) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *GameCategoryDetail) GetHomeDisplayCount() int64 {
	if x != nil {
		return x.HomeDisplayCount
	}
	return 0
}

func (x *GameCategoryDetail) GetSecondPageDisplayCount() int64 {
	if x != nil {
		return x.SecondPageDisplayCount
	}
	return 0
}

func (x *GameCategoryDetail) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *GameCategoryDetail) GetCurrentIconStyle() int64 {
	if x != nil {
		return x.CurrentIconStyle
	}
	return 0
}

func (x *GameCategoryDetail) GetHomeColumnCount() int64 {
	if x != nil {
		return x.HomeColumnCount
	}
	return 0
}

func (x *GameCategoryDetail) GetSecondPageColumnCount() int64 {
	if x != nil {
		return x.SecondPageColumnCount
	}
	return 0
}

type GetCategorySimpleListByCurrReply struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Rows          []*GameCategorySimpleDetail `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCategorySimpleListByCurrReply) Reset() {
	*x = GetCategorySimpleListByCurrReply{}
	mi := &file_game_v1_game_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCategorySimpleListByCurrReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategorySimpleListByCurrReply) ProtoMessage() {}

func (x *GetCategorySimpleListByCurrReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategorySimpleListByCurrReply.ProtoReflect.Descriptor instead.
func (*GetCategorySimpleListByCurrReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{63}
}

func (x *GetCategorySimpleListByCurrReply) GetRows() []*GameCategorySimpleDetail {
	if x != nil {
		return x.Rows
	}
	return nil
}

type GameCategorySimpleDetail struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	GameCategoryId       int64                  `protobuf:"varint,1,opt,name=game_category_id,json=gameCategoryId,proto3" json:"game_category_id,omitempty"`                   // 主键（自增 ID）
	TripartiteCategoryId int64                  `protobuf:"varint,2,opt,name=tripartite_category_id,json=tripartiteCategoryId,proto3" json:"tripartite_category_id,omitempty"` // 三方游戏类型 ID
	Rank                 int64                  `protobuf:"varint,3,opt,name=rank,proto3" json:"rank,omitempty"`                                                               // 排名（表示货币在列表中的排序位置）
	CurrencyCode         string                 `protobuf:"bytes,4,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`                            // 货币代码（例如 "INR"）
	CategoryName         string                 `protobuf:"bytes,5,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`                            // 类型名称（JSON 格式）
	IconUrl              string                 `protobuf:"bytes,10,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`                                          // 图标地址
	CurrentIconStyle     int64                  `protobuf:"varint,14,opt,name=current_icon_style,json=currentIconStyle,proto3" json:"current_icon_style,omitempty"`            // 当前图标样式，1：竖版图标，2：竖版图标加名称，3：方版图标，4：横版图标
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GameCategorySimpleDetail) Reset() {
	*x = GameCategorySimpleDetail{}
	mi := &file_game_v1_game_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameCategorySimpleDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameCategorySimpleDetail) ProtoMessage() {}

func (x *GameCategorySimpleDetail) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameCategorySimpleDetail.ProtoReflect.Descriptor instead.
func (*GameCategorySimpleDetail) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{64}
}

func (x *GameCategorySimpleDetail) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

func (x *GameCategorySimpleDetail) GetTripartiteCategoryId() int64 {
	if x != nil {
		return x.TripartiteCategoryId
	}
	return 0
}

func (x *GameCategorySimpleDetail) GetRank() int64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *GameCategorySimpleDetail) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *GameCategorySimpleDetail) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *GameCategorySimpleDetail) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *GameCategorySimpleDetail) GetCurrentIconStyle() int64 {
	if x != nil {
		return x.CurrentIconStyle
	}
	return 0
}

type CategoryNameBase struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LanguageCode  string                 `protobuf:"bytes,1,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CategoryNameBase) Reset() {
	*x = CategoryNameBase{}
	mi := &file_game_v1_game_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CategoryNameBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryNameBase) ProtoMessage() {}

func (x *CategoryNameBase) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryNameBase.ProtoReflect.Descriptor instead.
func (*CategoryNameBase) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{65}
}

func (x *CategoryNameBase) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *CategoryNameBase) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 通过类型获取游戏列表请求参数
type GetGameListByCategoryReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Page           int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize       int64                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	GameCategoryId int64                  `protobuf:"varint,3,opt,name=game_category_id,json=gameCategoryId,proto3" json:"game_category_id,omitempty"`
	CurrencyCode   string                 `protobuf:"bytes,4,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	UserId         int64                  `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetGameListByCategoryReq) Reset() {
	*x = GetGameListByCategoryReq{}
	mi := &file_game_v1_game_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameListByCategoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameListByCategoryReq) ProtoMessage() {}

func (x *GetGameListByCategoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameListByCategoryReq.ProtoReflect.Descriptor instead.
func (*GetGameListByCategoryReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{66}
}

func (x *GetGameListByCategoryReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetGameListByCategoryReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetGameListByCategoryReq) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

func (x *GetGameListByCategoryReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *GetGameListByCategoryReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 通过货币获取平台请求参数
type GetPlatformListByCurrReq struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	CurrencyId           int64                  `protobuf:"varint,1,opt,name=currency_id,json=currencyId,proto3" json:"currency_id,omitempty"`
	CurrencyCode         string                 `protobuf:"bytes,2,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	GameCategoryId       int64                  `protobuf:"varint,3,opt,name=game_category_id,json=gameCategoryId,proto3" json:"game_category_id,omitempty"`
	TripartiteCategoryId int64                  `protobuf:"varint,4,opt,name=tripartite_category_id,json=tripartiteCategoryId,proto3" json:"tripartite_category_id,omitempty"`
	UserId               int64                  `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IncludeAllPlatforms  bool                   `protobuf:"varint,6,opt,name=include_all_platforms,json=includeAllPlatforms,proto3" json:"include_all_platforms,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetPlatformListByCurrReq) Reset() {
	*x = GetPlatformListByCurrReq{}
	mi := &file_game_v1_game_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlatformListByCurrReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlatformListByCurrReq) ProtoMessage() {}

func (x *GetPlatformListByCurrReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlatformListByCurrReq.ProtoReflect.Descriptor instead.
func (*GetPlatformListByCurrReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{67}
}

func (x *GetPlatformListByCurrReq) GetCurrencyId() int64 {
	if x != nil {
		return x.CurrencyId
	}
	return 0
}

func (x *GetPlatformListByCurrReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *GetPlatformListByCurrReq) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

func (x *GetPlatformListByCurrReq) GetTripartiteCategoryId() int64 {
	if x != nil {
		return x.TripartiteCategoryId
	}
	return 0
}

func (x *GetPlatformListByCurrReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetPlatformListByCurrReq) GetIncludeAllPlatforms() bool {
	if x != nil {
		return x.IncludeAllPlatforms
	}
	return false
}

// 通过货币获取平台响应参数
type GetPlatformListByCurrReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rows          []*GamePlatformDetail  `protobuf:"bytes,20,rep,name=rows,proto3" json:"rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlatformListByCurrReply) Reset() {
	*x = GetPlatformListByCurrReply{}
	mi := &file_game_v1_game_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlatformListByCurrReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlatformListByCurrReply) ProtoMessage() {}

func (x *GetPlatformListByCurrReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlatformListByCurrReply.ProtoReflect.Descriptor instead.
func (*GetPlatformListByCurrReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{68}
}

func (x *GetPlatformListByCurrReply) GetRows() []*GamePlatformDetail {
	if x != nil {
		return x.Rows
	}
	return nil
}

// 游戏平台详情
type GamePlatformDetail struct {
	state                protoimpl.MessageState     `protogen:"open.v1"`
	GamePlatformId       int64                      `protobuf:"varint,1,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"`                   // 自增主键，唯一标识每条记录
	Rank                 int64                      `protobuf:"varint,2,opt,name=rank,proto3" json:"rank,omitempty"`                                                               // 排名，表示货币在列表中的排序位置
	TripartitePlatformId int64                      `protobuf:"varint,3,opt,name=tripartite_platform_id,json=tripartitePlatformId,proto3" json:"tripartite_platform_id,omitempty"` // 三方的游戏厂商ID
	GameCategoryId       int64                      `protobuf:"varint,4,opt,name=game_category_id,json=gameCategoryId,proto3" json:"game_category_id,omitempty"`                   // 游戏类型ID
	PlatformName         string                     `protobuf:"bytes,5,opt,name=platform_name,json=platformName,proto3" json:"platform_name,omitempty"`                            // 平台名称
	CurrencyCode         string                     `protobuf:"bytes,6,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`                            // 货币代码，例如“INR”
	Style                string                     `protobuf:"bytes,7,opt,name=style,proto3" json:"style,omitempty"`                                                              // 版式风格
	MinimumEntry         float64                    `protobuf:"fixed64,8,opt,name=minimum_entry,json=minimumEntry,proto3" json:"minimum_entry,omitempty"`                          // 最低准入
	PromotionStyle       int64                      `protobuf:"varint,9,opt,name=promotion_style,json=promotionStyle,proto3" json:"promotion_style,omitempty"`                     // 宣传图样式1：默认,2：自定义
	Icon                 string                     `protobuf:"bytes,10,opt,name=icon,proto3" json:"icon,omitempty"`                                                               // 图标
	BackgroundColor      string                     `protobuf:"bytes,11,opt,name=background_color,json=backgroundColor,proto3" json:"background_color,omitempty"`                  // 图片背景
	LogoUrl              string                     `protobuf:"bytes,12,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`                                          // 品牌LOGO
	PromotionImageUrl    string                     `protobuf:"bytes,13,opt,name=promotion_image_url,json=promotionImageUrl,proto3" json:"promotion_image_url,omitempty"`          // 宣传图URL
	HotImageUrl          string                     `protobuf:"bytes,14,opt,name=hot_image_url,json=hotImageUrl,proto3" json:"hot_image_url,omitempty"`                            // 热门图URL
	PlatformRedirection  []*PlatformRedirectionBase `protobuf:"bytes,15,rep,name=platform_redirection,json=platformRedirection,proto3" json:"platform_redirection,omitempty"`      // 平台跳转方式的展示
	GameNum              int64                      `protobuf:"varint,16,opt,name=game_num,json=gameNum,proto3" json:"game_num,omitempty"`                                         // 游戏数量
	IsPlatformActive     int64                      `protobuf:"varint,21,opt,name=is_platform_active,json=isPlatformActive,proto3" json:"is_platform_active,omitempty"`
	IsUnderMaintenance   int64                      `protobuf:"varint,22,opt,name=is_under_maintenance,json=isUnderMaintenance,proto3" json:"is_under_maintenance,omitempty"`
	IconVertical         string                     `protobuf:"bytes,23,opt,name=icon_vertical,json=iconVertical,proto3" json:"icon_vertical,omitempty"`                      // 竖版图标URL
	IconSquare           string                     `protobuf:"bytes,24,opt,name=icon_square,json=iconSquare,proto3" json:"icon_square,omitempty"`                            // 方版图标URL
	IconHorizontal       string                     `protobuf:"bytes,25,opt,name=icon_horizontal,json=iconHorizontal,proto3" json:"icon_horizontal,omitempty"`                // 横版图标URL
	IsHot                int64                      `protobuf:"varint,26,opt,name=is_hot,json=isHot,proto3" json:"is_hot,omitempty"`                                          //  是否hot(1:开启，2：关闭)
	MiddlePlatformType   int64                      `protobuf:"varint,27,opt,name=middle_platform_type,json=middlePlatformType,proto3" json:"middle_platform_type,omitempty"` // 1 老中台 2 新中台
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GamePlatformDetail) Reset() {
	*x = GamePlatformDetail{}
	mi := &file_game_v1_game_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GamePlatformDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GamePlatformDetail) ProtoMessage() {}

func (x *GamePlatformDetail) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GamePlatformDetail.ProtoReflect.Descriptor instead.
func (*GamePlatformDetail) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{69}
}

func (x *GamePlatformDetail) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

func (x *GamePlatformDetail) GetRank() int64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *GamePlatformDetail) GetTripartitePlatformId() int64 {
	if x != nil {
		return x.TripartitePlatformId
	}
	return 0
}

func (x *GamePlatformDetail) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

func (x *GamePlatformDetail) GetPlatformName() string {
	if x != nil {
		return x.PlatformName
	}
	return ""
}

func (x *GamePlatformDetail) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *GamePlatformDetail) GetStyle() string {
	if x != nil {
		return x.Style
	}
	return ""
}

func (x *GamePlatformDetail) GetMinimumEntry() float64 {
	if x != nil {
		return x.MinimumEntry
	}
	return 0
}

func (x *GamePlatformDetail) GetPromotionStyle() int64 {
	if x != nil {
		return x.PromotionStyle
	}
	return 0
}

func (x *GamePlatformDetail) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *GamePlatformDetail) GetBackgroundColor() string {
	if x != nil {
		return x.BackgroundColor
	}
	return ""
}

func (x *GamePlatformDetail) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *GamePlatformDetail) GetPromotionImageUrl() string {
	if x != nil {
		return x.PromotionImageUrl
	}
	return ""
}

func (x *GamePlatformDetail) GetHotImageUrl() string {
	if x != nil {
		return x.HotImageUrl
	}
	return ""
}

func (x *GamePlatformDetail) GetPlatformRedirection() []*PlatformRedirectionBase {
	if x != nil {
		return x.PlatformRedirection
	}
	return nil
}

func (x *GamePlatformDetail) GetGameNum() int64 {
	if x != nil {
		return x.GameNum
	}
	return 0
}

func (x *GamePlatformDetail) GetIsPlatformActive() int64 {
	if x != nil {
		return x.IsPlatformActive
	}
	return 0
}

func (x *GamePlatformDetail) GetIsUnderMaintenance() int64 {
	if x != nil {
		return x.IsUnderMaintenance
	}
	return 0
}

func (x *GamePlatformDetail) GetIconVertical() string {
	if x != nil {
		return x.IconVertical
	}
	return ""
}

func (x *GamePlatformDetail) GetIconSquare() string {
	if x != nil {
		return x.IconSquare
	}
	return ""
}

func (x *GamePlatformDetail) GetIconHorizontal() string {
	if x != nil {
		return x.IconHorizontal
	}
	return ""
}

func (x *GamePlatformDetail) GetIsHot() int64 {
	if x != nil {
		return x.IsHot
	}
	return 0
}

func (x *GamePlatformDetail) GetMiddlePlatformType() int64 {
	if x != nil {
		return x.MiddlePlatformType
	}
	return 0
}

// 通过货币获取平台响应参数
type GetPlatListSimpleByCurrReply struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Rows          []*GamePlatformSimpleDetail `protobuf:"bytes,20,rep,name=rows,proto3" json:"rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlatListSimpleByCurrReply) Reset() {
	*x = GetPlatListSimpleByCurrReply{}
	mi := &file_game_v1_game_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlatListSimpleByCurrReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlatListSimpleByCurrReply) ProtoMessage() {}

func (x *GetPlatListSimpleByCurrReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlatListSimpleByCurrReply.ProtoReflect.Descriptor instead.
func (*GetPlatListSimpleByCurrReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{70}
}

func (x *GetPlatListSimpleByCurrReply) GetRows() []*GamePlatformSimpleDetail {
	if x != nil {
		return x.Rows
	}
	return nil
}

// 游戏平台详情
type GamePlatformSimpleDetail struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	GamePlatformId       int64                  `protobuf:"varint,1,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"`                   // 自增主键，唯一标识每条记录
	Rank                 int64                  `protobuf:"varint,2,opt,name=rank,proto3" json:"rank,omitempty"`                                                               // 排名，表示货币在列表中的排序位置
	TripartitePlatformId int64                  `protobuf:"varint,3,opt,name=tripartite_platform_id,json=tripartitePlatformId,proto3" json:"tripartite_platform_id,omitempty"` // 三方的游戏厂商ID
	GameCategoryId       int64                  `protobuf:"varint,4,opt,name=game_category_id,json=gameCategoryId,proto3" json:"game_category_id,omitempty"`                   // 游戏类型ID
	PlatformName         string                 `protobuf:"bytes,5,opt,name=platform_name,json=platformName,proto3" json:"platform_name,omitempty"`                            // 平台名称
	CurrencyCode         string                 `protobuf:"bytes,6,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`                            // 货币代码，例如“INR”
	Icon                 string                 `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`                                                                // 平台图标
	LogoUrl              string                 `protobuf:"bytes,8,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`                                           // 品牌LOGO
	IconVertical         string                 `protobuf:"bytes,9,opt,name=icon_vertical,json=iconVertical,proto3" json:"icon_vertical,omitempty"`                            // 竖版图标URL
	IconSquare           string                 `protobuf:"bytes,10,opt,name=icon_square,json=iconSquare,proto3" json:"icon_square,omitempty"`                                 // 方版图标URL
	IconHorizontal       string                 `protobuf:"bytes,11,opt,name=icon_horizontal,json=iconHorizontal,proto3" json:"icon_horizontal,omitempty"`                     // 横版图标URL
	IsUnderMaintenance   int64                  `protobuf:"varint,12,opt,name=is_under_maintenance,json=isUnderMaintenance,proto3" json:"is_under_maintenance,omitempty"`      // 是否在维护中
	MiddlePlatformType   int64                  `protobuf:"varint,13,opt,name=middle_platform_type,json=middlePlatformType,proto3" json:"middle_platform_type,omitempty"`      // 1 老中台 2 新中台
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GamePlatformSimpleDetail) Reset() {
	*x = GamePlatformSimpleDetail{}
	mi := &file_game_v1_game_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GamePlatformSimpleDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GamePlatformSimpleDetail) ProtoMessage() {}

func (x *GamePlatformSimpleDetail) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GamePlatformSimpleDetail.ProtoReflect.Descriptor instead.
func (*GamePlatformSimpleDetail) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{71}
}

func (x *GamePlatformSimpleDetail) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

func (x *GamePlatformSimpleDetail) GetRank() int64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *GamePlatformSimpleDetail) GetTripartitePlatformId() int64 {
	if x != nil {
		return x.TripartitePlatformId
	}
	return 0
}

func (x *GamePlatformSimpleDetail) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

func (x *GamePlatformSimpleDetail) GetPlatformName() string {
	if x != nil {
		return x.PlatformName
	}
	return ""
}

func (x *GamePlatformSimpleDetail) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *GamePlatformSimpleDetail) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *GamePlatformSimpleDetail) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *GamePlatformSimpleDetail) GetIconVertical() string {
	if x != nil {
		return x.IconVertical
	}
	return ""
}

func (x *GamePlatformSimpleDetail) GetIconSquare() string {
	if x != nil {
		return x.IconSquare
	}
	return ""
}

func (x *GamePlatformSimpleDetail) GetIconHorizontal() string {
	if x != nil {
		return x.IconHorizontal
	}
	return ""
}

func (x *GamePlatformSimpleDetail) GetIsUnderMaintenance() int64 {
	if x != nil {
		return x.IsUnderMaintenance
	}
	return 0
}

func (x *GamePlatformSimpleDetail) GetMiddlePlatformType() int64 {
	if x != nil {
		return x.MiddlePlatformType
	}
	return 0
}

// 平台跳转方式的基础类型
type PlatformRedirectionBase struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PlatformOsType int64                  `protobuf:"varint,1,opt,name=platform_os_type,json=platformOsType,proto3" json:"platform_os_type,omitempty"`
	OpenMethodType int64                  `protobuf:"varint,2,opt,name=open_method_type,json=openMethodType,proto3" json:"open_method_type,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PlatformRedirectionBase) Reset() {
	*x = PlatformRedirectionBase{}
	mi := &file_game_v1_game_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlatformRedirectionBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformRedirectionBase) ProtoMessage() {}

func (x *PlatformRedirectionBase) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformRedirectionBase.ProtoReflect.Descriptor instead.
func (*PlatformRedirectionBase) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{72}
}

func (x *PlatformRedirectionBase) GetPlatformOsType() int64 {
	if x != nil {
		return x.PlatformOsType
	}
	return 0
}

func (x *PlatformRedirectionBase) GetOpenMethodType() int64 {
	if x != nil {
		return x.OpenMethodType
	}
	return 0
}

// 游戏详情
type GameDetails struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	GameId             int64                  `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	TripartiteGameId   int64                  `protobuf:"varint,2,opt,name=tripartite_game_id,json=tripartiteGameId,proto3" json:"tripartite_game_id,omitempty"`
	Rank               int64                  `protobuf:"varint,3,opt,name=rank,proto3" json:"rank,omitempty"`
	CurrencyCode       string                 `protobuf:"bytes,4,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	GamePlatformId     int64                  `protobuf:"varint,5,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"`
	GameCategoryId     int64                  `protobuf:"varint,6,opt,name=game_category_id,json=gameCategoryId,proto3" json:"game_category_id,omitempty"`
	GameName           string                 `protobuf:"bytes,7,opt,name=game_name,json=gameName,proto3" json:"game_name,omitempty"`
	IsFavorite         int64                  `protobuf:"varint,8,opt,name=is_favorite,json=isFavorite,proto3" json:"is_favorite,omitempty"` //  收藏状态(1:普通，2：收藏)
	IsFeatured         int64                  `protobuf:"varint,9,opt,name=is_featured,json=isFeatured,proto3" json:"is_featured,omitempty"` //  是否推荐(1:开启，2：关闭)
	IsJumpTab          int64                  `protobuf:"varint,10,opt,name=is_jump_tab,json=isJumpTab,proto3" json:"is_jump_tab,omitempty"` //  是否开启跳转(1:开启，2：关闭)
	WalletModel        int64                  `protobuf:"varint,13,opt,name=wallet_model,json=walletModel,proto3" json:"wallet_model,omitempty"`
	HorizontalSupport  int64                  `protobuf:"varint,14,opt,name=horizontal_support,json=horizontalSupport,proto3" json:"horizontal_support,omitempty"`
	VerticalSupport    int64                  `protobuf:"varint,15,opt,name=vertical_support,json=verticalSupport,proto3" json:"vertical_support,omitempty"`
	TryGameSupport     int64                  `protobuf:"varint,16,opt,name=try_game_support,json=tryGameSupport,proto3" json:"try_game_support,omitempty"`
	Style              string                 `protobuf:"bytes,17,opt,name=style,proto3" json:"style,omitempty"`
	IconStyle          int64                  `protobuf:"varint,18,opt,name=icon_style,json=iconStyle,proto3" json:"icon_style,omitempty"`
	LogoUrl            string                 `protobuf:"bytes,19,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	IconImageUrl       string                 `protobuf:"bytes,20,opt,name=icon_image_url,json=iconImageUrl,proto3" json:"icon_image_url,omitempty"`
	IsGameActive       int64                  `protobuf:"varint,21,opt,name=is_game_active,json=isGameActive,proto3" json:"is_game_active,omitempty"`
	IsUnderMaintenance int64                  `protobuf:"varint,22,opt,name=is_under_maintenance,json=isUnderMaintenance,proto3" json:"is_under_maintenance,omitempty"`
	IconVertical       string                 `protobuf:"bytes,23,opt,name=icon_vertical,json=iconVertical,proto3" json:"icon_vertical,omitempty"`               // 竖版图标URL
	IconSquare         string                 `protobuf:"bytes,24,opt,name=icon_square,json=iconSquare,proto3" json:"icon_square,omitempty"`                     // 方版图标URL
	IconHorizontal     string                 `protobuf:"bytes,25,opt,name=icon_horizontal,json=iconHorizontal,proto3" json:"icon_horizontal,omitempty"`         // 横版图标URL
	IsHot              int64                  `protobuf:"varint,26,opt,name=is_hot,json=isHot,proto3" json:"is_hot,omitempty"`                                   //  是否hot(1:开启，2：关闭)
	IsSubFactory       *int64                 `protobuf:"varint,27,opt,name=is_sub_factory,json=isSubFactory,proto3,oneof" json:"is_sub_factory,omitempty"`      // 是否开启分流
	SubFactoryParams   []*SubGameInfo         `protobuf:"bytes,28,rep,name=sub_factory_params,json=subFactoryParams,proto3" json:"sub_factory_params,omitempty"` // 分流参数
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GameDetails) Reset() {
	*x = GameDetails{}
	mi := &file_game_v1_game_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameDetails) ProtoMessage() {}

func (x *GameDetails) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameDetails.ProtoReflect.Descriptor instead.
func (*GameDetails) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{73}
}

func (x *GameDetails) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *GameDetails) GetTripartiteGameId() int64 {
	if x != nil {
		return x.TripartiteGameId
	}
	return 0
}

func (x *GameDetails) GetRank() int64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *GameDetails) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *GameDetails) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

func (x *GameDetails) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

func (x *GameDetails) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *GameDetails) GetIsFavorite() int64 {
	if x != nil {
		return x.IsFavorite
	}
	return 0
}

func (x *GameDetails) GetIsFeatured() int64 {
	if x != nil {
		return x.IsFeatured
	}
	return 0
}

func (x *GameDetails) GetIsJumpTab() int64 {
	if x != nil {
		return x.IsJumpTab
	}
	return 0
}

func (x *GameDetails) GetWalletModel() int64 {
	if x != nil {
		return x.WalletModel
	}
	return 0
}

func (x *GameDetails) GetHorizontalSupport() int64 {
	if x != nil {
		return x.HorizontalSupport
	}
	return 0
}

func (x *GameDetails) GetVerticalSupport() int64 {
	if x != nil {
		return x.VerticalSupport
	}
	return 0
}

func (x *GameDetails) GetTryGameSupport() int64 {
	if x != nil {
		return x.TryGameSupport
	}
	return 0
}

func (x *GameDetails) GetStyle() string {
	if x != nil {
		return x.Style
	}
	return ""
}

func (x *GameDetails) GetIconStyle() int64 {
	if x != nil {
		return x.IconStyle
	}
	return 0
}

func (x *GameDetails) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *GameDetails) GetIconImageUrl() string {
	if x != nil {
		return x.IconImageUrl
	}
	return ""
}

func (x *GameDetails) GetIsGameActive() int64 {
	if x != nil {
		return x.IsGameActive
	}
	return 0
}

func (x *GameDetails) GetIsUnderMaintenance() int64 {
	if x != nil {
		return x.IsUnderMaintenance
	}
	return 0
}

func (x *GameDetails) GetIconVertical() string {
	if x != nil {
		return x.IconVertical
	}
	return ""
}

func (x *GameDetails) GetIconSquare() string {
	if x != nil {
		return x.IconSquare
	}
	return ""
}

func (x *GameDetails) GetIconHorizontal() string {
	if x != nil {
		return x.IconHorizontal
	}
	return ""
}

func (x *GameDetails) GetIsHot() int64 {
	if x != nil {
		return x.IsHot
	}
	return 0
}

func (x *GameDetails) GetIsSubFactory() int64 {
	if x != nil && x.IsSubFactory != nil {
		return *x.IsSubFactory
	}
	return 0
}

func (x *GameDetails) GetSubFactoryParams() []*SubGameInfo {
	if x != nil {
		return x.SubFactoryParams
	}
	return nil
}

// 子游戏信息
type SubGameInfo struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	GameId           int64                  `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`                                 // 游戏ID
	TripartiteGameId int64                  `protobuf:"varint,2,opt,name=tripartite_game_id,json=tripartiteGameId,proto3" json:"tripartite_game_id,omitempty"` // 三方游戏ID
	GameName         string                 `protobuf:"bytes,3,opt,name=game_name,json=gameName,proto3" json:"game_name,omitempty"`                            // 游戏名称
	GamePlatformId   int64                  `protobuf:"varint,4,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"`       // 游戏平台ID
	GamePlatformName string                 `protobuf:"bytes,5,opt,name=game_platform_name,json=gamePlatformName,proto3" json:"game_platform_name,omitempty"`  // 游戏平台名称
	GameCategoryId   int64                  `protobuf:"varint,6,opt,name=game_category_id,json=gameCategoryId,proto3" json:"game_category_id,omitempty"`       // 游戏类型ID
	Weight           int64                  `protobuf:"varint,7,opt,name=weight,proto3" json:"weight,omitempty"`                                               // 权重
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SubGameInfo) Reset() {
	*x = SubGameInfo{}
	mi := &file_game_v1_game_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubGameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubGameInfo) ProtoMessage() {}

func (x *SubGameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubGameInfo.ProtoReflect.Descriptor instead.
func (*SubGameInfo) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{74}
}

func (x *SubGameInfo) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *SubGameInfo) GetTripartiteGameId() int64 {
	if x != nil {
		return x.TripartiteGameId
	}
	return 0
}

func (x *SubGameInfo) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *SubGameInfo) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

func (x *SubGameInfo) GetGamePlatformName() string {
	if x != nil {
		return x.GamePlatformName
	}
	return ""
}

func (x *SubGameInfo) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

func (x *SubGameInfo) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type GameSimpleDetails struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	GameId           int64                  `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	TripartiteGameId int64                  `protobuf:"varint,2,opt,name=tripartite_game_id,json=tripartiteGameId,proto3" json:"tripartite_game_id,omitempty"`
	Rank             int64                  `protobuf:"varint,3,opt,name=rank,proto3" json:"rank,omitempty"`
	CurrencyCode     string                 `protobuf:"bytes,4,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	GamePlatformId   int64                  `protobuf:"varint,5,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"`
	GameCategoryId   int64                  `protobuf:"varint,6,opt,name=game_category_id,json=gameCategoryId,proto3" json:"game_category_id,omitempty"`
	GameName         string                 `protobuf:"bytes,7,opt,name=game_name,json=gameName,proto3" json:"game_name,omitempty"`
	LogoUrl          string                 `protobuf:"bytes,19,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	IconImageUrl     string                 `protobuf:"bytes,20,opt,name=icon_image_url,json=iconImageUrl,proto3" json:"icon_image_url,omitempty"`
	IconVertical     string                 `protobuf:"bytes,23,opt,name=icon_vertical,json=iconVertical,proto3" json:"icon_vertical,omitempty"`       // 竖版图标URL
	IconSquare       string                 `protobuf:"bytes,24,opt,name=icon_square,json=iconSquare,proto3" json:"icon_square,omitempty"`             // 方版图标URL
	IconHorizontal   string                 `protobuf:"bytes,25,opt,name=icon_horizontal,json=iconHorizontal,proto3" json:"icon_horizontal,omitempty"` // 横版图标URL
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GameSimpleDetails) Reset() {
	*x = GameSimpleDetails{}
	mi := &file_game_v1_game_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameSimpleDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSimpleDetails) ProtoMessage() {}

func (x *GameSimpleDetails) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSimpleDetails.ProtoReflect.Descriptor instead.
func (*GameSimpleDetails) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{75}
}

func (x *GameSimpleDetails) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *GameSimpleDetails) GetTripartiteGameId() int64 {
	if x != nil {
		return x.TripartiteGameId
	}
	return 0
}

func (x *GameSimpleDetails) GetRank() int64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *GameSimpleDetails) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *GameSimpleDetails) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

func (x *GameSimpleDetails) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

func (x *GameSimpleDetails) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *GameSimpleDetails) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *GameSimpleDetails) GetIconImageUrl() string {
	if x != nil {
		return x.IconImageUrl
	}
	return ""
}

func (x *GameSimpleDetails) GetIconVertical() string {
	if x != nil {
		return x.IconVertical
	}
	return ""
}

func (x *GameSimpleDetails) GetIconSquare() string {
	if x != nil {
		return x.IconSquare
	}
	return ""
}

func (x *GameSimpleDetails) GetIconHorizontal() string {
	if x != nil {
		return x.IconHorizontal
	}
	return ""
}

// 通过类型获取游戏列表响应参数
type GetGameDetailsListReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int64                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Total         int64                  `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Rows          []*GameDetails         `protobuf:"bytes,4,rep,name=rows,proto3" json:"rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGameDetailsListReply) Reset() {
	*x = GetGameDetailsListReply{}
	mi := &file_game_v1_game_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameDetailsListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameDetailsListReply) ProtoMessage() {}

func (x *GetGameDetailsListReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameDetailsListReply.ProtoReflect.Descriptor instead.
func (*GetGameDetailsListReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{76}
}

func (x *GetGameDetailsListReply) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetGameDetailsListReply) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetGameDetailsListReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetGameDetailsListReply) GetRows() []*GameDetails {
	if x != nil {
		return x.Rows
	}
	return nil
}

type GetGameSimpleListBySearchReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int64                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Total         int64                  `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Rows          []*GameSimpleDetails   `protobuf:"bytes,4,rep,name=rows,proto3" json:"rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGameSimpleListBySearchReply) Reset() {
	*x = GetGameSimpleListBySearchReply{}
	mi := &file_game_v1_game_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameSimpleListBySearchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameSimpleListBySearchReply) ProtoMessage() {}

func (x *GetGameSimpleListBySearchReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameSimpleListBySearchReply.ProtoReflect.Descriptor instead.
func (*GetGameSimpleListBySearchReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{77}
}

func (x *GetGameSimpleListBySearchReply) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetGameSimpleListBySearchReply) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetGameSimpleListBySearchReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetGameSimpleListBySearchReply) GetRows() []*GameSimpleDetails {
	if x != nil {
		return x.Rows
	}
	return nil
}

// 通过平台获取游戏列表请求参数
type GetGameListByPlatformReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Page           int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize       int64                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	GamePlatformId int64                  `protobuf:"varint,3,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"`
	CurrencyCode   string                 `protobuf:"bytes,4,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	UserId         int64                  `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetGameListByPlatformReq) Reset() {
	*x = GetGameListByPlatformReq{}
	mi := &file_game_v1_game_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameListByPlatformReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameListByPlatformReq) ProtoMessage() {}

func (x *GetGameListByPlatformReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameListByPlatformReq.ProtoReflect.Descriptor instead.
func (*GetGameListByPlatformReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{78}
}

func (x *GetGameListByPlatformReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetGameListByPlatformReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetGameListByPlatformReq) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

func (x *GetGameListByPlatformReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *GetGameListByPlatformReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GamePlatformDetailsReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	GameId         int64                  `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	GameCategoryId int64                  `protobuf:"varint,2,opt,name=game_category_id,json=gameCategoryId,proto3" json:"game_category_id,omitempty"`
	GamePlatformId int64                  `protobuf:"varint,3,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GamePlatformDetailsReq) Reset() {
	*x = GamePlatformDetailsReq{}
	mi := &file_game_v1_game_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GamePlatformDetailsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GamePlatformDetailsReq) ProtoMessage() {}

func (x *GamePlatformDetailsReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GamePlatformDetailsReq.ProtoReflect.Descriptor instead.
func (*GamePlatformDetailsReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{79}
}

func (x *GamePlatformDetailsReq) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *GamePlatformDetailsReq) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

func (x *GamePlatformDetailsReq) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

// 通过搜索获取游戏列表请求参数
type GetGameListBySearchReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Page           int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize       int64                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	SearchValue    string                 `protobuf:"bytes,3,opt,name=search_value,json=searchValue,proto3" json:"search_value,omitempty"`
	CurrencyCode   string                 `protobuf:"bytes,4,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	UserId         int64                  `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GamePlatformId int64                  `protobuf:"varint,6,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"`
	GameCategoryId int64                  `protobuf:"varint,7,opt,name=game_category_id,json=gameCategoryId,proto3" json:"game_category_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetGameListBySearchReq) Reset() {
	*x = GetGameListBySearchReq{}
	mi := &file_game_v1_game_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameListBySearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameListBySearchReq) ProtoMessage() {}

func (x *GetGameListBySearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameListBySearchReq.ProtoReflect.Descriptor instead.
func (*GetGameListBySearchReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{80}
}

func (x *GetGameListBySearchReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetGameListBySearchReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetGameListBySearchReq) GetSearchValue() string {
	if x != nil {
		return x.SearchValue
	}
	return ""
}

func (x *GetGameListBySearchReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *GetGameListBySearchReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetGameListBySearchReq) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

func (x *GetGameListBySearchReq) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

// 添加收藏
type GameHandelFavoriteReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GameId        int64                  `protobuf:"varint,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	CurrencyCode  string                 `protobuf:"bytes,3,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameHandelFavoriteReq) Reset() {
	*x = GameHandelFavoriteReq{}
	mi := &file_game_v1_game_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameHandelFavoriteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameHandelFavoriteReq) ProtoMessage() {}

func (x *GameHandelFavoriteReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameHandelFavoriteReq.ProtoReflect.Descriptor instead.
func (*GameHandelFavoriteReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{81}
}

func (x *GameHandelFavoriteReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GameHandelFavoriteReq) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *GameHandelFavoriteReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

// 通过搜索获取游戏列表请求参数
type GetGameFavoriteListReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Page           int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize       int64                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	UserId         int64                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GamePlatformId int64                  `protobuf:"varint,4,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"`
	GameCategoryId int64                  `protobuf:"varint,7,opt,name=game_category_id,json=gameCategoryId,proto3" json:"game_category_id,omitempty"` // 游戏类别ID
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetGameFavoriteListReq) Reset() {
	*x = GetGameFavoriteListReq{}
	mi := &file_game_v1_game_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameFavoriteListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameFavoriteListReq) ProtoMessage() {}

func (x *GetGameFavoriteListReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameFavoriteListReq.ProtoReflect.Descriptor instead.
func (*GetGameFavoriteListReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{82}
}

func (x *GetGameFavoriteListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetGameFavoriteListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetGameFavoriteListReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetGameFavoriteListReq) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

func (x *GetGameFavoriteListReq) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

type GetUserFavoriteIdsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserFavoriteIdsReq) Reset() {
	*x = GetUserFavoriteIdsReq{}
	mi := &file_game_v1_game_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserFavoriteIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserFavoriteIdsReq) ProtoMessage() {}

func (x *GetUserFavoriteIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserFavoriteIdsReq.ProtoReflect.Descriptor instead.
func (*GetUserFavoriteIdsReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{83}
}

func (x *GetUserFavoriteIdsReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserFavoriteIdsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FavoriteIds   map[int64]bool         `protobuf:"bytes,1,rep,name=favoriteIds,proto3" json:"favoriteIds,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserFavoriteIdsReply) Reset() {
	*x = GetUserFavoriteIdsReply{}
	mi := &file_game_v1_game_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserFavoriteIdsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserFavoriteIdsReply) ProtoMessage() {}

func (x *GetUserFavoriteIdsReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserFavoriteIdsReply.ProtoReflect.Descriptor instead.
func (*GetUserFavoriteIdsReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{84}
}

func (x *GetUserFavoriteIdsReply) GetFavoriteIds() map[int64]bool {
	if x != nil {
		return x.FavoriteIds
	}
	return nil
}

// 通过搜索获取游戏列表请求参数
type GetGameRecentlyListReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Page           int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize       int64                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	UserId         int64                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GamePlatformId int64                  `protobuf:"varint,4,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"`
	GameCategoryId int64                  `protobuf:"varint,7,opt,name=game_category_id,json=gameCategoryId,proto3" json:"game_category_id,omitempty"` // 游戏类别ID
	CurrencyCode   string                 `protobuf:"bytes,5,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetGameRecentlyListReq) Reset() {
	*x = GetGameRecentlyListReq{}
	mi := &file_game_v1_game_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameRecentlyListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameRecentlyListReq) ProtoMessage() {}

func (x *GetGameRecentlyListReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameRecentlyListReq.ProtoReflect.Descriptor instead.
func (*GetGameRecentlyListReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{85}
}

func (x *GetGameRecentlyListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetGameRecentlyListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetGameRecentlyListReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetGameRecentlyListReq) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

func (x *GetGameRecentlyListReq) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

func (x *GetGameRecentlyListReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

// 热门游戏列表
type GetHotGameListReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Page           int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize       int64                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	GamePlatformId int64                  `protobuf:"varint,3,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"`
	CurrencyCode   string                 `protobuf:"bytes,4,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	UserId         int64                  `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GameCategoryId int64                  `protobuf:"varint,7,opt,name=game_category_id,json=gameCategoryId,proto3" json:"game_category_id,omitempty"` // 游戏类别ID
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetHotGameListReq) Reset() {
	*x = GetHotGameListReq{}
	mi := &file_game_v1_game_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHotGameListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHotGameListReq) ProtoMessage() {}

func (x *GetHotGameListReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHotGameListReq.ProtoReflect.Descriptor instead.
func (*GetHotGameListReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{86}
}

func (x *GetHotGameListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetHotGameListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetHotGameListReq) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

func (x *GetHotGameListReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *GetHotGameListReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetHotGameListReq) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

// 热门平台列表
type GetHotPlatformListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurrencyCode  string                 `protobuf:"bytes,1,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHotPlatformListReq) Reset() {
	*x = GetHotPlatformListReq{}
	mi := &file_game_v1_game_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHotPlatformListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHotPlatformListReq) ProtoMessage() {}

func (x *GetHotPlatformListReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHotPlatformListReq.ProtoReflect.Descriptor instead.
func (*GetHotPlatformListReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{87}
}

func (x *GetHotPlatformListReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

type GetHotPlatformListReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rows          []*GamePlatformDetail  `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHotPlatformListReply) Reset() {
	*x = GetHotPlatformListReply{}
	mi := &file_game_v1_game_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHotPlatformListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHotPlatformListReply) ProtoMessage() {}

func (x *GetHotPlatformListReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHotPlatformListReply.ProtoReflect.Descriptor instead.
func (*GetHotPlatformListReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{88}
}

func (x *GetHotPlatformListReply) GetRows() []*GamePlatformDetail {
	if x != nil {
		return x.Rows
	}
	return nil
}

type GameDetailsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameId        int64                  `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameDetailsReq) Reset() {
	*x = GameDetailsReq{}
	mi := &file_game_v1_game_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameDetailsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameDetailsReq) ProtoMessage() {}

func (x *GameDetailsReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameDetailsReq.ProtoReflect.Descriptor instead.
func (*GameDetailsReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{89}
}

func (x *GameDetailsReq) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *GameDetailsReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserBetRecordListReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserId         int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page           int64                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                                             // 页码
	PageSize       int64                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                     // 每页数量
	StartTime      int64                  `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                  // 查询下注开始时间(毫秒)
	EndTime        int64                  `protobuf:"varint,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                        // 查询下注结束时间(毫秒)
	GamePlatformId int64                  `protobuf:"varint,6,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"` // 游戏平台ID
	GameCategoryId int64                  `protobuf:"varint,7,opt,name=game_category_id,json=gameCategoryId,proto3" json:"game_category_id,omitempty"` // 游戏类别ID
	GameId         int64                  `protobuf:"varint,8,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`                           // 游戏ID
	Status         int64                  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`                                         // 状态: 0-全部，1-未结算，2-已结算，3-已撤单，4-无效
	SortOrder      int64                  `protobuf:"varint,10,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order,omitempty"`                 // 排序方式: 1-正序，2-倒序(有效投注金额)
	CurrencyCode   string                 `protobuf:"bytes,11,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetUserBetRecordListReq) Reset() {
	*x = GetUserBetRecordListReq{}
	mi := &file_game_v1_game_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBetRecordListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBetRecordListReq) ProtoMessage() {}

func (x *GetUserBetRecordListReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBetRecordListReq.ProtoReflect.Descriptor instead.
func (*GetUserBetRecordListReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{90}
}

func (x *GetUserBetRecordListReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserBetRecordListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetUserBetRecordListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetUserBetRecordListReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetUserBetRecordListReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetUserBetRecordListReq) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

func (x *GetUserBetRecordListReq) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

func (x *GetUserBetRecordListReq) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *GetUserBetRecordListReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetUserBetRecordListReq) GetSortOrder() int64 {
	if x != nil {
		return x.SortOrder
	}
	return 0
}

func (x *GetUserBetRecordListReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

// 通过类型获取游戏列表响应参数
type GetUserBetRecordListReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int64                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Total         int64                  `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Rows          []*BetRecordInfo       `protobuf:"bytes,4,rep,name=rows,proto3" json:"rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserBetRecordListReply) Reset() {
	*x = GetUserBetRecordListReply{}
	mi := &file_game_v1_game_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBetRecordListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBetRecordListReply) ProtoMessage() {}

func (x *GetUserBetRecordListReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBetRecordListReply.ProtoReflect.Descriptor instead.
func (*GetUserBetRecordListReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{91}
}

func (x *GetUserBetRecordListReply) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetUserBetRecordListReply) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetUserBetRecordListReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetUserBetRecordListReply) GetRows() []*BetRecordInfo {
	if x != nil {
		return x.Rows
	}
	return nil
}

// 投注详情
type BetRecordInfo struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	OrderId          string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                              // 注单编号
	BetTime          int64                  `protobuf:"varint,2,opt,name=bet_time,json=betTime,proto3" json:"bet_time,omitempty"`                             // 投注时间
	Status           int64                  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`                                              // 状态: 1-未结算，2-已结算，3-已撤单，4-无效
	GamePlatformId   int64                  `protobuf:"varint,4,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"`      // 游戏平台ID
	GamePlatformName string                 `protobuf:"bytes,5,opt,name=game_platform_name,json=gamePlatformName,proto3" json:"game_platform_name,omitempty"` // 游戏平台名称
	GameCategoryId   int64                  `protobuf:"varint,6,opt,name=game_category_id,json=gameCategoryId,proto3" json:"game_category_id,omitempty"`      // 游戏类别ID
	GameCategoryName string                 `protobuf:"bytes,7,opt,name=game_category_name,json=gameCategoryName,proto3" json:"game_category_name,omitempty"` // 游戏类别名称
	GameId           int64                  `protobuf:"varint,8,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`                                // 游戏ID
	GameName         string                 `protobuf:"bytes,9,opt,name=game_name,json=gameName,proto3" json:"game_name,omitempty"`                           // 游戏名称
	OrderCount       string                 `protobuf:"bytes,10,opt,name=order_count,json=orderCount,proto3" json:"order_count,omitempty"`                    // 注单数量
	BetAmount        int64                  `protobuf:"varint,11,opt,name=bet_amount,json=betAmount,proto3" json:"bet_amount,omitempty"`                      // 投注金额
	ValidBetAmount   int64                  `protobuf:"varint,12,opt,name=valid_bet_amount,json=validBetAmount,proto3" json:"valid_bet_amount,omitempty"`     // 有效投注金额
	UserWinLoss      int64                  `protobuf:"varint,13,opt,name=user_win_loss,json=userWinLoss,proto3" json:"user_win_loss,omitempty"`              // 输赢金额
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BetRecordInfo) Reset() {
	*x = BetRecordInfo{}
	mi := &file_game_v1_game_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BetRecordInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetRecordInfo) ProtoMessage() {}

func (x *BetRecordInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetRecordInfo.ProtoReflect.Descriptor instead.
func (*BetRecordInfo) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{92}
}

func (x *BetRecordInfo) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *BetRecordInfo) GetBetTime() int64 {
	if x != nil {
		return x.BetTime
	}
	return 0
}

func (x *BetRecordInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *BetRecordInfo) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

func (x *BetRecordInfo) GetGamePlatformName() string {
	if x != nil {
		return x.GamePlatformName
	}
	return ""
}

func (x *BetRecordInfo) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

func (x *BetRecordInfo) GetGameCategoryName() string {
	if x != nil {
		return x.GameCategoryName
	}
	return ""
}

func (x *BetRecordInfo) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *BetRecordInfo) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *BetRecordInfo) GetOrderCount() string {
	if x != nil {
		return x.OrderCount
	}
	return ""
}

func (x *BetRecordInfo) GetBetAmount() int64 {
	if x != nil {
		return x.BetAmount
	}
	return 0
}

func (x *BetRecordInfo) GetValidBetAmount() int64 {
	if x != nil {
		return x.ValidBetAmount
	}
	return 0
}

func (x *BetRecordInfo) GetUserWinLoss() int64 {
	if x != nil {
		return x.UserWinLoss
	}
	return 0
}

type GetUserBetRecordSummaryReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserId         int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	StartTime      int64                  `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                  // 查询下注开始时间(毫秒)
	EndTime        int64                  `protobuf:"varint,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                        // 查询下注结束时间(毫秒)
	GamePlatformId int64                  `protobuf:"varint,6,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"` // 游戏平台ID
	GameCategoryId int64                  `protobuf:"varint,7,opt,name=game_category_id,json=gameCategoryId,proto3" json:"game_category_id,omitempty"` // 游戏类别ID
	SortOrder      int64                  `protobuf:"varint,10,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order,omitempty"`                 // 排序方式: 1-正序，2-倒序(投注金额)
	CurrencyCode   string                 `protobuf:"bytes,11,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetUserBetRecordSummaryReq) Reset() {
	*x = GetUserBetRecordSummaryReq{}
	mi := &file_game_v1_game_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBetRecordSummaryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBetRecordSummaryReq) ProtoMessage() {}

func (x *GetUserBetRecordSummaryReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBetRecordSummaryReq.ProtoReflect.Descriptor instead.
func (*GetUserBetRecordSummaryReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{93}
}

func (x *GetUserBetRecordSummaryReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserBetRecordSummaryReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetUserBetRecordSummaryReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetUserBetRecordSummaryReq) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

func (x *GetUserBetRecordSummaryReq) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

func (x *GetUserBetRecordSummaryReq) GetSortOrder() int64 {
	if x != nil {
		return x.SortOrder
	}
	return 0
}

func (x *GetUserBetRecordSummaryReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

type GetUserBetRecordSummaryReply struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	BetSummaryList      []*BetSummaryInfo      `protobuf:"bytes,1,rep,name=bet_summary_list,json=betSummaryList,proto3" json:"bet_summary_list,omitempty"`                   // 注单详情列表
	TotalOrderCount     int64                  `protobuf:"varint,2,opt,name=total_order_count,json=totalOrderCount,proto3" json:"total_order_count,omitempty"`               // 注单数量
	TotalValidBetAmount int64                  `protobuf:"varint,3,opt,name=total_valid_bet_amount,json=totalValidBetAmount,proto3" json:"total_valid_bet_amount,omitempty"` // 有效投注金额
	TotalLoseWinAmount  int64                  `protobuf:"varint,4,opt,name=total_lose_win_amount,json=totalLoseWinAmount,proto3" json:"total_lose_win_amount,omitempty"`    // 输赢金额
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetUserBetRecordSummaryReply) Reset() {
	*x = GetUserBetRecordSummaryReply{}
	mi := &file_game_v1_game_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBetRecordSummaryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBetRecordSummaryReply) ProtoMessage() {}

func (x *GetUserBetRecordSummaryReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBetRecordSummaryReply.ProtoReflect.Descriptor instead.
func (*GetUserBetRecordSummaryReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{94}
}

func (x *GetUserBetRecordSummaryReply) GetBetSummaryList() []*BetSummaryInfo {
	if x != nil {
		return x.BetSummaryList
	}
	return nil
}

func (x *GetUserBetRecordSummaryReply) GetTotalOrderCount() int64 {
	if x != nil {
		return x.TotalOrderCount
	}
	return 0
}

func (x *GetUserBetRecordSummaryReply) GetTotalValidBetAmount() int64 {
	if x != nil {
		return x.TotalValidBetAmount
	}
	return 0
}

func (x *GetUserBetRecordSummaryReply) GetTotalLoseWinAmount() int64 {
	if x != nil {
		return x.TotalLoseWinAmount
	}
	return 0
}

type BetSummaryInfo struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	BetTime          string                 `protobuf:"bytes,1,opt,name=bet_time,json=betTime,proto3" json:"bet_time,omitempty"`                              // 投注时间
	GamePlatformId   int64                  `protobuf:"varint,2,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"`      // 游戏平台ID
	GamePlatformName string                 `protobuf:"bytes,3,opt,name=game_platform_name,json=gamePlatformName,proto3" json:"game_platform_name,omitempty"` // 游戏平台名称
	GameCategoryId   int64                  `protobuf:"varint,4,opt,name=game_category_id,json=gameCategoryId,proto3" json:"game_category_id,omitempty"`      // 游戏类别ID
	GameCategoryName string                 `protobuf:"bytes,5,opt,name=game_category_name,json=gameCategoryName,proto3" json:"game_category_name,omitempty"` // 游戏类别名称
	GameId           int64                  `protobuf:"varint,6,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`                                // 游戏ID
	GameName         string                 `protobuf:"bytes,7,opt,name=game_name,json=gameName,proto3" json:"game_name,omitempty"`                           // 游戏名称
	OrderCount       int64                  `protobuf:"varint,8,opt,name=order_count,json=orderCount,proto3" json:"order_count,omitempty"`                    // 注单数量
	BetAmount        int64                  `protobuf:"varint,9,opt,name=bet_amount,json=betAmount,proto3" json:"bet_amount,omitempty"`                       // 投注金额
	UserWinLoss      int64                  `protobuf:"varint,10,opt,name=user_win_loss,json=userWinLoss,proto3" json:"user_win_loss,omitempty"`              // 输赢金额
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BetSummaryInfo) Reset() {
	*x = BetSummaryInfo{}
	mi := &file_game_v1_game_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BetSummaryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetSummaryInfo) ProtoMessage() {}

func (x *BetSummaryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetSummaryInfo.ProtoReflect.Descriptor instead.
func (*BetSummaryInfo) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{95}
}

func (x *BetSummaryInfo) GetBetTime() string {
	if x != nil {
		return x.BetTime
	}
	return ""
}

func (x *BetSummaryInfo) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

func (x *BetSummaryInfo) GetGamePlatformName() string {
	if x != nil {
		return x.GamePlatformName
	}
	return ""
}

func (x *BetSummaryInfo) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

func (x *BetSummaryInfo) GetGameCategoryName() string {
	if x != nil {
		return x.GameCategoryName
	}
	return ""
}

func (x *BetSummaryInfo) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *BetSummaryInfo) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *BetSummaryInfo) GetOrderCount() int64 {
	if x != nil {
		return x.OrderCount
	}
	return 0
}

func (x *BetSummaryInfo) GetBetAmount() int64 {
	if x != nil {
		return x.BetAmount
	}
	return 0
}

func (x *BetSummaryInfo) GetUserWinLoss() int64 {
	if x != nil {
		return x.UserWinLoss
	}
	return 0
}

type GetHomeGameItemReq struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Num             int64                  `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	CurrencyCode    string                 `protobuf:"bytes,2,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	GameCategoryIds []int64                `protobuf:"varint,3,rep,packed,name=game_category_ids,json=gameCategoryIds,proto3" json:"game_category_ids,omitempty"`
	UserId          int64                  `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetHomeGameItemReq) Reset() {
	*x = GetHomeGameItemReq{}
	mi := &file_game_v1_game_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHomeGameItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHomeGameItemReq) ProtoMessage() {}

func (x *GetHomeGameItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHomeGameItemReq.ProtoReflect.Descriptor instead.
func (*GetHomeGameItemReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{96}
}

func (x *GetHomeGameItemReq) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *GetHomeGameItemReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *GetHomeGameItemReq) GetGameCategoryIds() []int64 {
	if x != nil {
		return x.GameCategoryIds
	}
	return nil
}

func (x *GetHomeGameItemReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type PlatformDetailsList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*GamePlatformDetail  `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlatformDetailsList) Reset() {
	*x = PlatformDetailsList{}
	mi := &file_game_v1_game_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlatformDetailsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformDetailsList) ProtoMessage() {}

func (x *PlatformDetailsList) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformDetailsList.ProtoReflect.Descriptor instead.
func (*PlatformDetailsList) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{97}
}

func (x *PlatformDetailsList) GetItems() []*GamePlatformDetail {
	if x != nil {
		return x.Items
	}
	return nil
}

type GameDetailsList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*GameDetails         `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameDetailsList) Reset() {
	*x = GameDetailsList{}
	mi := &file_game_v1_game_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameDetailsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameDetailsList) ProtoMessage() {}

func (x *GameDetailsList) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameDetailsList.ProtoReflect.Descriptor instead.
func (*GameDetailsList) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{98}
}

func (x *GameDetailsList) GetItems() []*GameDetails {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetHomePlatformItemsReply struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	HomeItem      map[int64]*PlatformDetailsList `protobuf:"bytes,1,rep,name=home_item,json=homeItem,proto3" json:"home_item,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHomePlatformItemsReply) Reset() {
	*x = GetHomePlatformItemsReply{}
	mi := &file_game_v1_game_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHomePlatformItemsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHomePlatformItemsReply) ProtoMessage() {}

func (x *GetHomePlatformItemsReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHomePlatformItemsReply.ProtoReflect.Descriptor instead.
func (*GetHomePlatformItemsReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{99}
}

func (x *GetHomePlatformItemsReply) GetHomeItem() map[int64]*PlatformDetailsList {
	if x != nil {
		return x.HomeItem
	}
	return nil
}

type GetHomeGameItemsReply struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	HomeItem      map[int64]*GameDetailsList `protobuf:"bytes,1,rep,name=home_item,json=homeItem,proto3" json:"home_item,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHomeGameItemsReply) Reset() {
	*x = GetHomeGameItemsReply{}
	mi := &file_game_v1_game_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHomeGameItemsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHomeGameItemsReply) ProtoMessage() {}

func (x *GetHomeGameItemsReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHomeGameItemsReply.ProtoReflect.Descriptor instead.
func (*GetHomeGameItemsReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{100}
}

func (x *GetHomeGameItemsReply) GetHomeItem() map[int64]*GameDetailsList {
	if x != nil {
		return x.HomeItem
	}
	return nil
}

type GetGameConfInfoReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConfigKey     string                 `protobuf:"bytes,1,opt,name=config_key,json=configKey,proto3" json:"config_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGameConfInfoReq) Reset() {
	*x = GetGameConfInfoReq{}
	mi := &file_game_v1_game_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameConfInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameConfInfoReq) ProtoMessage() {}

func (x *GetGameConfInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameConfInfoReq.ProtoReflect.Descriptor instead.
func (*GetGameConfInfoReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{101}
}

func (x *GetGameConfInfoReq) GetConfigKey() string {
	if x != nil {
		return x.ConfigKey
	}
	return ""
}

type GetGameConfInfoReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConfigValue   string                 `protobuf:"bytes,1,opt,name=config_value,json=configValue,proto3" json:"config_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGameConfInfoReply) Reset() {
	*x = GetGameConfInfoReply{}
	mi := &file_game_v1_game_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameConfInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameConfInfoReply) ProtoMessage() {}

func (x *GetGameConfInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameConfInfoReply.ProtoReflect.Descriptor instead.
func (*GetGameConfInfoReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{102}
}

func (x *GetGameConfInfoReply) GetConfigValue() string {
	if x != nil {
		return x.ConfigValue
	}
	return ""
}

// 通过搜索获取游戏列表请求参数
type GetNewGameListReq struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Page                 int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize             int64                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	SearchValue          string                 `protobuf:"bytes,3,opt,name=search_value,json=searchValue,proto3" json:"search_value,omitempty"`
	CurrencyCode         string                 `protobuf:"bytes,4,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	UserId               int64                  `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GamePlatformId       int64                  `protobuf:"varint,6,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"`
	TripartiteCategoryId int64                  `protobuf:"varint,7,opt,name=tripartite_category_id,json=tripartiteCategoryId,proto3" json:"tripartite_category_id,omitempty"`
	Typology             int64                  `protobuf:"varint,8,opt,name=typology,proto3" json:"typology,omitempty"` //  1 :热门，2：最近，3：收藏 0 全部 筛选的子类型
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetNewGameListReq) Reset() {
	*x = GetNewGameListReq{}
	mi := &file_game_v1_game_proto_msgTypes[103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNewGameListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewGameListReq) ProtoMessage() {}

func (x *GetNewGameListReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewGameListReq.ProtoReflect.Descriptor instead.
func (*GetNewGameListReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{103}
}

func (x *GetNewGameListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetNewGameListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetNewGameListReq) GetSearchValue() string {
	if x != nil {
		return x.SearchValue
	}
	return ""
}

func (x *GetNewGameListReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *GetNewGameListReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetNewGameListReq) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

func (x *GetNewGameListReq) GetTripartiteCategoryId() int64 {
	if x != nil {
		return x.TripartiteCategoryId
	}
	return 0
}

func (x *GetNewGameListReq) GetTypology() int64 {
	if x != nil {
		return x.Typology
	}
	return 0
}

type GetNewGameListReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int64                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Total         int64                  `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	TotalPage     int64                  `protobuf:"varint,4,opt,name=total_page,json=totalPage,proto3" json:"total_page,omitempty"`
	Rows          []*GameValueItem       `protobuf:"bytes,5,rep,name=rows,proto3" json:"rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNewGameListReply) Reset() {
	*x = GetNewGameListReply{}
	mi := &file_game_v1_game_proto_msgTypes[104]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNewGameListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewGameListReply) ProtoMessage() {}

func (x *GetNewGameListReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[104]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewGameListReply.ProtoReflect.Descriptor instead.
func (*GetNewGameListReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{104}
}

func (x *GetNewGameListReply) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetNewGameListReply) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetNewGameListReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetNewGameListReply) GetTotalPage() int64 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

func (x *GetNewGameListReply) GetRows() []*GameValueItem {
	if x != nil {
		return x.Rows
	}
	return nil
}

type GameValueItem struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	CategoryType              int64                  `protobuf:"varint,1,opt,name=category_type,json=categoryType,proto3" json:"category_type,omitempty"`                                            // 类别类型
	Rank                      int64                  `protobuf:"varint,2,opt,name=rank,proto3" json:"rank,omitempty"`                                                                                // 排名
	CurrencyCode              string                 `protobuf:"bytes,3,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`                                             // 货币代码
	GameCategoryId            int64                  `protobuf:"varint,4,opt,name=game_category_id,json=gameCategoryId,proto3" json:"game_category_id,omitempty"`                                    // 游戏类别ID
	GameId                    int64                  `protobuf:"varint,5,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`                                                              // 游戏ID
	TripartiteGameId          int64                  `protobuf:"varint,6,opt,name=tripartite_game_id,json=tripartiteGameId,proto3" json:"tripartite_game_id,omitempty"`                              // 第三方游戏ID
	GameName                  string                 `protobuf:"bytes,7,opt,name=game_name,json=gameName,proto3" json:"game_name,omitempty"`                                                         // 游戏名称
	GamePlatformId            int64                  `protobuf:"varint,8,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"`                                    // 游戏平台ID
	TripartiteGamePlatformId  int64                  `protobuf:"varint,9,opt,name=tripartite_game_platform_id,json=tripartiteGamePlatformId,proto3" json:"tripartite_game_platform_id,omitempty"`    // 第三方游戏平台ID
	GamePlatformName          string                 `protobuf:"bytes,10,opt,name=game_platform_name,json=gamePlatformName,proto3" json:"game_platform_name,omitempty"`                              // 游戏平台名称
	IsFavorite                int64                  `protobuf:"varint,11,opt,name=is_favorite,json=isFavorite,proto3" json:"is_favorite,omitempty"`                                                 // 是否收藏
	IsFeatured                int64                  `protobuf:"varint,12,opt,name=is_featured,json=isFeatured,proto3" json:"is_featured,omitempty"`                                                 // 是否为特色游戏
	IsJumpTab                 int64                  `protobuf:"varint,13,opt,name=is_jump_tab,json=isJumpTab,proto3" json:"is_jump_tab,omitempty"`                                                  // 是否跳转标签
	WalletModel               int64                  `protobuf:"varint,14,opt,name=wallet_model,json=walletModel,proto3" json:"wallet_model,omitempty"`                                              // 钱包模式
	HorizontalSupport         int64                  `protobuf:"varint,15,opt,name=horizontal_support,json=horizontalSupport,proto3" json:"horizontal_support,omitempty"`                            // 横屏支持
	VerticalSupport           int64                  `protobuf:"varint,16,opt,name=vertical_support,json=verticalSupport,proto3" json:"vertical_support,omitempty"`                                  // 竖屏支持
	TryGameSupport            int64                  `protobuf:"varint,17,opt,name=try_game_support,json=tryGameSupport,proto3" json:"try_game_support,omitempty"`                                   // 试玩支持
	PlatformMinimumEntry      float64                `protobuf:"fixed64,18,opt,name=platform_minimum_entry,json=platformMinimumEntry,proto3" json:"platform_minimum_entry,omitempty"`                // 平台最低准入
	PlatformPromotionStyle    int64                  `protobuf:"varint,19,opt,name=platform_promotion_style,json=platformPromotionStyle,proto3" json:"platform_promotion_style,omitempty"`           // 平台促销风格
	PlatformIcon              string                 `protobuf:"bytes,20,opt,name=platform_icon,json=platformIcon,proto3" json:"platform_icon,omitempty"`                                            // 平台图标
	PlatformBackgroundColor   string                 `protobuf:"bytes,21,opt,name=platform_background_color,json=platformBackgroundColor,proto3" json:"platform_background_color,omitempty"`         // 平台背景颜色
	PlatformLogoUrl           string                 `protobuf:"bytes,22,opt,name=platform_logo_url,json=platformLogoUrl,proto3" json:"platform_logo_url,omitempty"`                                 // 平台 Logo URL
	PlatformPromotionImageUrl string                 `protobuf:"bytes,23,opt,name=platform_promotion_image_url,json=platformPromotionImageUrl,proto3" json:"platform_promotion_image_url,omitempty"` // 平台促销图片 URL
	PlatformHotImageUrl       string                 `protobuf:"bytes,24,opt,name=platform_hot_image_url,json=platformHotImageUrl,proto3" json:"platform_hot_image_url,omitempty"`                   // 平台热门图片 URL
	GameIconStyle             int64                  `protobuf:"varint,25,opt,name=game_icon_style,json=gameIconStyle,proto3" json:"game_icon_style,omitempty"`                                      // 图标风格
	GameLogoUrl               string                 `protobuf:"bytes,26,opt,name=game_logo_url,json=gameLogoUrl,proto3" json:"game_logo_url,omitempty"`                                             // 游戏 Logo URL
	GameIconImageUrl          string                 `protobuf:"bytes,27,opt,name=game_icon_image_url,json=gameIconImageUrl,proto3" json:"game_icon_image_url,omitempty"`                            // 游戏图标图片 URL
	PlatformIconVertical      string                 `protobuf:"bytes,28,opt,name=platform_icon_vertical,json=platformIconVertical,proto3" json:"platform_icon_vertical,omitempty"`                  // 平台竖版图标URL
	PlatformIconSquare        string                 `protobuf:"bytes,29,opt,name=platform_icon_square,json=platformIconSquare,proto3" json:"platform_icon_square,omitempty"`                        // 平台方版图标URL
	PlatformIconHorizontal    string                 `protobuf:"bytes,30,opt,name=platform_icon_horizontal,json=platformIconHorizontal,proto3" json:"platform_icon_horizontal,omitempty"`            // 平台横版图标URL
	GameIconVertical          string                 `protobuf:"bytes,31,opt,name=game_icon_vertical,json=gameIconVertical,proto3" json:"game_icon_vertical,omitempty"`                              // 游戏竖版图标URL
	GameIconSquare            string                 `protobuf:"bytes,32,opt,name=game_icon_square,json=gameIconSquare,proto3" json:"game_icon_square,omitempty"`                                    // 游戏方版图标URL
	GameIconHorizontal        string                 `protobuf:"bytes,33,opt,name=game_icon_horizontal,json=gameIconHorizontal,proto3" json:"game_icon_horizontal,omitempty"`                        // 游戏横版图标URL
	IsHot                     int64                  `protobuf:"varint,34,opt,name=is_hot,json=isHot,proto3" json:"is_hot,omitempty"`                                                                //  是否hot(1:开启，2：关闭)
	IsUnderMaintenance        int64                  `protobuf:"varint,35,opt,name=is_under_maintenance,json=isUnderMaintenance,proto3" json:"is_under_maintenance,omitempty"`                       // 是否在维护中 1: 是 2: 不是
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *GameValueItem) Reset() {
	*x = GameValueItem{}
	mi := &file_game_v1_game_proto_msgTypes[105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameValueItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameValueItem) ProtoMessage() {}

func (x *GameValueItem) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameValueItem.ProtoReflect.Descriptor instead.
func (*GameValueItem) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{105}
}

func (x *GameValueItem) GetCategoryType() int64 {
	if x != nil {
		return x.CategoryType
	}
	return 0
}

func (x *GameValueItem) GetRank() int64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *GameValueItem) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *GameValueItem) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

func (x *GameValueItem) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *GameValueItem) GetTripartiteGameId() int64 {
	if x != nil {
		return x.TripartiteGameId
	}
	return 0
}

func (x *GameValueItem) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *GameValueItem) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

func (x *GameValueItem) GetTripartiteGamePlatformId() int64 {
	if x != nil {
		return x.TripartiteGamePlatformId
	}
	return 0
}

func (x *GameValueItem) GetGamePlatformName() string {
	if x != nil {
		return x.GamePlatformName
	}
	return ""
}

func (x *GameValueItem) GetIsFavorite() int64 {
	if x != nil {
		return x.IsFavorite
	}
	return 0
}

func (x *GameValueItem) GetIsFeatured() int64 {
	if x != nil {
		return x.IsFeatured
	}
	return 0
}

func (x *GameValueItem) GetIsJumpTab() int64 {
	if x != nil {
		return x.IsJumpTab
	}
	return 0
}

func (x *GameValueItem) GetWalletModel() int64 {
	if x != nil {
		return x.WalletModel
	}
	return 0
}

func (x *GameValueItem) GetHorizontalSupport() int64 {
	if x != nil {
		return x.HorizontalSupport
	}
	return 0
}

func (x *GameValueItem) GetVerticalSupport() int64 {
	if x != nil {
		return x.VerticalSupport
	}
	return 0
}

func (x *GameValueItem) GetTryGameSupport() int64 {
	if x != nil {
		return x.TryGameSupport
	}
	return 0
}

func (x *GameValueItem) GetPlatformMinimumEntry() float64 {
	if x != nil {
		return x.PlatformMinimumEntry
	}
	return 0
}

func (x *GameValueItem) GetPlatformPromotionStyle() int64 {
	if x != nil {
		return x.PlatformPromotionStyle
	}
	return 0
}

func (x *GameValueItem) GetPlatformIcon() string {
	if x != nil {
		return x.PlatformIcon
	}
	return ""
}

func (x *GameValueItem) GetPlatformBackgroundColor() string {
	if x != nil {
		return x.PlatformBackgroundColor
	}
	return ""
}

func (x *GameValueItem) GetPlatformLogoUrl() string {
	if x != nil {
		return x.PlatformLogoUrl
	}
	return ""
}

func (x *GameValueItem) GetPlatformPromotionImageUrl() string {
	if x != nil {
		return x.PlatformPromotionImageUrl
	}
	return ""
}

func (x *GameValueItem) GetPlatformHotImageUrl() string {
	if x != nil {
		return x.PlatformHotImageUrl
	}
	return ""
}

func (x *GameValueItem) GetGameIconStyle() int64 {
	if x != nil {
		return x.GameIconStyle
	}
	return 0
}

func (x *GameValueItem) GetGameLogoUrl() string {
	if x != nil {
		return x.GameLogoUrl
	}
	return ""
}

func (x *GameValueItem) GetGameIconImageUrl() string {
	if x != nil {
		return x.GameIconImageUrl
	}
	return ""
}

func (x *GameValueItem) GetPlatformIconVertical() string {
	if x != nil {
		return x.PlatformIconVertical
	}
	return ""
}

func (x *GameValueItem) GetPlatformIconSquare() string {
	if x != nil {
		return x.PlatformIconSquare
	}
	return ""
}

func (x *GameValueItem) GetPlatformIconHorizontal() string {
	if x != nil {
		return x.PlatformIconHorizontal
	}
	return ""
}

func (x *GameValueItem) GetGameIconVertical() string {
	if x != nil {
		return x.GameIconVertical
	}
	return ""
}

func (x *GameValueItem) GetGameIconSquare() string {
	if x != nil {
		return x.GameIconSquare
	}
	return ""
}

func (x *GameValueItem) GetGameIconHorizontal() string {
	if x != nil {
		return x.GameIconHorizontal
	}
	return ""
}

func (x *GameValueItem) GetIsHot() int64 {
	if x != nil {
		return x.IsHot
	}
	return 0
}

func (x *GameValueItem) GetIsUnderMaintenance() int64 {
	if x != nil {
		return x.IsUnderMaintenance
	}
	return 0
}

type BigWinGameListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurrencyCode  string                 `protobuf:"bytes,1,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BigWinGameListReq) Reset() {
	*x = BigWinGameListReq{}
	mi := &file_game_v1_game_proto_msgTypes[106]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BigWinGameListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BigWinGameListReq) ProtoMessage() {}

func (x *BigWinGameListReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[106]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BigWinGameListReq.ProtoReflect.Descriptor instead.
func (*BigWinGameListReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{106}
}

func (x *BigWinGameListReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

type BigWinGameListReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rows          []*WinGameValueItem    `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BigWinGameListReply) Reset() {
	*x = BigWinGameListReply{}
	mi := &file_game_v1_game_proto_msgTypes[107]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BigWinGameListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BigWinGameListReply) ProtoMessage() {}

func (x *BigWinGameListReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[107]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BigWinGameListReply.ProtoReflect.Descriptor instead.
func (*BigWinGameListReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{107}
}

func (x *BigWinGameListReply) GetRows() []*WinGameValueItem {
	if x != nil {
		return x.Rows
	}
	return nil
}

type WinGameValueItem struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	CurrencyCode       string                 `protobuf:"bytes,3,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`                       // 货币代码
	GameCategoryId     int64                  `protobuf:"varint,4,opt,name=game_category_id,json=gameCategoryId,proto3" json:"game_category_id,omitempty"`              // 游戏类别ID
	GameId             int64                  `protobuf:"varint,5,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`                                        // 游戏ID
	TripartiteGameId   int64                  `protobuf:"varint,6,opt,name=tripartite_game_id,json=tripartiteGameId,proto3" json:"tripartite_game_id,omitempty"`        // 第三方游戏ID
	GameName           string                 `protobuf:"bytes,7,opt,name=game_name,json=gameName,proto3" json:"game_name,omitempty"`                                   // 游戏名称
	GamePlatformId     int64                  `protobuf:"varint,8,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"`              // 游戏平台ID
	IsJumpTab          int64                  `protobuf:"varint,13,opt,name=is_jump_tab,json=isJumpTab,proto3" json:"is_jump_tab,omitempty"`                            // 是否跳转标签
	WalletModel        int64                  `protobuf:"varint,14,opt,name=wallet_model,json=walletModel,proto3" json:"wallet_model,omitempty"`                        // 钱包模式
	HorizontalSupport  int64                  `protobuf:"varint,15,opt,name=horizontal_support,json=horizontalSupport,proto3" json:"horizontal_support,omitempty"`      // 横屏支持
	VerticalSupport    int64                  `protobuf:"varint,16,opt,name=vertical_support,json=verticalSupport,proto3" json:"vertical_support,omitempty"`            // 竖屏支持
	TryGameSupport     int64                  `protobuf:"varint,17,opt,name=try_game_support,json=tryGameSupport,proto3" json:"try_game_support,omitempty"`             // 试玩支持
	GameIconStyle      int64                  `protobuf:"varint,25,opt,name=game_icon_style,json=gameIconStyle,proto3" json:"game_icon_style,omitempty"`                // 图标风格
	GameLogoUrl        string                 `protobuf:"bytes,26,opt,name=game_logo_url,json=gameLogoUrl,proto3" json:"game_logo_url,omitempty"`                       // 游戏 Logo URL
	GameIconImageUrl   string                 `protobuf:"bytes,27,opt,name=game_icon_image_url,json=gameIconImageUrl,proto3" json:"game_icon_image_url,omitempty"`      // 游戏图标图片 URL
	GameWinAmount      string                 `protobuf:"bytes,28,opt,name=game_win_amount,json=gameWinAmount,proto3" json:"game_win_amount,omitempty"`                 // 赢取金额
	IconVertical       string                 `protobuf:"bytes,31,opt,name=icon_vertical,json=iconVertical,proto3" json:"icon_vertical,omitempty"`                      // 游戏竖版图标URL
	IconSquare         string                 `protobuf:"bytes,32,opt,name=icon_square,json=iconSquare,proto3" json:"icon_square,omitempty"`                            // 游戏方版图标URL
	IconHorizontal     string                 `protobuf:"bytes,33,opt,name=icon_horizontal,json=iconHorizontal,proto3" json:"icon_horizontal,omitempty"`                // 游戏横版图标URL
	IsHot              int64                  `protobuf:"varint,34,opt,name=is_hot,json=isHot,proto3" json:"is_hot,omitempty"`                                          //  是否hot(1:开启，2：关闭)
	IsUnderMaintenance int64                  `protobuf:"varint,35,opt,name=is_under_maintenance,json=isUnderMaintenance,proto3" json:"is_under_maintenance,omitempty"` //  是否在维护中(1:是，2：否)
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *WinGameValueItem) Reset() {
	*x = WinGameValueItem{}
	mi := &file_game_v1_game_proto_msgTypes[108]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WinGameValueItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WinGameValueItem) ProtoMessage() {}

func (x *WinGameValueItem) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[108]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WinGameValueItem.ProtoReflect.Descriptor instead.
func (*WinGameValueItem) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{108}
}

func (x *WinGameValueItem) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *WinGameValueItem) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

func (x *WinGameValueItem) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *WinGameValueItem) GetTripartiteGameId() int64 {
	if x != nil {
		return x.TripartiteGameId
	}
	return 0
}

func (x *WinGameValueItem) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *WinGameValueItem) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

func (x *WinGameValueItem) GetIsJumpTab() int64 {
	if x != nil {
		return x.IsJumpTab
	}
	return 0
}

func (x *WinGameValueItem) GetWalletModel() int64 {
	if x != nil {
		return x.WalletModel
	}
	return 0
}

func (x *WinGameValueItem) GetHorizontalSupport() int64 {
	if x != nil {
		return x.HorizontalSupport
	}
	return 0
}

func (x *WinGameValueItem) GetVerticalSupport() int64 {
	if x != nil {
		return x.VerticalSupport
	}
	return 0
}

func (x *WinGameValueItem) GetTryGameSupport() int64 {
	if x != nil {
		return x.TryGameSupport
	}
	return 0
}

func (x *WinGameValueItem) GetGameIconStyle() int64 {
	if x != nil {
		return x.GameIconStyle
	}
	return 0
}

func (x *WinGameValueItem) GetGameLogoUrl() string {
	if x != nil {
		return x.GameLogoUrl
	}
	return ""
}

func (x *WinGameValueItem) GetGameIconImageUrl() string {
	if x != nil {
		return x.GameIconImageUrl
	}
	return ""
}

func (x *WinGameValueItem) GetGameWinAmount() string {
	if x != nil {
		return x.GameWinAmount
	}
	return ""
}

func (x *WinGameValueItem) GetIconVertical() string {
	if x != nil {
		return x.IconVertical
	}
	return ""
}

func (x *WinGameValueItem) GetIconSquare() string {
	if x != nil {
		return x.IconSquare
	}
	return ""
}

func (x *WinGameValueItem) GetIconHorizontal() string {
	if x != nil {
		return x.IconHorizontal
	}
	return ""
}

func (x *WinGameValueItem) GetIsHot() int64 {
	if x != nil {
		return x.IsHot
	}
	return 0
}

func (x *WinGameValueItem) GetIsUnderMaintenance() int64 {
	if x != nil {
		return x.IsUnderMaintenance
	}
	return 0
}

type FetchGamePlatformMetaReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	GameId         int64                  `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`                           // 可能是第三方游戏ID也有可能是平台的游戏ID
	GamePlatformId int64                  `protobuf:"varint,2,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"` // 可能是第三方平台ID也有可能是平台的平台ID
	CurrencyCode   string                 `protobuf:"bytes,3,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	UserId         int64                  `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsThirdParty   bool                   `protobuf:"varint,5,opt,name=is_third_party,json=isThirdParty,proto3" json:"is_third_party,omitempty"` // 是否为第三方信息
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *FetchGamePlatformMetaReq) Reset() {
	*x = FetchGamePlatformMetaReq{}
	mi := &file_game_v1_game_proto_msgTypes[109]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchGamePlatformMetaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchGamePlatformMetaReq) ProtoMessage() {}

func (x *FetchGamePlatformMetaReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[109]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchGamePlatformMetaReq.ProtoReflect.Descriptor instead.
func (*FetchGamePlatformMetaReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{109}
}

func (x *FetchGamePlatformMetaReq) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *FetchGamePlatformMetaReq) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

func (x *FetchGamePlatformMetaReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *FetchGamePlatformMetaReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FetchGamePlatformMetaReq) GetIsThirdParty() bool {
	if x != nil {
		return x.IsThirdParty
	}
	return false
}

type FetchGamePlatformMetaReply struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	GameDetail     *GameDetails           `protobuf:"bytes,1,opt,name=game_detail,json=gameDetail,proto3" json:"game_detail,omitempty"`
	PlatformDetail *GamePlatformDetail    `protobuf:"bytes,2,opt,name=platform_detail,json=platformDetail,proto3" json:"platform_detail,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *FetchGamePlatformMetaReply) Reset() {
	*x = FetchGamePlatformMetaReply{}
	mi := &file_game_v1_game_proto_msgTypes[110]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchGamePlatformMetaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchGamePlatformMetaReply) ProtoMessage() {}

func (x *FetchGamePlatformMetaReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[110]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchGamePlatformMetaReply.ProtoReflect.Descriptor instead.
func (*FetchGamePlatformMetaReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{110}
}

func (x *FetchGamePlatformMetaReply) GetGameDetail() *GameDetails {
	if x != nil {
		return x.GameDetail
	}
	return nil
}

func (x *FetchGamePlatformMetaReply) GetPlatformDetail() *GamePlatformDetail {
	if x != nil {
		return x.PlatformDetail
	}
	return nil
}

type FetchHotManagementReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Page           int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize       int64                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	GamePlatformId int64                  `protobuf:"varint,3,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"`
	CurrencyCode   string                 `protobuf:"bytes,4,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	UserId         int64                  `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GameCategoryId int64                  `protobuf:"varint,7,opt,name=game_category_id,json=gameCategoryId,proto3" json:"game_category_id,omitempty"` // 游戏类别ID
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *FetchHotManagementReq) Reset() {
	*x = FetchHotManagementReq{}
	mi := &file_game_v1_game_proto_msgTypes[111]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchHotManagementReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchHotManagementReq) ProtoMessage() {}

func (x *FetchHotManagementReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[111]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchHotManagementReq.ProtoReflect.Descriptor instead.
func (*FetchHotManagementReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{111}
}

func (x *FetchHotManagementReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FetchHotManagementReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FetchHotManagementReq) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

func (x *FetchHotManagementReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *FetchHotManagementReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FetchHotManagementReq) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

type FetchHotManagementReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int64                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Total         int64                  `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	TotalPage     int64                  `protobuf:"varint,4,opt,name=total_page,json=totalPage,proto3" json:"total_page,omitempty"`
	Rows          []*GameHotManagement   `protobuf:"bytes,5,rep,name=rows,proto3" json:"rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchHotManagementReply) Reset() {
	*x = FetchHotManagementReply{}
	mi := &file_game_v1_game_proto_msgTypes[112]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchHotManagementReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchHotManagementReply) ProtoMessage() {}

func (x *FetchHotManagementReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[112]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchHotManagementReply.ProtoReflect.Descriptor instead.
func (*FetchHotManagementReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{112}
}

func (x *FetchHotManagementReply) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FetchHotManagementReply) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FetchHotManagementReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *FetchHotManagementReply) GetTotalPage() int64 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

func (x *FetchHotManagementReply) GetRows() []*GameHotManagement {
	if x != nil {
		return x.Rows
	}
	return nil
}

type GameHotManagement struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	HotLevel       int64                  `protobuf:"varint,2,opt,name=hot_level,json=hotLevel,proto3" json:"hot_level,omitempty"`                     // 热门级别，1：热门2，2：热门2
	Rank           int64                  `protobuf:"varint,3,opt,name=rank,proto3" json:"rank,omitempty"`                                             // 排名，表示货币在列表中的排序位置
	CurrencyCode   string                 `protobuf:"bytes,4,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`          // 货币代码，例如“INR”
	HotCategory    int64                  `protobuf:"varint,5,opt,name=hot_category,json=hotCategory,proto3" json:"hot_category,omitempty"`            // 热门类别（1：平台、2：子游戏）
	GameCategoryId int64                  `protobuf:"varint,6,opt,name=game_category_id,json=gameCategoryId,proto3" json:"game_category_id,omitempty"` // 游戏类型（例如区块链、真人、体育等）
	GamePlatformId int64                  `protobuf:"varint,7,opt,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"` // 平台信息（例如JDB区块链、EVO真人等）
	GameId         int64                  `protobuf:"varint,8,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`                           // 游戏信息（例如JDB区块链、EVO真人等）
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GameHotManagement) Reset() {
	*x = GameHotManagement{}
	mi := &file_game_v1_game_proto_msgTypes[113]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameHotManagement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameHotManagement) ProtoMessage() {}

func (x *GameHotManagement) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[113]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameHotManagement.ProtoReflect.Descriptor instead.
func (*GameHotManagement) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{113}
}

func (x *GameHotManagement) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GameHotManagement) GetHotLevel() int64 {
	if x != nil {
		return x.HotLevel
	}
	return 0
}

func (x *GameHotManagement) GetRank() int64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *GameHotManagement) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *GameHotManagement) GetHotCategory() int64 {
	if x != nil {
		return x.HotCategory
	}
	return 0
}

func (x *GameHotManagement) GetGameCategoryId() int64 {
	if x != nil {
		return x.GameCategoryId
	}
	return 0
}

func (x *GameHotManagement) GetGamePlatformId() int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return 0
}

func (x *GameHotManagement) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

type FetchGameMapByIDReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameId        []int64                `protobuf:"varint,1,rep,packed,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchGameMapByIDReq) Reset() {
	*x = FetchGameMapByIDReq{}
	mi := &file_game_v1_game_proto_msgTypes[114]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchGameMapByIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchGameMapByIDReq) ProtoMessage() {}

func (x *FetchGameMapByIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[114]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchGameMapByIDReq.ProtoReflect.Descriptor instead.
func (*FetchGameMapByIDReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{114}
}

func (x *FetchGameMapByIDReq) GetGameId() []int64 {
	if x != nil {
		return x.GameId
	}
	return nil
}

type FetchGameMapByIDReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          map[int64]*GameDetails `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchGameMapByIDReply) Reset() {
	*x = FetchGameMapByIDReply{}
	mi := &file_game_v1_game_proto_msgTypes[115]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchGameMapByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchGameMapByIDReply) ProtoMessage() {}

func (x *FetchGameMapByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[115]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchGameMapByIDReply.ProtoReflect.Descriptor instead.
func (*FetchGameMapByIDReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{115}
}

func (x *FetchGameMapByIDReply) GetInfo() map[int64]*GameDetails {
	if x != nil {
		return x.Info
	}
	return nil
}

type FetchPlatformMapByIDReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	GamePlatformId []int64                `protobuf:"varint,1,rep,packed,name=game_platform_id,json=gamePlatformId,proto3" json:"game_platform_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *FetchPlatformMapByIDReq) Reset() {
	*x = FetchPlatformMapByIDReq{}
	mi := &file_game_v1_game_proto_msgTypes[116]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchPlatformMapByIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchPlatformMapByIDReq) ProtoMessage() {}

func (x *FetchPlatformMapByIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[116]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchPlatformMapByIDReq.ProtoReflect.Descriptor instead.
func (*FetchPlatformMapByIDReq) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{116}
}

func (x *FetchPlatformMapByIDReq) GetGamePlatformId() []int64 {
	if x != nil {
		return x.GamePlatformId
	}
	return nil
}

type FetchPlatformMapByIDReply struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Info          map[int64]*GamePlatformDetail `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchPlatformMapByIDReply) Reset() {
	*x = FetchPlatformMapByIDReply{}
	mi := &file_game_v1_game_proto_msgTypes[117]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchPlatformMapByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchPlatformMapByIDReply) ProtoMessage() {}

func (x *FetchPlatformMapByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[117]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchPlatformMapByIDReply.ProtoReflect.Descriptor instead.
func (*FetchPlatformMapByIDReply) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{117}
}

func (x *FetchPlatformMapByIDReply) GetInfo() map[int64]*GamePlatformDetail {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetGameTransferOrderStatusReplyOrderInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                   //用户ID
	OrderNo       string                 `protobuf:"bytes,3,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`                 //订单编号
	TransferType  int64                  `protobuf:"varint,4,opt,name=transfer_type,json=transferType,proto3" json:"transfer_type,omitempty"` //交易类型：1:转入 2:转出
	Status        int64                  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`                                 //转账状态， 1:处理中 2:处理成功 3:处理失败
	Amounts       string                 `protobuf:"bytes,6,opt,name=amounts,proto3" json:"amounts,omitempty"`                                //订单金额
	Msg           string                 `protobuf:"bytes,7,opt,name=msg,proto3" json:"msg,omitempty"`                                        //信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGameTransferOrderStatusReplyOrderInfo) Reset() {
	*x = GetGameTransferOrderStatusReplyOrderInfo{}
	mi := &file_game_v1_game_proto_msgTypes[119]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameTransferOrderStatusReplyOrderInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameTransferOrderStatusReplyOrderInfo) ProtoMessage() {}

func (x *GetGameTransferOrderStatusReplyOrderInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_proto_msgTypes[119]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameTransferOrderStatusReplyOrderInfo.ProtoReflect.Descriptor instead.
func (*GetGameTransferOrderStatusReplyOrderInfo) Descriptor() ([]byte, []int) {
	return file_game_v1_game_proto_rawDescGZIP(), []int{19, 1}
}

func (x *GetGameTransferOrderStatusReplyOrderInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetGameTransferOrderStatusReplyOrderInfo) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *GetGameTransferOrderStatusReplyOrderInfo) GetTransferType() int64 {
	if x != nil {
		return x.TransferType
	}
	return 0
}

func (x *GetGameTransferOrderStatusReplyOrderInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetGameTransferOrderStatusReplyOrderInfo) GetAmounts() string {
	if x != nil {
		return x.Amounts
	}
	return ""
}

func (x *GetGameTransferOrderStatusReplyOrderInfo) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_game_v1_game_proto protoreflect.FileDescriptor

const file_game_v1_game_proto_rawDesc = "" +
	"\n" +
	"\x12game/v1/game.proto\x12\agame.v1\"\t\n" +
	"\aGameReq\"\v\n" +
	"\tGameReply\"\xcc\x02\n" +
	"\x12SingleEnterGameReq\x12!\n" +
	"\fplatform_key\x18\x01 \x01(\x03R\vplatformKey\x12\x19\n" +
	"\bgame_key\x18\x02 \x01(\x03R\agameKey\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\x04R\x06userId\x12\x1d\n" +
	"\n" +
	"user_token\x18\x04 \x01(\tR\tuserToken\x12\x1a\n" +
	"\blanguage\x18\x05 \x01(\tR\blanguage\x12#\n" +
	"\rcurrency_code\x18\x06 \x01(\tR\fcurrencyCode\x12\x14\n" +
	"\x05param\x18\a \x01(\tR\x05param\x12\x1d\n" +
	"\n" +
	"show_scene\x18\b \x01(\tR\tshowScene\x12\x17\n" +
	"\aos_type\x18\t \x01(\tR\x06osType\x12\x18\n" +
	"\areferer\x18\n" +
	" \x01(\tR\areferer\x12\x17\n" +
	"\auser_ip\x18\v \x01(\tR\x06userIp\"(\n" +
	"\x14SingleEnterGameReply\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\"\xed\x02\n" +
	"\x15SingleEnterGameTryReq\x12!\n" +
	"\fplatform_key\x18\x01 \x01(\x03R\vplatformKey\x12\x19\n" +
	"\bgame_key\x18\x02 \x01(\x03R\agameKey\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\x04R\x06userId\x12\x1d\n" +
	"\n" +
	"user_token\x18\x04 \x01(\tR\tuserToken\x12\x1a\n" +
	"\blanguage\x18\x05 \x01(\tR\blanguage\x12#\n" +
	"\rcurrency_code\x18\x06 \x01(\tR\fcurrencyCode\x12\x14\n" +
	"\x05param\x18\a \x01(\tR\x05param\x12\x17\n" +
	"\aos_type\x18\b \x01(\tR\x06osType\x12\x18\n" +
	"\areferer\x18\t \x01(\tR\areferer\x12\x17\n" +
	"\auser_ip\x18\n" +
	" \x01(\tR\x06userIp\x12\x1a\n" +
	"\bnickname\x18\v \x01(\tR\bnickname\x12\x1f\n" +
	"\vuser_avatar\x18\f \x01(\tR\n" +
	"userAvatar\"+\n" +
	"\x17SingleEnterGameTryReply\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\"\xce\x02\n" +
	"\x14TransferEnterGameReq\x12!\n" +
	"\fplatform_key\x18\x01 \x01(\x03R\vplatformKey\x12\x19\n" +
	"\bgame_key\x18\x02 \x01(\x03R\agameKey\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\x03R\x06userId\x12\x1d\n" +
	"\n" +
	"user_token\x18\x04 \x01(\tR\tuserToken\x12\x1a\n" +
	"\blanguage\x18\x05 \x01(\tR\blanguage\x12#\n" +
	"\rcurrency_code\x18\x06 \x01(\tR\fcurrencyCode\x12\x14\n" +
	"\x05param\x18\a \x01(\tR\x05param\x12\x1d\n" +
	"\n" +
	"show_scene\x18\b \x01(\tR\tshowScene\x12\x17\n" +
	"\aos_type\x18\t \x01(\tR\x06osType\x12\x18\n" +
	"\areferer\x18\n" +
	" \x01(\tR\areferer\x12\x17\n" +
	"\auser_ip\x18\v \x01(\tR\x06userIp\"*\n" +
	"\x16TransferEnterGameReply\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\"\xd1\x01\n" +
	"\x17WalletTransferInGameReq\x12!\n" +
	"\fplatform_key\x18\x01 \x01(\x03R\vplatformKey\x12\x19\n" +
	"\bgame_key\x18\x02 \x01(\x03R\agameKey\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\x03R\x06userId\x12#\n" +
	"\rcurrency_code\x18\x04 \x01(\tR\fcurrencyCode\x12\x16\n" +
	"\x06amount\x18\x05 \x01(\x03R\x06amount\x12\"\n" +
	"\rgame_order_no\x18\x06 \x01(\tR\vgameOrderNo\"\xa1\x01\n" +
	"\x19WalletTransferInGameReply\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x03R\x06amount\x12\"\n" +
	"\rgame_order_no\x18\x04 \x01(\tR\vgameOrderNo\x12\x17\n" +
	"\aerr_msg\x18\x05 \x01(\tR\x06errMsg\"\xfc\x01\n" +
	"\x19WalletTransferInGameReqV2\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\x03R\x06gameId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x03R\x06amount\x12\"\n" +
	"\rgame_order_no\x18\x04 \x01(\tR\vgameOrderNo\x12\x1b\n" +
	"\tdevice_os\x18\x05 \x01(\tR\bdeviceOs\x12\x1b\n" +
	"\tdevice_id\x18\x06 \x01(\tR\bdeviceId\x12\x1b\n" +
	"\tclient_ip\x18\a \x01(\tR\bclientIp\x12\x1a\n" +
	"\blanguage\x18\b \x01(\tR\blanguage\"\xb8\x01\n" +
	"\x1bWalletTransferInGameReplyV2\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x03R\x06amount\x12\"\n" +
	"\rgame_order_no\x18\x03 \x01(\tR\vgameOrderNo\x12\x1b\n" +
	"\tgame_link\x18\x04 \x01(\tR\bgameLink\x12'\n" +
	"\x0ftransfer_status\x18\x05 \x01(\x03R\x0etransferStatus\"\xd2\x01\n" +
	"\x18WalletTransferOutGameReq\x12!\n" +
	"\fplatform_key\x18\x01 \x01(\x03R\vplatformKey\x12\x19\n" +
	"\bgame_key\x18\x02 \x01(\x03R\agameKey\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\x03R\x06userId\x12#\n" +
	"\rcurrency_code\x18\x04 \x01(\tR\fcurrencyCode\x12\x16\n" +
	"\x06amount\x18\x05 \x01(\tR\x06amount\x12\"\n" +
	"\rgame_order_no\x18\x06 \x01(\tR\vgameOrderNo\"\xf6\x01\n" +
	"\x1aWalletTransferOutGameReply\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\tR\x06amount\x12\"\n" +
	"\rgame_order_no\x18\x04 \x01(\tR\vgameOrderNo\x12\x17\n" +
	"\aerr_msg\x18\x05 \x01(\tR\x06errMsg\x12 \n" +
	"\fskip_mq_done\x18\x06 \x01(\x05R\n" +
	"skipMqDone\x120\n" +
	"\x14middle_platform_type\x18\a \x01(\x05R\x12middlePlatformType\"\xcf\x01\n" +
	"\x1bGetWalletTransferBalanceReq\x12!\n" +
	"\fplatform_key\x18\x01 \x01(\x03R\vplatformKey\x12\x19\n" +
	"\bgame_key\x18\x02 \x01(\x03R\agameKey\x124\n" +
	"\x16tripartite_platform_id\x18\x03 \x01(\x03R\x14tripartitePlatformId\x12\x17\n" +
	"\auser_id\x18\x04 \x01(\x03R\x06userId\x12#\n" +
	"\rcurrency_code\x18\x05 \x01(\tR\fcurrencyCode\"u\n" +
	"\x1dGetWalletTransferBalanceReply\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12#\n" +
	"\rcurrency_code\x18\x02 \x01(\tR\fcurrencyCode\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\tR\x06amount\"\xd1\x01\n" +
	"\x1dGetWalletTransferBalanceReqV2\x12!\n" +
	"\fplatform_key\x18\x01 \x01(\x03R\vplatformKey\x12\x19\n" +
	"\bgame_key\x18\x02 \x01(\x03R\agameKey\x124\n" +
	"\x16tripartite_platform_id\x18\x03 \x01(\x03R\x14tripartitePlatformId\x12\x17\n" +
	"\auser_id\x18\x04 \x01(\x03R\x06userId\x12#\n" +
	"\rcurrency_code\x18\x05 \x01(\tR\fcurrencyCode\"w\n" +
	"\x1fGetWalletTransferBalanceReplyV2\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12#\n" +
	"\rcurrency_code\x18\x02 \x01(\tR\fcurrencyCode\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\tR\x06amount\"]\n" +
	"\x1dGetGameTransferOrderStatusReq\x12!\n" +
	"\fplatform_key\x18\x01 \x01(\tR\vplatformKey\x12\x19\n" +
	"\border_no\x18\x02 \x03(\tR\aorderNo\"\x8b\x03\n" +
	"\x1fGetGameTransferOrderStatusReply\x12L\n" +
	"\x06orders\x18\x01 \x03(\v24.game.v1.GetGameTransferOrderStatusReply.OrdersEntryR\x06orders\x1an\n" +
	"\vOrdersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12I\n" +
	"\x05value\x18\x02 \x01(\v23.game.v1.GetGameTransferOrderStatusReply.order_infoR\x05value:\x028\x01\x1a\xa9\x01\n" +
	"\n" +
	"order_info\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x19\n" +
	"\border_no\x18\x03 \x01(\tR\aorderNo\x12#\n" +
	"\rtransfer_type\x18\x04 \x01(\x03R\ftransferType\x12\x16\n" +
	"\x06status\x18\x05 \x01(\x03R\x06status\x12\x18\n" +
	"\aamounts\x18\x06 \x01(\tR\aamounts\x12\x10\n" +
	"\x03msg\x18\a \x01(\tR\x03msg\"{\n" +
	"\x1eGetGameTransferBetOrderListReq\x12\x1d\n" +
	"\n" +
	"start_time\x18\x01 \x01(\tR\tstartTime\x12\x19\n" +
	"\bend_time\x18\x02 \x01(\tR\aendTime\x12\x1f\n" +
	"\vpage_number\x18\x03 \x01(\x03R\n" +
	"pageNumber\"\x86\x04\n" +
	"\x11TransferBetRecord\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12!\n" +
	"\fmerchant_key\x18\x02 \x01(\tR\vmerchantKey\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x124\n" +
	"\x16trilateral_platform_id\x18\x04 \x01(\x03R\x14trilateralPlatformId\x12,\n" +
	"\x12trilateral_game_id\x18\x05 \x01(\x03R\x10trilateralGameId\x12\x1b\n" +
	"\tgame_name\x18\x06 \x01(\tR\bgameName\x12\x15\n" +
	"\x06bet_id\x18\a \x01(\tR\x05betId\x12\x1a\n" +
	"\bcurrency\x18\b \x01(\tR\bcurrency\x12\x16\n" +
	"\x06status\x18\t \x01(\x03R\x06status\x12\x19\n" +
	"\bbet_time\x18\n" +
	" \x01(\tR\abetTime\x12\x1f\n" +
	"\vsettle_time\x18\v \x01(\tR\n" +
	"settleTime\x12\x1f\n" +
	"\vupdate_time\x18\f \x01(\tR\n" +
	"updateTime\x12\x1d\n" +
	"\n" +
	"bet_detail\x18\r \x01(\tR\tbetDetail\x12\x1d\n" +
	"\n" +
	"bet_amount\x18\x0e \x01(\tR\tbetAmount\x12\x1d\n" +
	"\n" +
	"pay_amount\x18\x0f \x01(\tR\tpayAmount\x12\x1f\n" +
	"\vprofit_loss\x18\x10 \x01(\tR\n" +
	"profitLoss\"\xc5\x01\n" +
	" GetGameTransferBetOrderListReply\x12\x1d\n" +
	"\n" +
	"total_page\x18\x01 \x01(\x03R\ttotalPage\x12!\n" +
	"\fcurrent_page\x18\x02 \x01(\x03R\vcurrentPage\x12(\n" +
	"\x10last_update_date\x18\x03 \x01(\x03R\x0elastUpdateDate\x125\n" +
	"\bbet_list\x18\x04 \x03(\v2\x1a.game.v1.TransferBetRecordR\abetList\"U\n" +
	"\x1fGetGameTransferOrderStatusV2Req\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x19\n" +
	"\border_no\x18\x02 \x03(\tR\aorderNo\"+\n" +
	"\x15GetK9GameAccessKeyReq\x12\x12\n" +
	"\x04type\x18\x01 \x01(\x03R\x04type\"8\n" +
	"\x17GetK9GameAccessKeyReply\x12\x1d\n" +
	"\n" +
	"access_key\x18\x01 \x01(\tR\taccessKey\"\x8d\x03\n" +
	"\x0eGameUserBetReq\x12!\n" +
	"\fwallet_model\x18\x01 \x01(\x03R\vwalletModel\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12,\n" +
	"\x12tripartite_game_id\x18\x03 \x01(\x03R\x10tripartiteGameId\x12\x19\n" +
	"\bround_id\x18\x04 \x01(\tR\aroundId\x12\x19\n" +
	"\border_no\x18\x05 \x01(\tR\aorderNo\x12\x16\n" +
	"\x06amount\x18\x06 \x01(\tR\x06amount\x12#\n" +
	"\rcurrency_code\x18\a \x01(\tR\fcurrencyCode\x12\x1c\n" +
	"\ttimestamp\x18\b \x01(\x03R\ttimestamp\x12(\n" +
	"\x10post_bet_balance\x18\t \x01(\x03R\x0epostBetBalance\x12\x19\n" +
	"\border_id\x18\n" +
	" \x01(\tR\aorderId\x12$\n" +
	"\x0ewei_bet_amount\x18\v \x01(\x03R\fweiBetAmount\x12\x15\n" +
	"\x06msg_id\x18\f \x01(\tR\x05msgId\"\x90\x01\n" +
	"\x10GameUserBetReply\x12\x18\n" +
	"\abalance\x18\x01 \x01(\tR\abalance\x12#\n" +
	"\rcurrency_code\x18\x02 \x01(\tR\fcurrencyCode\x12\x19\n" +
	"\border_id\x18\x03 \x01(\tR\aorderId\x12\"\n" +
	"\rbet_record_id\x18\x04 \x01(\tR\vbetRecordId\"\xef\x02\n" +
	"\x11GameUserRewardReq\x12!\n" +
	"\fwallet_model\x18\x01 \x01(\x03R\vwalletModel\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12,\n" +
	"\x12tripartite_game_id\x18\x03 \x01(\x03R\x10tripartiteGameId\x12\x19\n" +
	"\bround_id\x18\x04 \x01(\tR\aroundId\x12\x19\n" +
	"\border_no\x18\x05 \x01(\tR\aorderNo\x12\x15\n" +
	"\x06bet_id\x18\x06 \x01(\tR\x05betId\x12#\n" +
	"\rreward_amount\x18\a \x01(\tR\frewardAmount\x12#\n" +
	"\rcurrency_code\x18\b \x01(\tR\fcurrencyCode\x12\x1c\n" +
	"\ttimestamp\x18\t \x01(\x03R\ttimestamp\x12$\n" +
	"\x0ewei_bet_amount\x18\n" +
	" \x01(\x03R\fweiBetAmount\x12\x15\n" +
	"\x06msg_id\x18\v \x01(\tR\x05msgId\"o\n" +
	"\x13GameUserRewardReply\x12\x18\n" +
	"\abalance\x18\x01 \x01(\tR\abalance\x12#\n" +
	"\rcurrency_code\x18\x02 \x01(\tR\fcurrencyCode\x12\x19\n" +
	"\border_id\x18\x04 \x01(\tR\aorderId\"\xcc\x03\n" +
	"\x14GameUserBetCancelReq\x12!\n" +
	"\fwallet_model\x18\x01 \x01(\x03R\vwalletModel\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12,\n" +
	"\x12tripartite_game_id\x18\x03 \x01(\x03R\x10tripartiteGameId\x12\x19\n" +
	"\bround_id\x18\x04 \x01(\tR\aroundId\x12\x19\n" +
	"\border_no\x18\x05 \x01(\tR\aorderNo\x12&\n" +
	"\x0fcancel_order_no\x18\x06 \x01(\tR\rcancelOrderNo\x12/\n" +
	"\x14cancel_plat_order_no\x18\a \x01(\tR\x11cancelPlatOrderNo\x12!\n" +
	"\forder_amount\x18\b \x01(\tR\vorderAmount\x12#\n" +
	"\rcurrency_code\x18\t \x01(\tR\fcurrencyCode\x12\x1c\n" +
	"\ttimestamp\x18\n" +
	" \x01(\x03R\ttimestamp\x12\x1d\n" +
	"\n" +
	"order_desc\x18\v \x01(\tR\torderDesc\x12\x1f\n" +
	"\vcancel_type\x18\f \x01(\x03R\n" +
	"cancelType\x12\x15\n" +
	"\x06msg_id\x18\r \x01(\tR\x05msgId\"r\n" +
	"\x16GameUserBetCancelReply\x12\x18\n" +
	"\abalance\x18\x01 \x01(\tR\abalance\x12#\n" +
	"\rcurrency_code\x18\x02 \x01(\tR\fcurrencyCode\x12\x19\n" +
	"\border_id\x18\x04 \x01(\tR\aorderId\"\x8f\x03\n" +
	"\x15GameUserAdjustmentReq\x12!\n" +
	"\fwallet_model\x18\x01 \x01(\x03R\vwalletModel\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x124\n" +
	"\x16tripartite_platform_id\x18\x03 \x01(\x03R\x14tripartitePlatformId\x12,\n" +
	"\x12tripartite_game_id\x18\x04 \x01(\x03R\x10tripartiteGameId\x12\x19\n" +
	"\border_no\x18\x05 \x01(\tR\aorderNo\x12%\n" +
	"\x0eadjust_amounts\x18\x06 \x01(\tR\radjustAmounts\x12\x1f\n" +
	"\vadjust_desc\x18\a \x01(\tR\n" +
	"adjustDesc\x12#\n" +
	"\rcurrency_code\x18\b \x01(\tR\fcurrencyCode\x12\x1c\n" +
	"\ttimestamp\x18\n" +
	" \x01(\x03R\ttimestamp\x12\x19\n" +
	"\border_id\x18\v \x01(\tR\aorderId\x12\x15\n" +
	"\x06msg_id\x18\f \x01(\tR\x05msgId\"s\n" +
	"\x17GameUserAdjustmentReply\x12\x18\n" +
	"\abalance\x18\x01 \x01(\tR\abalance\x12#\n" +
	"\rcurrency_code\x18\x02 \x01(\tR\fcurrencyCode\x12\x19\n" +
	"\border_id\x18\x04 \x01(\tR\aorderId\"\xc0\x01\n" +
	"\x13TransferCallbackReq\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x19\n" +
	"\border_no\x18\x03 \x01(\tR\aorderNo\x12#\n" +
	"\rtransfer_type\x18\x04 \x01(\x03R\ftransferType\x12\x16\n" +
	"\x06status\x18\x05 \x01(\x03R\x06status\x12\x16\n" +
	"\x06amount\x18\x06 \x01(\tR\x06amount\x12 \n" +
	"\vdescription\x18\a \x01(\tR\vdescription\"\x17\n" +
	"\x15TransferCallbackReply\"\x91\x02\n" +
	"\x1eAddTripartiteTransferRecordReq\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12\x17\n" +
	"\agame_id\x18\x03 \x01(\x03R\x06gameId\x12(\n" +
	"\x10game_platform_id\x18\x04 \x01(\x03R\x0egamePlatformId\x12#\n" +
	"\rcurrency_code\x18\x05 \x01(\tR\fcurrencyCode\x12\x16\n" +
	"\x06amount\x18\x06 \x01(\x03R\x06amount\x12\x16\n" +
	"\x06remark\x18\f \x01(\tR\x06remark\x12#\n" +
	"\rtransfer_type\x18\r \x01(\x03R\ftransferType\"\xeb\x01\n" +
	"$AddTripartiteTransferRecordStatusReq\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\x12(\n" +
	"\x10game_platform_id\x18\x02 \x01(\x03R\x0egamePlatformId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\x03R\x06userId\x12#\n" +
	"\rtransfer_type\x18\x05 \x01(\x03R\ftransferType\x12\x16\n" +
	"\x06status\x18\x06 \x01(\x03R\x06status\x12\x16\n" +
	"\x06amount\x18\a \x01(\x03R\x06amount\x12\x10\n" +
	"\x03msg\x18\b \x01(\tR\x03msg\"\x9a\x01\n" +
	"!TripartiteTransferRecordStatusReq\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12\x17\n" +
	"\agame_id\x18\x03 \x01(\x03R\x06gameId\x12(\n" +
	"\x10game_platform_id\x18\x04 \x01(\x03R\x0egamePlatformId\"\xca\x01\n" +
	"\x1dProcessMessageTransferDataReq\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x19\n" +
	"\border_no\x18\x02 \x01(\tR\aorderNo\x12\x16\n" +
	"\x06status\x18\x03 \x01(\x03R\x06status\x12#\n" +
	"\rtransfer_type\x18\x04 \x01(\x03R\ftransferType\x12\x16\n" +
	"\x06amount\x18\x05 \x01(\x03R\x06amount\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\"\x87\x02\n" +
	"\x1fProcessMessageTransferDataReply\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\x03R\x06status\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\x03R\x06userId\x12\x1f\n" +
	"\vwallet_type\x18\x04 \x01(\x03R\n" +
	"walletType\x12\x18\n" +
	"\abalance\x18\x05 \x01(\x03R\abalance\x12#\n" +
	"\rcurrency_code\x18\x06 \x01(\tR\fcurrencyCode\x12\x17\n" +
	"\agame_id\x18\a \x01(\x03R\x06gameId\x12\x1f\n" +
	"\vdeal_status\x18\b \x01(\x03R\n" +
	"dealStatus\"\xb0\x01\n" +
	"\x1dProcessMessageTransferSendReq\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x18\n" +
	"\abalance\x18\x02 \x01(\x03R\abalance\x12\x17\n" +
	"\agame_id\x18\x03 \x01(\x03R\x06gameId\x12\x19\n" +
	"\border_id\x18\x04 \x01(\tR\aorderId\x12(\n" +
	"\x10game_platform_id\x18\x06 \x01(\x03R\x0egamePlatformId\"]\n" +
	"\x1fProcessMessageTransferSendReply\x12\x1f\n" +
	"\vsend_status\x18\x01 \x01(\x03R\n" +
	"sendStatus\x12\x19\n" +
	"\border_id\x18\x02 \x01(\tR\aorderId\"\xbf\x04\n" +
	"\x18TripartiteTransferRecord\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12\x17\n" +
	"\agame_id\x18\x03 \x01(\x03R\x06gameId\x12,\n" +
	"\x12tripartite_game_id\x18\x04 \x01(\x03R\x10tripartiteGameId\x12\x1b\n" +
	"\tgame_name\x18\x05 \x01(\tR\bgameName\x12(\n" +
	"\x10game_platform_id\x18\x06 \x01(\x03R\x0egamePlatformId\x12=\n" +
	"\x1btripartite_game_platform_id\x18\a \x01(\x03R\x18tripartiteGamePlatformId\x12,\n" +
	"\x12game_platform_name\x18\b \x01(\tR\x10gamePlatformName\x12#\n" +
	"\rcurrency_code\x18\t \x01(\tR\fcurrencyCode\x12%\n" +
	"\x0etransfer_money\x18\n" +
	" \x01(\x03R\rtransferMoney\x12\x16\n" +
	"\x06remark\x18\v \x01(\tR\x06remark\x12#\n" +
	"\rtransfer_type\x18\f \x01(\x03R\ftransferType\x12'\n" +
	"\x0ftransfer_status\x18\r \x01(\x03R\x0etransferStatus\x12#\n" +
	"\rtransfer_time\x18\x0e \x01(\x03R\ftransferTime\x12\x1d\n" +
	"\n" +
	"event_time\x18\x0f \x01(\x03R\teventTime\"\xf0\x01\n" +
	"\x1bCreateCompensationRecordReq\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x03R\x06amount\x12\x19\n" +
	"\border_no\x18\x03 \x01(\tR\aorderNo\x12\x17\n" +
	"\agame_id\x18\x04 \x01(\x03R\x06gameId\x12\"\n" +
	"\rgame_order_no\x18\x05 \x01(\tR\vgameOrderNo\x12#\n" +
	"\rerror_message\x18\x06 \x01(\tR\ferrorMessage\x12#\n" +
	"\rcurrency_code\x18\a \x01(\tR\fcurrencyCode\".\n" +
	"\x1cCreateCompensationRecordResp\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"\xae\x01\n" +
	"\x18GetGameDetailsByThirdReq\x12!\n" +
	"\fwallet_model\x18\x01 \x01(\x03R\vwalletModel\x12,\n" +
	"\x12tripartite_game_id\x18\x02 \x01(\x03R\x10tripartiteGameId\x12#\n" +
	"\rcurrency_code\x18\x03 \x01(\tR\fcurrencyCode\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\"\xc3\x05\n" +
	"\x1aGetGameDetailsByThirdReply\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\x03R\x06gameId\x12,\n" +
	"\x12tripartite_game_id\x18\x02 \x01(\x03R\x10tripartiteGameId\x12\x12\n" +
	"\x04rank\x18\x03 \x01(\x03R\x04rank\x12#\n" +
	"\rcurrency_code\x18\x04 \x01(\tR\fcurrencyCode\x12(\n" +
	"\x10game_platform_id\x18\x05 \x01(\x03R\x0egamePlatformId\x12(\n" +
	"\x10game_category_id\x18\x06 \x01(\x03R\x0egameCategoryId\x12\x1b\n" +
	"\tgame_name\x18\a \x01(\tR\bgameName\x12\x1f\n" +
	"\vis_featured\x18\t \x01(\x03R\n" +
	"isFeatured\x12\x1e\n" +
	"\vis_jump_tab\x18\n" +
	" \x01(\x03R\tisJumpTab\x12!\n" +
	"\fwallet_model\x18\r \x01(\x03R\vwalletModel\x12-\n" +
	"\x12horizontal_support\x18\x0e \x01(\x03R\x11horizontalSupport\x12)\n" +
	"\x10vertical_support\x18\x0f \x01(\x03R\x0fverticalSupport\x12(\n" +
	"\x10try_game_support\x18\x10 \x01(\x03R\x0etryGameSupport\x12\x14\n" +
	"\x05style\x18\x11 \x01(\tR\x05style\x12\x1d\n" +
	"\n" +
	"icon_style\x18\x12 \x01(\x03R\ticonStyle\x12\x19\n" +
	"\blogo_url\x18\x13 \x01(\tR\alogoUrl\x12$\n" +
	"\x0eicon_image_url\x18\x14 \x01(\tR\ficonImageUrl\x12$\n" +
	"\x0eis_game_active\x18\x15 \x01(\x03R\fisGameActive\x120\n" +
	"\x14is_under_maintenance\x18\x16 \x01(\x03R\x12isUnderMaintenance\"\xa9\x01\n" +
	"\x13AddGameBetBaseReply\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1f\n" +
	"\vwallet_type\x18\x02 \x01(\x03R\n" +
	"walletType\x12\x18\n" +
	"\abalance\x18\x03 \x01(\x03R\abalance\x12\x19\n" +
	"\border_id\x18\x04 \x01(\tR\aorderId\x12#\n" +
	"\rcurrency_code\x18\x05 \x01(\tR\fcurrencyCode\"\x9f\x03\n" +
	"\x13AddGameBetRecordReq\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12\x17\n" +
	"\agame_id\x18\x03 \x01(\x03R\x06gameId\x12(\n" +
	"\x10game_platform_id\x18\x04 \x01(\x03R\x0egamePlatformId\x12(\n" +
	"\x10game_category_id\x18\x05 \x01(\x03R\x0egameCategoryId\x12\x1d\n" +
	"\n" +
	"bet_amount\x18\x06 \x01(\x03R\tbetAmount\x12.\n" +
	"\x13tripartite_order_id\x18\a \x01(\tR\x11tripartiteOrderId\x12\x19\n" +
	"\bround_id\x18\b \x01(\tR\aroundId\x12\x19\n" +
	"\bbet_time\x18\t \x01(\x03R\abetTime\x128\n" +
	"\x18tripartite_original_data\x18\n" +
	" \x01(\tR\x16tripartiteOriginalData\x12(\n" +
	"\x10post_bet_balance\x18\v \x01(\x03R\x0epostBetBalance\"\xcf\x01\n" +
	"\x15AddGameBetRecordReply\x12\x1f\n" +
	"\vwallet_type\x18\x01 \x01(\x03R\n" +
	"walletType\x12\x18\n" +
	"\abalance\x18\x02 \x01(\x03R\abalance\x12\x19\n" +
	"\border_id\x18\x03 \x01(\tR\aorderId\x12\"\n" +
	"\rbet_record_id\x18\x04 \x01(\tR\vbetRecordId\x12#\n" +
	"\rcurrency_code\x18\a \x01(\tR\fcurrencyCode\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\x03R\x06userId\"n\n" +
	"\x18BatchAddGameBetRecordReq\x12R\n" +
	"\x17add_game_bet_record_req\x18\x01 \x03(\v2\x1c.game.v1.AddGameBetRecordReqR\x13addGameBetRecordReq\"\xf5\x01\n" +
	"\x17AddGameSettledRecordReq\x12\x19\n" +
	"\bround_id\x18\x01 \x01(\tR\aroundId\x12#\n" +
	"\rreward_amount\x18\x02 \x01(\x03R\frewardAmount\x12.\n" +
	"\x13tripartite_order_id\x18\x03 \x01(\tR\x11tripartiteOrderId\x12\x1f\n" +
	"\vsettle_time\x18\x04 \x01(\x03R\n" +
	"settleTime\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\x03R\x06userId\x12\x15\n" +
	"\x06bet_id\x18\x06 \x01(\tR\x05betId\x12\x19\n" +
	"\border_id\x18\a \x01(\tR\aorderId\"~\n" +
	"\x1cBatchAddGameSettledRecordReq\x12^\n" +
	"\x1badd_game_settled_record_req\x18\x01 \x03(\v2 .game.v1.AddGameSettledRecordReqR\x17addGameSettledRecordReq\"\x8d\x04\n" +
	"\x16AddGameCancelRecordReq\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12\x17\n" +
	"\agame_id\x18\x03 \x01(\x03R\x06gameId\x12,\n" +
	"\x12tripartite_game_id\x18\x04 \x01(\x03R\x10tripartiteGameId\x12\x19\n" +
	"\bround_id\x18\x06 \x01(\tR\aroundId\x12\x19\n" +
	"\border_no\x18\a \x01(\tR\aorderNo\x12&\n" +
	"\x0fcancel_order_no\x18\b \x01(\tR\rcancelOrderNo\x12/\n" +
	"\x14cancel_plat_order_no\x18\t \x01(\tR\x11cancelPlatOrderNo\x12!\n" +
	"\forder_amount\x18\n" +
	" \x01(\x03R\vorderAmount\x12#\n" +
	"\rcurrency_code\x18\v \x01(\tR\fcurrencyCode\x12\x1c\n" +
	"\ttimestamp\x18\f \x01(\x03R\ttimestamp\x12\x1d\n" +
	"\n" +
	"order_desc\x18\r \x01(\tR\torderDesc\x12\x1f\n" +
	"\vcancel_type\x18\x0e \x01(\x03R\n" +
	"cancelType\x12(\n" +
	"\x10game_platform_id\x18\x0f \x01(\x03R\x0egamePlatformId\x124\n" +
	"\x16tripartite_platform_id\x18\x10 \x01(\x03R\x14tripartitePlatformId\"\xd4\x02\n" +
	"\x1aAddGameAdjustmentRecordReq\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12(\n" +
	"\x10game_platform_id\x18\x03 \x01(\x03R\x0egamePlatformId\x124\n" +
	"\x16tripartite_platform_id\x18\x04 \x01(\x03R\x14tripartitePlatformId\x12\x19\n" +
	"\border_no\x18\x05 \x01(\tR\aorderNo\x12#\n" +
	"\radjust_amount\x18\x06 \x01(\x03R\fadjustAmount\x12#\n" +
	"\rcurrency_code\x18\a \x01(\tR\fcurrencyCode\x12\x1c\n" +
	"\ttimestamp\x18\b \x01(\x03R\ttimestamp\x12\x1f\n" +
	"\vadjust_desc\x18\t \x01(\tR\n" +
	"adjustDesc\x12\x19\n" +
	"\border_id\x18\n" +
	" \x01(\tR\aorderId\"Z\n" +
	"\x1bAddTransferGameBetRecordReq\x12;\n" +
	"\vrecord_list\x18\x01 \x03(\v2\x1a.game.v1.TransferBetRecordR\n" +
	"recordList\"\xc0\x04\n" +
	"\x13SendGameBetBetMQReq\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12!\n" +
	"\fuser_account\x18\x02 \x01(\tR\vuserAccount\x12#\n" +
	"\rcurrency_code\x18\x03 \x01(\tR\fcurrencyCode\x12\x1d\n" +
	"\n" +
	"bet_amount\x18\x04 \x01(\x03R\tbetAmount\x12\x1b\n" +
	"\tgame_name\x18\x13 \x01(\tR\bgameName\x12\x17\n" +
	"\agame_id\x18\a \x01(\x03R\x06gameId\x12\x19\n" +
	"\bbet_time\x18\n" +
	" \x01(\x03R\abetTime\x12 \n" +
	"\fbet_order_id\x18\x10 \x01(\tR\n" +
	"betOrderId\x12,\n" +
	"\x12tripartite_game_id\x18\x12 \x01(\x03R\x10tripartiteGameId\x12(\n" +
	"\x10game_category_id\x18\b \x01(\x03R\x0egameCategoryId\x12,\n" +
	"\x12game_category_name\x18\t \x01(\tR\x10gameCategoryName\x124\n" +
	"\x16tripartite_category_id\x18\x0f \x01(\x03R\x14tripartiteCategoryId\x12\x1f\n" +
	"\vplatform_id\x18\v \x01(\x03R\n" +
	"platformId\x124\n" +
	"\x16tripartite_platform_id\x18\x11 \x01(\x03R\x14tripartitePlatformId\x12#\n" +
	"\rplatform_name\x18\f \x01(\tR\fplatformName\"\x8c\x06\n" +
	"\x1dSendGameBetBetSettlementMQReq\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12!\n" +
	"\fuser_account\x18\x02 \x01(\tR\vuserAccount\x12#\n" +
	"\rcurrency_code\x18\x03 \x01(\tR\fcurrencyCode\x12\x1d\n" +
	"\n" +
	"bet_amount\x18\x04 \x01(\x03R\tbetAmount\x12&\n" +
	"\x0fuser_win_amount\x18\x05 \x01(\x03R\ruserWinAmount\x12(\n" +
	"\x10valid_bet_amount\x18\x06 \x01(\x03R\x0evalidBetAmount\x12\x17\n" +
	"\agame_id\x18\a \x01(\x03R\x06gameId\x12,\n" +
	"\x12tripartite_game_id\x18\x12 \x01(\x03R\x10tripartiteGameId\x12(\n" +
	"\x10game_category_id\x18\b \x01(\x03R\x0egameCategoryId\x12,\n" +
	"\x12game_category_name\x18\t \x01(\tR\x10gameCategoryName\x124\n" +
	"\x16tripartite_category_id\x18\n" +
	" \x01(\x03R\x14tripartiteCategoryId\x12\x1f\n" +
	"\vplatform_id\x18\v \x01(\x03R\n" +
	"platformId\x124\n" +
	"\x16tripartite_platform_id\x18\x11 \x01(\x03R\x14tripartitePlatformId\x12#\n" +
	"\rplatform_name\x18\f \x01(\tR\fplatformName\x12'\n" +
	"\x0fsettlement_time\x18\r \x01(\x03R\x0esettlementTime\x12!\n" +
	"\fbonus_amount\x18\x0e \x01(\x03R\vbonusAmount\x12\x19\n" +
	"\bbet_time\x18\x0f \x01(\x03R\abetTime\x12 \n" +
	"\fbet_order_id\x18\x10 \x01(\tR\n" +
	"betOrderId\x12\x1b\n" +
	"\tgame_name\x18\x13 \x01(\tR\bgameName\x12\"\n" +
	"\ris_not_repeat\x18\x14 \x01(\bR\visNotRepeat\"J\n" +
	"\x16AddRecentlyGamePlayReq\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x17\n" +
	"\agame_id\x18\x02 \x01(\x03R\x06gameId\"\xa6\x01\n" +
	"\x18GetCategoryListByCurrReq\x12\x1f\n" +
	"\vcurrency_id\x18\x01 \x01(\x03R\n" +
	"currencyId\x12#\n" +
	"\rcurrency_code\x18\x02 \x01(\tR\fcurrencyCode\x12#\n" +
	"\rlanguage_code\x18\x03 \x01(\tR\flanguageCode\x12\x1f\n" +
	"\vlanguage_id\x18\x04 \x01(\tR\n" +
	"languageId\"M\n" +
	"\x1aGetCategoryListByCurrReply\x12/\n" +
	"\x04rows\x18\x14 \x03(\v2\x1b.game.v1.GameCategoryDetailR\x04rows\"\x83\x05\n" +
	"\x12GameCategoryDetail\x12(\n" +
	"\x10game_category_id\x18\x01 \x01(\x03R\x0egameCategoryId\x124\n" +
	"\x16tripartite_category_id\x18\x02 \x01(\x03R\x14tripartiteCategoryId\x12\x12\n" +
	"\x04rank\x18\x03 \x01(\x03R\x04rank\x12#\n" +
	"\rcurrency_code\x18\x04 \x01(\tR\fcurrencyCode\x12#\n" +
	"\rcategory_name\x18\x05 \x01(\tR\fcategoryName\x12'\n" +
	"\x0fcategory_switch\x18\x06 \x01(\x03R\x0ecategorySwitch\x12\x1b\n" +
	"\tlink_type\x18\a \x01(\x03R\blinkType\x12\x19\n" +
	"\blink_url\x18\b \x01(\tR\alinkUrl\x12\x1f\n" +
	"\vopen_method\x18\t \x01(\x03R\n" +
	"openMethod\x12\x19\n" +
	"\bicon_url\x18\n" +
	" \x01(\tR\aiconUrl\x12,\n" +
	"\x12home_display_count\x18\v \x01(\x03R\x10homeDisplayCount\x129\n" +
	"\x19second_page_display_count\x18\f \x01(\x03R\x16secondPageDisplayCount\x12\x16\n" +
	"\x06remark\x18\r \x01(\tR\x06remark\x12,\n" +
	"\x12current_icon_style\x18\x0e \x01(\x03R\x10currentIconStyle\x12*\n" +
	"\x11home_column_count\x18\x0f \x01(\x03R\x0fhomeColumnCount\x127\n" +
	"\x18second_page_column_count\x18\x10 \x01(\x03R\x15secondPageColumnCount\"Y\n" +
	" GetCategorySimpleListByCurrReply\x125\n" +
	"\x04rows\x18\x01 \x03(\v2!.game.v1.GameCategorySimpleDetailR\x04rows\"\xa1\x02\n" +
	"\x18GameCategorySimpleDetail\x12(\n" +
	"\x10game_category_id\x18\x01 \x01(\x03R\x0egameCategoryId\x124\n" +
	"\x16tripartite_category_id\x18\x02 \x01(\x03R\x14tripartiteCategoryId\x12\x12\n" +
	"\x04rank\x18\x03 \x01(\x03R\x04rank\x12#\n" +
	"\rcurrency_code\x18\x04 \x01(\tR\fcurrencyCode\x12#\n" +
	"\rcategory_name\x18\x05 \x01(\tR\fcategoryName\x12\x19\n" +
	"\bicon_url\x18\n" +
	" \x01(\tR\aiconUrl\x12,\n" +
	"\x12current_icon_style\x18\x0e \x01(\x03R\x10currentIconStyle\"K\n" +
	"\x10CategoryNameBase\x12#\n" +
	"\rlanguage_code\x18\x01 \x01(\tR\flanguageCode\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"\xb3\x01\n" +
	"\x18GetGameListByCategoryReq\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x03R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x03R\bpageSize\x12(\n" +
	"\x10game_category_id\x18\x03 \x01(\x03R\x0egameCategoryId\x12#\n" +
	"\rcurrency_code\x18\x04 \x01(\tR\fcurrencyCode\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\x03R\x06userId\"\x8d\x02\n" +
	"\x18GetPlatformListByCurrReq\x12\x1f\n" +
	"\vcurrency_id\x18\x01 \x01(\x03R\n" +
	"currencyId\x12#\n" +
	"\rcurrency_code\x18\x02 \x01(\tR\fcurrencyCode\x12(\n" +
	"\x10game_category_id\x18\x03 \x01(\x03R\x0egameCategoryId\x124\n" +
	"\x16tripartite_category_id\x18\x04 \x01(\x03R\x14tripartiteCategoryId\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\x03R\x06userId\x122\n" +
	"\x15include_all_platforms\x18\x06 \x01(\bR\x13includeAllPlatforms\"M\n" +
	"\x1aGetPlatformListByCurrReply\x12/\n" +
	"\x04rows\x18\x14 \x03(\v2\x1b.game.v1.GamePlatformDetailR\x04rows\"\x96\a\n" +
	"\x12GamePlatformDetail\x12(\n" +
	"\x10game_platform_id\x18\x01 \x01(\x03R\x0egamePlatformId\x12\x12\n" +
	"\x04rank\x18\x02 \x01(\x03R\x04rank\x124\n" +
	"\x16tripartite_platform_id\x18\x03 \x01(\x03R\x14tripartitePlatformId\x12(\n" +
	"\x10game_category_id\x18\x04 \x01(\x03R\x0egameCategoryId\x12#\n" +
	"\rplatform_name\x18\x05 \x01(\tR\fplatformName\x12#\n" +
	"\rcurrency_code\x18\x06 \x01(\tR\fcurrencyCode\x12\x14\n" +
	"\x05style\x18\a \x01(\tR\x05style\x12#\n" +
	"\rminimum_entry\x18\b \x01(\x01R\fminimumEntry\x12'\n" +
	"\x0fpromotion_style\x18\t \x01(\x03R\x0epromotionStyle\x12\x12\n" +
	"\x04icon\x18\n" +
	" \x01(\tR\x04icon\x12)\n" +
	"\x10background_color\x18\v \x01(\tR\x0fbackgroundColor\x12\x19\n" +
	"\blogo_url\x18\f \x01(\tR\alogoUrl\x12.\n" +
	"\x13promotion_image_url\x18\r \x01(\tR\x11promotionImageUrl\x12\"\n" +
	"\rhot_image_url\x18\x0e \x01(\tR\vhotImageUrl\x12S\n" +
	"\x14platform_redirection\x18\x0f \x03(\v2 .game.v1.PlatformRedirectionBaseR\x13platformRedirection\x12\x19\n" +
	"\bgame_num\x18\x10 \x01(\x03R\agameNum\x12,\n" +
	"\x12is_platform_active\x18\x15 \x01(\x03R\x10isPlatformActive\x120\n" +
	"\x14is_under_maintenance\x18\x16 \x01(\x03R\x12isUnderMaintenance\x12#\n" +
	"\ricon_vertical\x18\x17 \x01(\tR\ficonVertical\x12\x1f\n" +
	"\vicon_square\x18\x18 \x01(\tR\n" +
	"iconSquare\x12'\n" +
	"\x0ficon_horizontal\x18\x19 \x01(\tR\x0eiconHorizontal\x12\x15\n" +
	"\x06is_hot\x18\x1a \x01(\x03R\x05isHot\x120\n" +
	"\x14middle_platform_type\x18\x1b \x01(\x03R\x12middlePlatformType\"U\n" +
	"\x1cGetPlatListSimpleByCurrReply\x125\n" +
	"\x04rows\x18\x14 \x03(\v2!.game.v1.GamePlatformSimpleDetailR\x04rows\"\x84\x04\n" +
	"\x18GamePlatformSimpleDetail\x12(\n" +
	"\x10game_platform_id\x18\x01 \x01(\x03R\x0egamePlatformId\x12\x12\n" +
	"\x04rank\x18\x02 \x01(\x03R\x04rank\x124\n" +
	"\x16tripartite_platform_id\x18\x03 \x01(\x03R\x14tripartitePlatformId\x12(\n" +
	"\x10game_category_id\x18\x04 \x01(\x03R\x0egameCategoryId\x12#\n" +
	"\rplatform_name\x18\x05 \x01(\tR\fplatformName\x12#\n" +
	"\rcurrency_code\x18\x06 \x01(\tR\fcurrencyCode\x12\x12\n" +
	"\x04icon\x18\a \x01(\tR\x04icon\x12\x19\n" +
	"\blogo_url\x18\b \x01(\tR\alogoUrl\x12#\n" +
	"\ricon_vertical\x18\t \x01(\tR\ficonVertical\x12\x1f\n" +
	"\vicon_square\x18\n" +
	" \x01(\tR\n" +
	"iconSquare\x12'\n" +
	"\x0ficon_horizontal\x18\v \x01(\tR\x0eiconHorizontal\x120\n" +
	"\x14is_under_maintenance\x18\f \x01(\x03R\x12isUnderMaintenance\x120\n" +
	"\x14middle_platform_type\x18\r \x01(\x03R\x12middlePlatformType\"m\n" +
	"\x17PlatformRedirectionBase\x12(\n" +
	"\x10platform_os_type\x18\x01 \x01(\x03R\x0eplatformOsType\x12(\n" +
	"\x10open_method_type\x18\x02 \x01(\x03R\x0eopenMethodType\"\xdd\a\n" +
	"\vGameDetails\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\x03R\x06gameId\x12,\n" +
	"\x12tripartite_game_id\x18\x02 \x01(\x03R\x10tripartiteGameId\x12\x12\n" +
	"\x04rank\x18\x03 \x01(\x03R\x04rank\x12#\n" +
	"\rcurrency_code\x18\x04 \x01(\tR\fcurrencyCode\x12(\n" +
	"\x10game_platform_id\x18\x05 \x01(\x03R\x0egamePlatformId\x12(\n" +
	"\x10game_category_id\x18\x06 \x01(\x03R\x0egameCategoryId\x12\x1b\n" +
	"\tgame_name\x18\a \x01(\tR\bgameName\x12\x1f\n" +
	"\vis_favorite\x18\b \x01(\x03R\n" +
	"isFavorite\x12\x1f\n" +
	"\vis_featured\x18\t \x01(\x03R\n" +
	"isFeatured\x12\x1e\n" +
	"\vis_jump_tab\x18\n" +
	" \x01(\x03R\tisJumpTab\x12!\n" +
	"\fwallet_model\x18\r \x01(\x03R\vwalletModel\x12-\n" +
	"\x12horizontal_support\x18\x0e \x01(\x03R\x11horizontalSupport\x12)\n" +
	"\x10vertical_support\x18\x0f \x01(\x03R\x0fverticalSupport\x12(\n" +
	"\x10try_game_support\x18\x10 \x01(\x03R\x0etryGameSupport\x12\x14\n" +
	"\x05style\x18\x11 \x01(\tR\x05style\x12\x1d\n" +
	"\n" +
	"icon_style\x18\x12 \x01(\x03R\ticonStyle\x12\x19\n" +
	"\blogo_url\x18\x13 \x01(\tR\alogoUrl\x12$\n" +
	"\x0eicon_image_url\x18\x14 \x01(\tR\ficonImageUrl\x12$\n" +
	"\x0eis_game_active\x18\x15 \x01(\x03R\fisGameActive\x120\n" +
	"\x14is_under_maintenance\x18\x16 \x01(\x03R\x12isUnderMaintenance\x12#\n" +
	"\ricon_vertical\x18\x17 \x01(\tR\ficonVertical\x12\x1f\n" +
	"\vicon_square\x18\x18 \x01(\tR\n" +
	"iconSquare\x12'\n" +
	"\x0ficon_horizontal\x18\x19 \x01(\tR\x0eiconHorizontal\x12\x15\n" +
	"\x06is_hot\x18\x1a \x01(\x03R\x05isHot\x12)\n" +
	"\x0eis_sub_factory\x18\x1b \x01(\x03H\x00R\fisSubFactory\x88\x01\x01\x12B\n" +
	"\x12sub_factory_params\x18\x1c \x03(\v2\x14.game.v1.SubGameInfoR\x10subFactoryParamsB\x11\n" +
	"\x0f_is_sub_factory\"\x8b\x02\n" +
	"\vSubGameInfo\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\x03R\x06gameId\x12,\n" +
	"\x12tripartite_game_id\x18\x02 \x01(\x03R\x10tripartiteGameId\x12\x1b\n" +
	"\tgame_name\x18\x03 \x01(\tR\bgameName\x12(\n" +
	"\x10game_platform_id\x18\x04 \x01(\x03R\x0egamePlatformId\x12,\n" +
	"\x12game_platform_name\x18\x05 \x01(\tR\x10gamePlatformName\x12(\n" +
	"\x10game_category_id\x18\x06 \x01(\x03R\x0egameCategoryId\x12\x16\n" +
	"\x06weight\x18\a \x01(\x03R\x06weight\"\xb4\x03\n" +
	"\x11GameSimpleDetails\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\x03R\x06gameId\x12,\n" +
	"\x12tripartite_game_id\x18\x02 \x01(\x03R\x10tripartiteGameId\x12\x12\n" +
	"\x04rank\x18\x03 \x01(\x03R\x04rank\x12#\n" +
	"\rcurrency_code\x18\x04 \x01(\tR\fcurrencyCode\x12(\n" +
	"\x10game_platform_id\x18\x05 \x01(\x03R\x0egamePlatformId\x12(\n" +
	"\x10game_category_id\x18\x06 \x01(\x03R\x0egameCategoryId\x12\x1b\n" +
	"\tgame_name\x18\a \x01(\tR\bgameName\x12\x19\n" +
	"\blogo_url\x18\x13 \x01(\tR\alogoUrl\x12$\n" +
	"\x0eicon_image_url\x18\x14 \x01(\tR\ficonImageUrl\x12#\n" +
	"\ricon_vertical\x18\x17 \x01(\tR\ficonVertical\x12\x1f\n" +
	"\vicon_square\x18\x18 \x01(\tR\n" +
	"iconSquare\x12'\n" +
	"\x0ficon_horizontal\x18\x19 \x01(\tR\x0eiconHorizontal\"\x8a\x01\n" +
	"\x17GetGameDetailsListReply\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x03R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x03R\bpageSize\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x03R\x05total\x12(\n" +
	"\x04rows\x18\x04 \x03(\v2\x14.game.v1.GameDetailsR\x04rows\"\x97\x01\n" +
	"\x1eGetGameSimpleListBySearchReply\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x03R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x03R\bpageSize\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x03R\x05total\x12.\n" +
	"\x04rows\x18\x04 \x03(\v2\x1a.game.v1.GameSimpleDetailsR\x04rows\"\xb3\x01\n" +
	"\x18GetGameListByPlatformReq\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x03R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x03R\bpageSize\x12(\n" +
	"\x10game_platform_id\x18\x03 \x01(\x03R\x0egamePlatformId\x12#\n" +
	"\rcurrency_code\x18\x04 \x01(\tR\fcurrencyCode\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\x03R\x06userId\"\x85\x01\n" +
	"\x16GamePlatformDetailsReq\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\x03R\x06gameId\x12(\n" +
	"\x10game_category_id\x18\x02 \x01(\x03R\x0egameCategoryId\x12(\n" +
	"\x10game_platform_id\x18\x03 \x01(\x03R\x0egamePlatformId\"\xfe\x01\n" +
	"\x16GetGameListBySearchReq\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x03R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x03R\bpageSize\x12!\n" +
	"\fsearch_value\x18\x03 \x01(\tR\vsearchValue\x12#\n" +
	"\rcurrency_code\x18\x04 \x01(\tR\fcurrencyCode\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\x03R\x06userId\x12(\n" +
	"\x10game_platform_id\x18\x06 \x01(\x03R\x0egamePlatformId\x12(\n" +
	"\x10game_category_id\x18\a \x01(\x03R\x0egameCategoryId\"n\n" +
	"\x15GameHandelFavoriteReq\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x17\n" +
	"\agame_id\x18\x02 \x01(\x03R\x06gameId\x12#\n" +
	"\rcurrency_code\x18\x03 \x01(\tR\fcurrencyCode\"\xb6\x01\n" +
	"\x16GetGameFavoriteListReq\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x03R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x03R\bpageSize\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\x03R\x06userId\x12(\n" +
	"\x10game_platform_id\x18\x04 \x01(\x03R\x0egamePlatformId\x12(\n" +
	"\x10game_category_id\x18\a \x01(\x03R\x0egameCategoryId\"0\n" +
	"\x15GetUserFavoriteIdsReq\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\"\xae\x01\n" +
	"\x17GetUserFavoriteIdsReply\x12S\n" +
	"\vfavoriteIds\x18\x01 \x03(\v21.game.v1.GetUserFavoriteIdsReply.FavoriteIdsEntryR\vfavoriteIds\x1a>\n" +
	"\x10FavoriteIdsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\"\xdb\x01\n" +
	"\x16GetGameRecentlyListReq\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x03R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x03R\bpageSize\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\x03R\x06userId\x12(\n" +
	"\x10game_platform_id\x18\x04 \x01(\x03R\x0egamePlatformId\x12(\n" +
	"\x10game_category_id\x18\a \x01(\x03R\x0egameCategoryId\x12#\n" +
	"\rcurrency_code\x18\x05 \x01(\tR\fcurrencyCode\"\xd6\x01\n" +
	"\x11GetHotGameListReq\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x03R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x03R\bpageSize\x12(\n" +
	"\x10game_platform_id\x18\x03 \x01(\x03R\x0egamePlatformId\x12#\n" +
	"\rcurrency_code\x18\x04 \x01(\tR\fcurrencyCode\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\x03R\x06userId\x12(\n" +
	"\x10game_category_id\x18\a \x01(\x03R\x0egameCategoryId\"<\n" +
	"\x15GetHotPlatformListReq\x12#\n" +
	"\rcurrency_code\x18\x01 \x01(\tR\fcurrencyCode\"J\n" +
	"\x17GetHotPlatformListReply\x12/\n" +
	"\x04rows\x18\x01 \x03(\v2\x1b.game.v1.GamePlatformDetailR\x04rows\"B\n" +
	"\x0eGameDetailsReq\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\x03R\x06gameId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\"\xe6\x02\n" +
	"\x17GetUserBetRecordListReq\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x03R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x03R\bpageSize\x12\x1d\n" +
	"\n" +
	"start_time\x18\x04 \x01(\x03R\tstartTime\x12\x19\n" +
	"\bend_time\x18\x05 \x01(\x03R\aendTime\x12(\n" +
	"\x10game_platform_id\x18\x06 \x01(\x03R\x0egamePlatformId\x12(\n" +
	"\x10game_category_id\x18\a \x01(\x03R\x0egameCategoryId\x12\x17\n" +
	"\agame_id\x18\b \x01(\x03R\x06gameId\x12\x16\n" +
	"\x06status\x18\t \x01(\x03R\x06status\x12\x1d\n" +
	"\n" +
	"sort_order\x18\n" +
	" \x01(\x03R\tsortOrder\x12#\n" +
	"\rcurrency_code\x18\v \x01(\tR\fcurrencyCode\"\x8e\x01\n" +
	"\x19GetUserBetRecordListReply\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x03R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x03R\bpageSize\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x03R\x05total\x12*\n" +
	"\x04rows\x18\x04 \x03(\v2\x16.game.v1.BetRecordInfoR\x04rows\"\xd1\x03\n" +
	"\rBetRecordInfo\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\x12\x19\n" +
	"\bbet_time\x18\x02 \x01(\x03R\abetTime\x12\x16\n" +
	"\x06status\x18\x03 \x01(\x03R\x06status\x12(\n" +
	"\x10game_platform_id\x18\x04 \x01(\x03R\x0egamePlatformId\x12,\n" +
	"\x12game_platform_name\x18\x05 \x01(\tR\x10gamePlatformName\x12(\n" +
	"\x10game_category_id\x18\x06 \x01(\x03R\x0egameCategoryId\x12,\n" +
	"\x12game_category_name\x18\a \x01(\tR\x10gameCategoryName\x12\x17\n" +
	"\agame_id\x18\b \x01(\x03R\x06gameId\x12\x1b\n" +
	"\tgame_name\x18\t \x01(\tR\bgameName\x12\x1f\n" +
	"\vorder_count\x18\n" +
	" \x01(\tR\n" +
	"orderCount\x12\x1d\n" +
	"\n" +
	"bet_amount\x18\v \x01(\x03R\tbetAmount\x12(\n" +
	"\x10valid_bet_amount\x18\f \x01(\x03R\x0evalidBetAmount\x12\"\n" +
	"\ruser_win_loss\x18\r \x01(\x03R\vuserWinLoss\"\x87\x02\n" +
	"\x1aGetUserBetRecordSummaryReq\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1d\n" +
	"\n" +
	"start_time\x18\x04 \x01(\x03R\tstartTime\x12\x19\n" +
	"\bend_time\x18\x05 \x01(\x03R\aendTime\x12(\n" +
	"\x10game_platform_id\x18\x06 \x01(\x03R\x0egamePlatformId\x12(\n" +
	"\x10game_category_id\x18\a \x01(\x03R\x0egameCategoryId\x12\x1d\n" +
	"\n" +
	"sort_order\x18\n" +
	" \x01(\x03R\tsortOrder\x12#\n" +
	"\rcurrency_code\x18\v \x01(\tR\fcurrencyCode\"\xf5\x01\n" +
	"\x1cGetUserBetRecordSummaryReply\x12A\n" +
	"\x10bet_summary_list\x18\x01 \x03(\v2\x17.game.v1.BetSummaryInfoR\x0ebetSummaryList\x12*\n" +
	"\x11total_order_count\x18\x02 \x01(\x03R\x0ftotalOrderCount\x123\n" +
	"\x16total_valid_bet_amount\x18\x03 \x01(\x03R\x13totalValidBetAmount\x121\n" +
	"\x15total_lose_win_amount\x18\x04 \x01(\x03R\x12totalLoseWinAmount\"\xf5\x02\n" +
	"\x0eBetSummaryInfo\x12\x19\n" +
	"\bbet_time\x18\x01 \x01(\tR\abetTime\x12(\n" +
	"\x10game_platform_id\x18\x02 \x01(\x03R\x0egamePlatformId\x12,\n" +
	"\x12game_platform_name\x18\x03 \x01(\tR\x10gamePlatformName\x12(\n" +
	"\x10game_category_id\x18\x04 \x01(\x03R\x0egameCategoryId\x12,\n" +
	"\x12game_category_name\x18\x05 \x01(\tR\x10gameCategoryName\x12\x17\n" +
	"\agame_id\x18\x06 \x01(\x03R\x06gameId\x12\x1b\n" +
	"\tgame_name\x18\a \x01(\tR\bgameName\x12\x1f\n" +
	"\vorder_count\x18\b \x01(\x03R\n" +
	"orderCount\x12\x1d\n" +
	"\n" +
	"bet_amount\x18\t \x01(\x03R\tbetAmount\x12\"\n" +
	"\ruser_win_loss\x18\n" +
	" \x01(\x03R\vuserWinLoss\"\x90\x01\n" +
	"\x12GetHomeGameItemReq\x12\x10\n" +
	"\x03num\x18\x01 \x01(\x03R\x03num\x12#\n" +
	"\rcurrency_code\x18\x02 \x01(\tR\fcurrencyCode\x12*\n" +
	"\x11game_category_ids\x18\x03 \x03(\x03R\x0fgameCategoryIds\x12\x17\n" +
	"\auser_id\x18\x04 \x01(\x03R\x06userId\"H\n" +
	"\x13PlatformDetailsList\x121\n" +
	"\x05items\x18\x01 \x03(\v2\x1b.game.v1.GamePlatformDetailR\x05items\"=\n" +
	"\x0fGameDetailsList\x12*\n" +
	"\x05items\x18\x01 \x03(\v2\x14.game.v1.GameDetailsR\x05items\"\xc5\x01\n" +
	"\x19GetHomePlatformItemsReply\x12M\n" +
	"\thome_item\x18\x01 \x03(\v20.game.v1.GetHomePlatformItemsReply.HomeItemEntryR\bhomeItem\x1aY\n" +
	"\rHomeItemEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.game.v1.PlatformDetailsListR\x05value:\x028\x01\"\xb9\x01\n" +
	"\x15GetHomeGameItemsReply\x12I\n" +
	"\thome_item\x18\x01 \x03(\v2,.game.v1.GetHomeGameItemsReply.HomeItemEntryR\bhomeItem\x1aU\n" +
	"\rHomeItemEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12.\n" +
	"\x05value\x18\x02 \x01(\v2\x18.game.v1.GameDetailsListR\x05value:\x028\x01\"3\n" +
	"\x12GetGameConfInfoReq\x12\x1d\n" +
	"\n" +
	"config_key\x18\x01 \x01(\tR\tconfigKey\"9\n" +
	"\x14GetGameConfInfoReply\x12!\n" +
	"\fconfig_value\x18\x01 \x01(\tR\vconfigValue\"\xa1\x02\n" +
	"\x11GetNewGameListReq\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x03R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x03R\bpageSize\x12!\n" +
	"\fsearch_value\x18\x03 \x01(\tR\vsearchValue\x12#\n" +
	"\rcurrency_code\x18\x04 \x01(\tR\fcurrencyCode\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\x03R\x06userId\x12(\n" +
	"\x10game_platform_id\x18\x06 \x01(\x03R\x0egamePlatformId\x124\n" +
	"\x16tripartite_category_id\x18\a \x01(\x03R\x14tripartiteCategoryId\x12\x1a\n" +
	"\btypology\x18\b \x01(\x03R\btypology\"\xa7\x01\n" +
	"\x13GetNewGameListReply\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x03R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x03R\bpageSize\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x03R\x05total\x12\x1d\n" +
	"\n" +
	"total_page\x18\x04 \x01(\x03R\ttotalPage\x12*\n" +
	"\x04rows\x18\x05 \x03(\v2\x16.game.v1.GameValueItemR\x04rows\"\xfe\v\n" +
	"\rGameValueItem\x12#\n" +
	"\rcategory_type\x18\x01 \x01(\x03R\fcategoryType\x12\x12\n" +
	"\x04rank\x18\x02 \x01(\x03R\x04rank\x12#\n" +
	"\rcurrency_code\x18\x03 \x01(\tR\fcurrencyCode\x12(\n" +
	"\x10game_category_id\x18\x04 \x01(\x03R\x0egameCategoryId\x12\x17\n" +
	"\agame_id\x18\x05 \x01(\x03R\x06gameId\x12,\n" +
	"\x12tripartite_game_id\x18\x06 \x01(\x03R\x10tripartiteGameId\x12\x1b\n" +
	"\tgame_name\x18\a \x01(\tR\bgameName\x12(\n" +
	"\x10game_platform_id\x18\b \x01(\x03R\x0egamePlatformId\x12=\n" +
	"\x1btripartite_game_platform_id\x18\t \x01(\x03R\x18tripartiteGamePlatformId\x12,\n" +
	"\x12game_platform_name\x18\n" +
	" \x01(\tR\x10gamePlatformName\x12\x1f\n" +
	"\vis_favorite\x18\v \x01(\x03R\n" +
	"isFavorite\x12\x1f\n" +
	"\vis_featured\x18\f \x01(\x03R\n" +
	"isFeatured\x12\x1e\n" +
	"\vis_jump_tab\x18\r \x01(\x03R\tisJumpTab\x12!\n" +
	"\fwallet_model\x18\x0e \x01(\x03R\vwalletModel\x12-\n" +
	"\x12horizontal_support\x18\x0f \x01(\x03R\x11horizontalSupport\x12)\n" +
	"\x10vertical_support\x18\x10 \x01(\x03R\x0fverticalSupport\x12(\n" +
	"\x10try_game_support\x18\x11 \x01(\x03R\x0etryGameSupport\x124\n" +
	"\x16platform_minimum_entry\x18\x12 \x01(\x01R\x14platformMinimumEntry\x128\n" +
	"\x18platform_promotion_style\x18\x13 \x01(\x03R\x16platformPromotionStyle\x12#\n" +
	"\rplatform_icon\x18\x14 \x01(\tR\fplatformIcon\x12:\n" +
	"\x19platform_background_color\x18\x15 \x01(\tR\x17platformBackgroundColor\x12*\n" +
	"\x11platform_logo_url\x18\x16 \x01(\tR\x0fplatformLogoUrl\x12?\n" +
	"\x1cplatform_promotion_image_url\x18\x17 \x01(\tR\x19platformPromotionImageUrl\x123\n" +
	"\x16platform_hot_image_url\x18\x18 \x01(\tR\x13platformHotImageUrl\x12&\n" +
	"\x0fgame_icon_style\x18\x19 \x01(\x03R\rgameIconStyle\x12\"\n" +
	"\rgame_logo_url\x18\x1a \x01(\tR\vgameLogoUrl\x12-\n" +
	"\x13game_icon_image_url\x18\x1b \x01(\tR\x10gameIconImageUrl\x124\n" +
	"\x16platform_icon_vertical\x18\x1c \x01(\tR\x14platformIconVertical\x120\n" +
	"\x14platform_icon_square\x18\x1d \x01(\tR\x12platformIconSquare\x128\n" +
	"\x18platform_icon_horizontal\x18\x1e \x01(\tR\x16platformIconHorizontal\x12,\n" +
	"\x12game_icon_vertical\x18\x1f \x01(\tR\x10gameIconVertical\x12(\n" +
	"\x10game_icon_square\x18  \x01(\tR\x0egameIconSquare\x120\n" +
	"\x14game_icon_horizontal\x18! \x01(\tR\x12gameIconHorizontal\x12\x15\n" +
	"\x06is_hot\x18\" \x01(\x03R\x05isHot\x120\n" +
	"\x14is_under_maintenance\x18# \x01(\x03R\x12isUnderMaintenance\"8\n" +
	"\x11BigWinGameListReq\x12#\n" +
	"\rcurrency_code\x18\x01 \x01(\tR\fcurrencyCode\"D\n" +
	"\x13BigWinGameListReply\x12-\n" +
	"\x04rows\x18\x01 \x03(\v2\x19.game.v1.WinGameValueItemR\x04rows\"\x91\x06\n" +
	"\x10WinGameValueItem\x12#\n" +
	"\rcurrency_code\x18\x03 \x01(\tR\fcurrencyCode\x12(\n" +
	"\x10game_category_id\x18\x04 \x01(\x03R\x0egameCategoryId\x12\x17\n" +
	"\agame_id\x18\x05 \x01(\x03R\x06gameId\x12,\n" +
	"\x12tripartite_game_id\x18\x06 \x01(\x03R\x10tripartiteGameId\x12\x1b\n" +
	"\tgame_name\x18\a \x01(\tR\bgameName\x12(\n" +
	"\x10game_platform_id\x18\b \x01(\x03R\x0egamePlatformId\x12\x1e\n" +
	"\vis_jump_tab\x18\r \x01(\x03R\tisJumpTab\x12!\n" +
	"\fwallet_model\x18\x0e \x01(\x03R\vwalletModel\x12-\n" +
	"\x12horizontal_support\x18\x0f \x01(\x03R\x11horizontalSupport\x12)\n" +
	"\x10vertical_support\x18\x10 \x01(\x03R\x0fverticalSupport\x12(\n" +
	"\x10try_game_support\x18\x11 \x01(\x03R\x0etryGameSupport\x12&\n" +
	"\x0fgame_icon_style\x18\x19 \x01(\x03R\rgameIconStyle\x12\"\n" +
	"\rgame_logo_url\x18\x1a \x01(\tR\vgameLogoUrl\x12-\n" +
	"\x13game_icon_image_url\x18\x1b \x01(\tR\x10gameIconImageUrl\x12&\n" +
	"\x0fgame_win_amount\x18\x1c \x01(\tR\rgameWinAmount\x12#\n" +
	"\ricon_vertical\x18\x1f \x01(\tR\ficonVertical\x12\x1f\n" +
	"\vicon_square\x18  \x01(\tR\n" +
	"iconSquare\x12'\n" +
	"\x0ficon_horizontal\x18! \x01(\tR\x0eiconHorizontal\x12\x15\n" +
	"\x06is_hot\x18\" \x01(\x03R\x05isHot\x120\n" +
	"\x14is_under_maintenance\x18# \x01(\x03R\x12isUnderMaintenance\"\xc1\x01\n" +
	"\x18FetchGamePlatformMetaReq\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\x03R\x06gameId\x12(\n" +
	"\x10game_platform_id\x18\x02 \x01(\x03R\x0egamePlatformId\x12#\n" +
	"\rcurrency_code\x18\x03 \x01(\tR\fcurrencyCode\x12\x17\n" +
	"\auser_id\x18\x04 \x01(\x03R\x06userId\x12$\n" +
	"\x0eis_third_party\x18\x05 \x01(\bR\fisThirdParty\"\x99\x01\n" +
	"\x1aFetchGamePlatformMetaReply\x125\n" +
	"\vgame_detail\x18\x01 \x01(\v2\x14.game.v1.GameDetailsR\n" +
	"gameDetail\x12D\n" +
	"\x0fplatform_detail\x18\x02 \x01(\v2\x1b.game.v1.GamePlatformDetailR\x0eplatformDetail\"\xda\x01\n" +
	"\x15FetchHotManagementReq\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x03R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x03R\bpageSize\x12(\n" +
	"\x10game_platform_id\x18\x03 \x01(\x03R\x0egamePlatformId\x12#\n" +
	"\rcurrency_code\x18\x04 \x01(\tR\fcurrencyCode\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\x03R\x06userId\x12(\n" +
	"\x10game_category_id\x18\a \x01(\x03R\x0egameCategoryId\"\xaf\x01\n" +
	"\x17FetchHotManagementReply\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x03R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x03R\bpageSize\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x03R\x05total\x12\x1d\n" +
	"\n" +
	"total_page\x18\x04 \x01(\x03R\ttotalPage\x12.\n" +
	"\x04rows\x18\x05 \x03(\v2\x1a.game.v1.GameHotManagementR\x04rows\"\x89\x02\n" +
	"\x11GameHotManagement\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1b\n" +
	"\thot_level\x18\x02 \x01(\x03R\bhotLevel\x12\x12\n" +
	"\x04rank\x18\x03 \x01(\x03R\x04rank\x12#\n" +
	"\rcurrency_code\x18\x04 \x01(\tR\fcurrencyCode\x12!\n" +
	"\fhot_category\x18\x05 \x01(\x03R\vhotCategory\x12(\n" +
	"\x10game_category_id\x18\x06 \x01(\x03R\x0egameCategoryId\x12(\n" +
	"\x10game_platform_id\x18\a \x01(\x03R\x0egamePlatformId\x12\x17\n" +
	"\agame_id\x18\b \x01(\x03R\x06gameId\".\n" +
	"\x13FetchGameMapByIDReq\x12\x17\n" +
	"\agame_id\x18\x01 \x03(\x03R\x06gameId\"\xa4\x01\n" +
	"\x15FetchGameMapByIDReply\x12<\n" +
	"\x04info\x18\x01 \x03(\v2(.game.v1.FetchGameMapByIDReply.InfoEntryR\x04info\x1aM\n" +
	"\tInfoEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12*\n" +
	"\x05value\x18\x02 \x01(\v2\x14.game.v1.GameDetailsR\x05value:\x028\x01\"C\n" +
	"\x17FetchPlatformMapByIDReq\x12(\n" +
	"\x10game_platform_id\x18\x01 \x03(\x03R\x0egamePlatformId\"\xb3\x01\n" +
	"\x19FetchPlatformMapByIDReply\x12@\n" +
	"\x04info\x18\x01 \x03(\v2,.game.v1.FetchPlatformMapByIDReply.InfoEntryR\x04info\x1aT\n" +
	"\tInfoEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x121\n" +
	"\x05value\x18\x02 \x01(\v2\x1b.game.v1.GamePlatformDetailR\x05value:\x028\x012\xa2\x01\n" +
	"\x17LiveGameExternalService\x12>\n" +
	"\x16K9GameResourceListSync\x12\x10.game.v1.GameReq\x1a\x12.game.v1.GameReply\x12G\n" +
	"\x1fK9GameTransferBetRecordListSync\x12\x10.game.v1.GameReq\x1a\x12.game.v1.GameReply2\xba\x01\n" +
	"\x1dLiveGameExternalSingleService\x12G\n" +
	"\tEnterGame\x12\x1b.game.v1.SingleEnterGameReq\x1a\x1d.game.v1.SingleEnterGameReply\x12P\n" +
	"\fEnterGameTry\x12\x1e.game.v1.SingleEnterGameTryReq\x1a .game.v1.SingleEnterGameTryReply2\xc2\a\n" +
	"\x1fLiveGameExternalTransferService\x12K\n" +
	"\tEnterGame\x12\x1d.game.v1.TransferEnterGameReq\x1a\x1f.game.v1.TransferEnterGameReply\x12\\\n" +
	"\x14WalletTransferInGame\x12 .game.v1.WalletTransferInGameReq\x1a\".game.v1.WalletTransferInGameReply\x12_\n" +
	"\x15WalletTransferOutGame\x12!.game.v1.WalletTransferOutGameReq\x1a#.game.v1.WalletTransferOutGameReply\x12h\n" +
	"\x18GetWalletTransferBalance\x12$.game.v1.GetWalletTransferBalanceReq\x1a&.game.v1.GetWalletTransferBalanceReply\x12n\n" +
	"\x1aGetGameTransferOrderStatus\x12&.game.v1.GetGameTransferOrderStatusReq\x1a(.game.v1.GetGameTransferOrderStatusReply\x12r\n" +
	"\x1cGetGameTransferOrderStatusV2\x12(.game.v1.GetGameTransferOrderStatusV2Req\x1a(.game.v1.GetGameTransferOrderStatusReply\x12q\n" +
	"\x1bGetGameTransferBetOrderList\x12'.game.v1.GetGameTransferBetOrderListReq\x1a).game.v1.GetGameTransferBetOrderListReply\x12b\n" +
	"\x16WalletTransferInGameV2\x12\".game.v1.WalletTransferInGameReqV2\x1a$.game.v1.WalletTransferInGameReplyV2\x12n\n" +
	"\x1aGetWalletTransferBalanceV2\x12&.game.v1.GetWalletTransferBalanceReqV2\x1a(.game.v1.GetWalletTransferBalanceReplyV22\x82\x04\n" +
	"\x1aLiveGameCallbackRpcService\x12V\n" +
	"\x12GetK9GameAccessKey\x12\x1e.game.v1.GetK9GameAccessKeyReq\x1a .game.v1.GetK9GameAccessKeyReply\x12A\n" +
	"\vGameUserBet\x12\x17.game.v1.GameUserBetReq\x1a\x19.game.v1.GameUserBetReply\x12J\n" +
	"\x0eGameUserReward\x12\x1a.game.v1.GameUserRewardReq\x1a\x1c.game.v1.GameUserRewardReply\x12S\n" +
	"\x11GameUserBetCancel\x12\x1d.game.v1.GameUserBetCancelReq\x1a\x1f.game.v1.GameUserBetCancelReply\x12V\n" +
	"\x12GameUserAdjustment\x12\x1e.game.v1.GameUserAdjustmentReq\x1a .game.v1.GameUserAdjustmentReply\x12P\n" +
	"\x10TransferCallback\x12\x1c.game.v1.TransferCallbackReq\x1a\x1e.game.v1.TransferCallbackReply2\xe2\v\n" +
	"\x17LiveGameRpcInnerService\x12Z\n" +
	"\x1bAddTripartiteTransferRecord\x12'.game.v1.AddTripartiteTransferRecordReq\x1a\x12.game.v1.GameReply\x12f\n" +
	"!AddTripartiteTransferRecordStatus\x12-.game.v1.AddTripartiteTransferRecordStatusReq\x1a\x12.game.v1.GameReply\x12n\n" +
	"\x1aProcessMessageTransferData\x12&.game.v1.ProcessMessageTransferDataReq\x1a(.game.v1.ProcessMessageTransferDataReply\x12n\n" +
	"\x1aProcessMessageTransferSend\x12&.game.v1.ProcessMessageTransferSendReq\x1a(.game.v1.ProcessMessageTransferSendReply\x12o\n" +
	"\x1eTripartiteTransferRecordStatus\x12*.game.v1.TripartiteTransferRecordStatusReq\x1a!.game.v1.TripartiteTransferRecord\x12m\n" +
	"\x1eCreateCompensationFailedRecord\x12$.game.v1.CreateCompensationRecordReq\x1a%.game.v1.CreateCompensationRecordResp\x12_\n" +
	"\x15GetGameDetailsByThird\x12!.game.v1.GetGameDetailsByThirdReq\x1a#.game.v1.GetGameDetailsByThirdReply\x12P\n" +
	"\x10AddGameBetRecord\x12\x1c.game.v1.AddGameBetRecordReq\x1a\x1e.game.v1.AddGameBetRecordReply\x12V\n" +
	"\x14AddGameSettledRecord\x12 .game.v1.AddGameSettledRecordReq\x1a\x1c.game.v1.AddGameBetBaseReply\x12T\n" +
	"\x13AddGameCancelRecord\x12\x1f.game.v1.AddGameCancelRecordReq\x1a\x1c.game.v1.AddGameBetBaseReply\x12\\\n" +
	"\x17AddGameAdjustmentRecord\x12#.game.v1.AddGameAdjustmentRecordReq\x1a\x1c.game.v1.AddGameBetBaseReply\x12T\n" +
	"\x18AddTransferGameBetRecord\x12$.game.v1.AddTransferGameBetRecordReq\x1a\x12.game.v1.GameReply\x12D\n" +
	"\x10SendGameBetBetMQ\x12\x1c.game.v1.SendGameBetBetMQReq\x1a\x12.game.v1.GameReply\x12X\n" +
	"\x1aSendGameBetBetSettlementMQ\x12&.game.v1.SendGameBetBetSettlementMQReq\x1a\x12.game.v1.GameReply\x12J\n" +
	"\x13AddRecentlyGamePlay\x12\x1f.game.v1.AddRecentlyGamePlayReq\x1a\x12.game.v1.GameReply\x12B\n" +
	"\x1aSyncGameBetSummaryToPGTask\x12\x10.game.v1.GameReq\x1a\x12.game.v1.GameReply2\x90\x14\n" +
	"\x12LiveGameRpcService\x12c\n" +
	"\x19GetGameCategoryListByCurr\x12!.game.v1.GetCategoryListByCurrReq\x1a#.game.v1.GetCategoryListByCurrReply\x12o\n" +
	"\x1fGetGameCategorySimpleListByCurr\x12!.game.v1.GetCategoryListByCurrReq\x1a).game.v1.GetCategorySimpleListByCurrReply\x12\\\n" +
	"\x15GetGameListByCategory\x12!.game.v1.GetGameListByCategoryReq\x1a .game.v1.GetGameDetailsListReply\x12_\n" +
	"\x15GetPlatformListByCurr\x12!.game.v1.GetPlatformListByCurrReq\x1a#.game.v1.GetPlatformListByCurrReply\x12c\n" +
	"\x17GetPlatListSimpleByCurr\x12!.game.v1.GetPlatformListByCurrReq\x1a%.game.v1.GetPlatListSimpleByCurrReply\x12R\n" +
	"\x12GetPlatformDetails\x12\x1f.game.v1.GamePlatformDetailsReq\x1a\x1b.game.v1.GamePlatformDetail\x12\\\n" +
	"\x15GetGameListByPlatform\x12!.game.v1.GetGameListByPlatformReq\x1a .game.v1.GetGameDetailsListReply\x12X\n" +
	"\x13GetGameListBySearch\x12\x1f.game.v1.GetGameListBySearchReq\x1a .game.v1.GetGameDetailsListReply\x12e\n" +
	"\x19GetGameSimpleListBySearch\x12\x1f.game.v1.GetGameListBySearchReq\x1a'.game.v1.GetGameSimpleListBySearchReply\x12E\n" +
	"\x0fGameAddFavorite\x12\x1e.game.v1.GameHandelFavoriteReq\x1a\x12.game.v1.GameReply\x12H\n" +
	"\x12GameRemoveFavorite\x12\x1e.game.v1.GameHandelFavoriteReq\x1a\x12.game.v1.GameReply\x12U\n" +
	"\x10GameFavoriteList\x12\x1f.game.v1.GetGameFavoriteListReq\x1a .game.v1.GetGameDetailsListReply\x12N\n" +
	"\x0eGetHotGameList\x12\x1a.game.v1.GetHotGameListReq\x1a .game.v1.GetGameDetailsListReply\x12X\n" +
	"\x13GetRecentlyGameList\x12\x1f.game.v1.GetGameRecentlyListReq\x1a .game.v1.GetGameDetailsListReply\x12V\n" +
	"\x12GetHotPlatformList\x12\x1e.game.v1.GetHotPlatformListReq\x1a .game.v1.GetHotPlatformListReply\x12?\n" +
	"\x0eGetGameDetails\x12\x17.game.v1.GameDetailsReq\x1a\x14.game.v1.GameDetails\x12V\n" +
	"\x12GetUserFavoriteIds\x12\x1e.game.v1.GetUserFavoriteIdsReq\x1a .game.v1.GetUserFavoriteIdsReply\x12\\\n" +
	"\x14GetUserBetRecordList\x12 .game.v1.GetUserBetRecordListReq\x1a\".game.v1.GetUserBetRecordListReply\x12e\n" +
	"\x17GetUserBetRecordSummary\x12#.game.v1.GetUserBetRecordSummaryReq\x1a%.game.v1.GetUserBetRecordSummaryReply\x12W\n" +
	"\x14GetHomePlatformItems\x12\x1b.game.v1.GetHomeGameItemReq\x1a\".game.v1.GetHomePlatformItemsReply\x12O\n" +
	"\x10GetHomeGameItems\x12\x1b.game.v1.GetHomeGameItemReq\x1a\x1e.game.v1.GetHomeGameItemsReply\x12H\n" +
	"\x0fGetHomeGameList\x12\x1b.game.v1.GetHomeGameItemReq\x1a\x18.game.v1.GameDetailsList\x12M\n" +
	"\x0fGetGameConfInfo\x12\x1b.game.v1.GetGameConfInfoReq\x1a\x1d.game.v1.GetGameConfInfoReply\x12J\n" +
	"\x0eGetNewGameList\x12\x1a.game.v1.GetNewGameListReq\x1a\x1c.game.v1.GetNewGameListReply\x12M\n" +
	"\x11GetBigWinGameList\x12\x1a.game.v1.BigWinGameListReq\x1a\x1c.game.v1.BigWinGameListReply\x12_\n" +
	"\x15FetchGamePlatformMeta\x12!.game.v1.FetchGamePlatformMetaReq\x1a#.game.v1.FetchGamePlatformMetaReply\x12T\n" +
	"\x10FetchHotGameList\x12\x1e.game.v1.FetchHotManagementReq\x1a .game.v1.FetchHotManagementReply\x12Q\n" +
	"\x11FetchGameMapByIDs\x12\x1c.game.v1.FetchGameMapByIDReq\x1a\x1e.game.v1.FetchGameMapByIDReply\x12]\n" +
	"\x15FetchPlatformMapByIDs\x12 .game.v1.FetchPlatformMapByIDReq\x1a\".game.v1.FetchPlatformMapByIDReplyB\tZ\a./pb/v1b\x06proto3"

var (
	file_game_v1_game_proto_rawDescOnce sync.Once
	file_game_v1_game_proto_rawDescData []byte
)

func file_game_v1_game_proto_rawDescGZIP() []byte {
	file_game_v1_game_proto_rawDescOnce.Do(func() {
		file_game_v1_game_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_game_v1_game_proto_rawDesc), len(file_game_v1_game_proto_rawDesc)))
	})
	return file_game_v1_game_proto_rawDescData
}

var file_game_v1_game_proto_msgTypes = make([]protoimpl.MessageInfo, 125)
var file_game_v1_game_proto_goTypes = []any{
	(*GameReq)(nil),                                  // 0: game.v1.GameReq
	(*GameReply)(nil),                                // 1: game.v1.GameReply
	(*SingleEnterGameReq)(nil),                       // 2: game.v1.SingleEnterGameReq
	(*SingleEnterGameReply)(nil),                     // 3: game.v1.SingleEnterGameReply
	(*SingleEnterGameTryReq)(nil),                    // 4: game.v1.SingleEnterGameTryReq
	(*SingleEnterGameTryReply)(nil),                  // 5: game.v1.SingleEnterGameTryReply
	(*TransferEnterGameReq)(nil),                     // 6: game.v1.TransferEnterGameReq
	(*TransferEnterGameReply)(nil),                   // 7: game.v1.TransferEnterGameReply
	(*WalletTransferInGameReq)(nil),                  // 8: game.v1.WalletTransferInGameReq
	(*WalletTransferInGameReply)(nil),                // 9: game.v1.WalletTransferInGameReply
	(*WalletTransferInGameReqV2)(nil),                // 10: game.v1.WalletTransferInGameReqV2
	(*WalletTransferInGameReplyV2)(nil),              // 11: game.v1.WalletTransferInGameReplyV2
	(*WalletTransferOutGameReq)(nil),                 // 12: game.v1.WalletTransferOutGameReq
	(*WalletTransferOutGameReply)(nil),               // 13: game.v1.WalletTransferOutGameReply
	(*GetWalletTransferBalanceReq)(nil),              // 14: game.v1.GetWalletTransferBalanceReq
	(*GetWalletTransferBalanceReply)(nil),            // 15: game.v1.GetWalletTransferBalanceReply
	(*GetWalletTransferBalanceReqV2)(nil),            // 16: game.v1.GetWalletTransferBalanceReqV2
	(*GetWalletTransferBalanceReplyV2)(nil),          // 17: game.v1.GetWalletTransferBalanceReplyV2
	(*GetGameTransferOrderStatusReq)(nil),            // 18: game.v1.GetGameTransferOrderStatusReq
	(*GetGameTransferOrderStatusReply)(nil),          // 19: game.v1.GetGameTransferOrderStatusReply
	(*GetGameTransferBetOrderListReq)(nil),           // 20: game.v1.GetGameTransferBetOrderListReq
	(*TransferBetRecord)(nil),                        // 21: game.v1.TransferBetRecord
	(*GetGameTransferBetOrderListReply)(nil),         // 22: game.v1.GetGameTransferBetOrderListReply
	(*GetGameTransferOrderStatusV2Req)(nil),          // 23: game.v1.GetGameTransferOrderStatusV2Req
	(*GetK9GameAccessKeyReq)(nil),                    // 24: game.v1.GetK9GameAccessKeyReq
	(*GetK9GameAccessKeyReply)(nil),                  // 25: game.v1.GetK9GameAccessKeyReply
	(*GameUserBetReq)(nil),                           // 26: game.v1.GameUserBetReq
	(*GameUserBetReply)(nil),                         // 27: game.v1.GameUserBetReply
	(*GameUserRewardReq)(nil),                        // 28: game.v1.GameUserRewardReq
	(*GameUserRewardReply)(nil),                      // 29: game.v1.GameUserRewardReply
	(*GameUserBetCancelReq)(nil),                     // 30: game.v1.GameUserBetCancelReq
	(*GameUserBetCancelReply)(nil),                   // 31: game.v1.GameUserBetCancelReply
	(*GameUserAdjustmentReq)(nil),                    // 32: game.v1.GameUserAdjustmentReq
	(*GameUserAdjustmentReply)(nil),                  // 33: game.v1.GameUserAdjustmentReply
	(*TransferCallbackReq)(nil),                      // 34: game.v1.TransferCallbackReq
	(*TransferCallbackReply)(nil),                    // 35: game.v1.TransferCallbackReply
	(*AddTripartiteTransferRecordReq)(nil),           // 36: game.v1.AddTripartiteTransferRecordReq
	(*AddTripartiteTransferRecordStatusReq)(nil),     // 37: game.v1.AddTripartiteTransferRecordStatusReq
	(*TripartiteTransferRecordStatusReq)(nil),        // 38: game.v1.TripartiteTransferRecordStatusReq
	(*ProcessMessageTransferDataReq)(nil),            // 39: game.v1.ProcessMessageTransferDataReq
	(*ProcessMessageTransferDataReply)(nil),          // 40: game.v1.ProcessMessageTransferDataReply
	(*ProcessMessageTransferSendReq)(nil),            // 41: game.v1.ProcessMessageTransferSendReq
	(*ProcessMessageTransferSendReply)(nil),          // 42: game.v1.ProcessMessageTransferSendReply
	(*TripartiteTransferRecord)(nil),                 // 43: game.v1.TripartiteTransferRecord
	(*CreateCompensationRecordReq)(nil),              // 44: game.v1.CreateCompensationRecordReq
	(*CreateCompensationRecordResp)(nil),             // 45: game.v1.CreateCompensationRecordResp
	(*GetGameDetailsByThirdReq)(nil),                 // 46: game.v1.GetGameDetailsByThirdReq
	(*GetGameDetailsByThirdReply)(nil),               // 47: game.v1.GetGameDetailsByThirdReply
	(*AddGameBetBaseReply)(nil),                      // 48: game.v1.AddGameBetBaseReply
	(*AddGameBetRecordReq)(nil),                      // 49: game.v1.AddGameBetRecordReq
	(*AddGameBetRecordReply)(nil),                    // 50: game.v1.AddGameBetRecordReply
	(*BatchAddGameBetRecordReq)(nil),                 // 51: game.v1.BatchAddGameBetRecordReq
	(*AddGameSettledRecordReq)(nil),                  // 52: game.v1.AddGameSettledRecordReq
	(*BatchAddGameSettledRecordReq)(nil),             // 53: game.v1.BatchAddGameSettledRecordReq
	(*AddGameCancelRecordReq)(nil),                   // 54: game.v1.AddGameCancelRecordReq
	(*AddGameAdjustmentRecordReq)(nil),               // 55: game.v1.AddGameAdjustmentRecordReq
	(*AddTransferGameBetRecordReq)(nil),              // 56: game.v1.AddTransferGameBetRecordReq
	(*SendGameBetBetMQReq)(nil),                      // 57: game.v1.SendGameBetBetMQReq
	(*SendGameBetBetSettlementMQReq)(nil),            // 58: game.v1.SendGameBetBetSettlementMQReq
	(*AddRecentlyGamePlayReq)(nil),                   // 59: game.v1.AddRecentlyGamePlayReq
	(*GetCategoryListByCurrReq)(nil),                 // 60: game.v1.GetCategoryListByCurrReq
	(*GetCategoryListByCurrReply)(nil),               // 61: game.v1.GetCategoryListByCurrReply
	(*GameCategoryDetail)(nil),                       // 62: game.v1.GameCategoryDetail
	(*GetCategorySimpleListByCurrReply)(nil),         // 63: game.v1.GetCategorySimpleListByCurrReply
	(*GameCategorySimpleDetail)(nil),                 // 64: game.v1.GameCategorySimpleDetail
	(*CategoryNameBase)(nil),                         // 65: game.v1.CategoryNameBase
	(*GetGameListByCategoryReq)(nil),                 // 66: game.v1.GetGameListByCategoryReq
	(*GetPlatformListByCurrReq)(nil),                 // 67: game.v1.GetPlatformListByCurrReq
	(*GetPlatformListByCurrReply)(nil),               // 68: game.v1.GetPlatformListByCurrReply
	(*GamePlatformDetail)(nil),                       // 69: game.v1.GamePlatformDetail
	(*GetPlatListSimpleByCurrReply)(nil),             // 70: game.v1.GetPlatListSimpleByCurrReply
	(*GamePlatformSimpleDetail)(nil),                 // 71: game.v1.GamePlatformSimpleDetail
	(*PlatformRedirectionBase)(nil),                  // 72: game.v1.PlatformRedirectionBase
	(*GameDetails)(nil),                              // 73: game.v1.GameDetails
	(*SubGameInfo)(nil),                              // 74: game.v1.SubGameInfo
	(*GameSimpleDetails)(nil),                        // 75: game.v1.GameSimpleDetails
	(*GetGameDetailsListReply)(nil),                  // 76: game.v1.GetGameDetailsListReply
	(*GetGameSimpleListBySearchReply)(nil),           // 77: game.v1.GetGameSimpleListBySearchReply
	(*GetGameListByPlatformReq)(nil),                 // 78: game.v1.GetGameListByPlatformReq
	(*GamePlatformDetailsReq)(nil),                   // 79: game.v1.GamePlatformDetailsReq
	(*GetGameListBySearchReq)(nil),                   // 80: game.v1.GetGameListBySearchReq
	(*GameHandelFavoriteReq)(nil),                    // 81: game.v1.GameHandelFavoriteReq
	(*GetGameFavoriteListReq)(nil),                   // 82: game.v1.GetGameFavoriteListReq
	(*GetUserFavoriteIdsReq)(nil),                    // 83: game.v1.GetUserFavoriteIdsReq
	(*GetUserFavoriteIdsReply)(nil),                  // 84: game.v1.GetUserFavoriteIdsReply
	(*GetGameRecentlyListReq)(nil),                   // 85: game.v1.GetGameRecentlyListReq
	(*GetHotGameListReq)(nil),                        // 86: game.v1.GetHotGameListReq
	(*GetHotPlatformListReq)(nil),                    // 87: game.v1.GetHotPlatformListReq
	(*GetHotPlatformListReply)(nil),                  // 88: game.v1.GetHotPlatformListReply
	(*GameDetailsReq)(nil),                           // 89: game.v1.GameDetailsReq
	(*GetUserBetRecordListReq)(nil),                  // 90: game.v1.GetUserBetRecordListReq
	(*GetUserBetRecordListReply)(nil),                // 91: game.v1.GetUserBetRecordListReply
	(*BetRecordInfo)(nil),                            // 92: game.v1.BetRecordInfo
	(*GetUserBetRecordSummaryReq)(nil),               // 93: game.v1.GetUserBetRecordSummaryReq
	(*GetUserBetRecordSummaryReply)(nil),             // 94: game.v1.GetUserBetRecordSummaryReply
	(*BetSummaryInfo)(nil),                           // 95: game.v1.BetSummaryInfo
	(*GetHomeGameItemReq)(nil),                       // 96: game.v1.GetHomeGameItemReq
	(*PlatformDetailsList)(nil),                      // 97: game.v1.PlatformDetailsList
	(*GameDetailsList)(nil),                          // 98: game.v1.GameDetailsList
	(*GetHomePlatformItemsReply)(nil),                // 99: game.v1.GetHomePlatformItemsReply
	(*GetHomeGameItemsReply)(nil),                    // 100: game.v1.GetHomeGameItemsReply
	(*GetGameConfInfoReq)(nil),                       // 101: game.v1.GetGameConfInfoReq
	(*GetGameConfInfoReply)(nil),                     // 102: game.v1.GetGameConfInfoReply
	(*GetNewGameListReq)(nil),                        // 103: game.v1.GetNewGameListReq
	(*GetNewGameListReply)(nil),                      // 104: game.v1.GetNewGameListReply
	(*GameValueItem)(nil),                            // 105: game.v1.GameValueItem
	(*BigWinGameListReq)(nil),                        // 106: game.v1.BigWinGameListReq
	(*BigWinGameListReply)(nil),                      // 107: game.v1.BigWinGameListReply
	(*WinGameValueItem)(nil),                         // 108: game.v1.WinGameValueItem
	(*FetchGamePlatformMetaReq)(nil),                 // 109: game.v1.FetchGamePlatformMetaReq
	(*FetchGamePlatformMetaReply)(nil),               // 110: game.v1.FetchGamePlatformMetaReply
	(*FetchHotManagementReq)(nil),                    // 111: game.v1.FetchHotManagementReq
	(*FetchHotManagementReply)(nil),                  // 112: game.v1.FetchHotManagementReply
	(*GameHotManagement)(nil),                        // 113: game.v1.GameHotManagement
	(*FetchGameMapByIDReq)(nil),                      // 114: game.v1.FetchGameMapByIDReq
	(*FetchGameMapByIDReply)(nil),                    // 115: game.v1.FetchGameMapByIDReply
	(*FetchPlatformMapByIDReq)(nil),                  // 116: game.v1.FetchPlatformMapByIDReq
	(*FetchPlatformMapByIDReply)(nil),                // 117: game.v1.FetchPlatformMapByIDReply
	nil,                                              // 118: game.v1.GetGameTransferOrderStatusReply.OrdersEntry
	(*GetGameTransferOrderStatusReplyOrderInfo)(nil), // 119: game.v1.GetGameTransferOrderStatusReply.order_info
	nil, // 120: game.v1.GetUserFavoriteIdsReply.FavoriteIdsEntry
	nil, // 121: game.v1.GetHomePlatformItemsReply.HomeItemEntry
	nil, // 122: game.v1.GetHomeGameItemsReply.HomeItemEntry
	nil, // 123: game.v1.FetchGameMapByIDReply.InfoEntry
	nil, // 124: game.v1.FetchPlatformMapByIDReply.InfoEntry
}
var file_game_v1_game_proto_depIdxs = []int32{
	118, // 0: game.v1.GetGameTransferOrderStatusReply.orders:type_name -> game.v1.GetGameTransferOrderStatusReply.OrdersEntry
	21,  // 1: game.v1.GetGameTransferBetOrderListReply.bet_list:type_name -> game.v1.TransferBetRecord
	49,  // 2: game.v1.BatchAddGameBetRecordReq.add_game_bet_record_req:type_name -> game.v1.AddGameBetRecordReq
	52,  // 3: game.v1.BatchAddGameSettledRecordReq.add_game_settled_record_req:type_name -> game.v1.AddGameSettledRecordReq
	21,  // 4: game.v1.AddTransferGameBetRecordReq.record_list:type_name -> game.v1.TransferBetRecord
	62,  // 5: game.v1.GetCategoryListByCurrReply.rows:type_name -> game.v1.GameCategoryDetail
	64,  // 6: game.v1.GetCategorySimpleListByCurrReply.rows:type_name -> game.v1.GameCategorySimpleDetail
	69,  // 7: game.v1.GetPlatformListByCurrReply.rows:type_name -> game.v1.GamePlatformDetail
	72,  // 8: game.v1.GamePlatformDetail.platform_redirection:type_name -> game.v1.PlatformRedirectionBase
	71,  // 9: game.v1.GetPlatListSimpleByCurrReply.rows:type_name -> game.v1.GamePlatformSimpleDetail
	74,  // 10: game.v1.GameDetails.sub_factory_params:type_name -> game.v1.SubGameInfo
	73,  // 11: game.v1.GetGameDetailsListReply.rows:type_name -> game.v1.GameDetails
	75,  // 12: game.v1.GetGameSimpleListBySearchReply.rows:type_name -> game.v1.GameSimpleDetails
	120, // 13: game.v1.GetUserFavoriteIdsReply.favoriteIds:type_name -> game.v1.GetUserFavoriteIdsReply.FavoriteIdsEntry
	69,  // 14: game.v1.GetHotPlatformListReply.rows:type_name -> game.v1.GamePlatformDetail
	92,  // 15: game.v1.GetUserBetRecordListReply.rows:type_name -> game.v1.BetRecordInfo
	95,  // 16: game.v1.GetUserBetRecordSummaryReply.bet_summary_list:type_name -> game.v1.BetSummaryInfo
	69,  // 17: game.v1.PlatformDetailsList.items:type_name -> game.v1.GamePlatformDetail
	73,  // 18: game.v1.GameDetailsList.items:type_name -> game.v1.GameDetails
	121, // 19: game.v1.GetHomePlatformItemsReply.home_item:type_name -> game.v1.GetHomePlatformItemsReply.HomeItemEntry
	122, // 20: game.v1.GetHomeGameItemsReply.home_item:type_name -> game.v1.GetHomeGameItemsReply.HomeItemEntry
	105, // 21: game.v1.GetNewGameListReply.rows:type_name -> game.v1.GameValueItem
	108, // 22: game.v1.BigWinGameListReply.rows:type_name -> game.v1.WinGameValueItem
	73,  // 23: game.v1.FetchGamePlatformMetaReply.game_detail:type_name -> game.v1.GameDetails
	69,  // 24: game.v1.FetchGamePlatformMetaReply.platform_detail:type_name -> game.v1.GamePlatformDetail
	113, // 25: game.v1.FetchHotManagementReply.rows:type_name -> game.v1.GameHotManagement
	123, // 26: game.v1.FetchGameMapByIDReply.info:type_name -> game.v1.FetchGameMapByIDReply.InfoEntry
	124, // 27: game.v1.FetchPlatformMapByIDReply.info:type_name -> game.v1.FetchPlatformMapByIDReply.InfoEntry
	119, // 28: game.v1.GetGameTransferOrderStatusReply.OrdersEntry.value:type_name -> game.v1.GetGameTransferOrderStatusReply.order_info
	97,  // 29: game.v1.GetHomePlatformItemsReply.HomeItemEntry.value:type_name -> game.v1.PlatformDetailsList
	98,  // 30: game.v1.GetHomeGameItemsReply.HomeItemEntry.value:type_name -> game.v1.GameDetailsList
	73,  // 31: game.v1.FetchGameMapByIDReply.InfoEntry.value:type_name -> game.v1.GameDetails
	69,  // 32: game.v1.FetchPlatformMapByIDReply.InfoEntry.value:type_name -> game.v1.GamePlatformDetail
	0,   // 33: game.v1.LiveGameExternalService.K9GameResourceListSync:input_type -> game.v1.GameReq
	0,   // 34: game.v1.LiveGameExternalService.K9GameTransferBetRecordListSync:input_type -> game.v1.GameReq
	2,   // 35: game.v1.LiveGameExternalSingleService.EnterGame:input_type -> game.v1.SingleEnterGameReq
	4,   // 36: game.v1.LiveGameExternalSingleService.EnterGameTry:input_type -> game.v1.SingleEnterGameTryReq
	6,   // 37: game.v1.LiveGameExternalTransferService.EnterGame:input_type -> game.v1.TransferEnterGameReq
	8,   // 38: game.v1.LiveGameExternalTransferService.WalletTransferInGame:input_type -> game.v1.WalletTransferInGameReq
	12,  // 39: game.v1.LiveGameExternalTransferService.WalletTransferOutGame:input_type -> game.v1.WalletTransferOutGameReq
	14,  // 40: game.v1.LiveGameExternalTransferService.GetWalletTransferBalance:input_type -> game.v1.GetWalletTransferBalanceReq
	18,  // 41: game.v1.LiveGameExternalTransferService.GetGameTransferOrderStatus:input_type -> game.v1.GetGameTransferOrderStatusReq
	23,  // 42: game.v1.LiveGameExternalTransferService.GetGameTransferOrderStatusV2:input_type -> game.v1.GetGameTransferOrderStatusV2Req
	20,  // 43: game.v1.LiveGameExternalTransferService.GetGameTransferBetOrderList:input_type -> game.v1.GetGameTransferBetOrderListReq
	10,  // 44: game.v1.LiveGameExternalTransferService.WalletTransferInGameV2:input_type -> game.v1.WalletTransferInGameReqV2
	16,  // 45: game.v1.LiveGameExternalTransferService.GetWalletTransferBalanceV2:input_type -> game.v1.GetWalletTransferBalanceReqV2
	24,  // 46: game.v1.LiveGameCallbackRpcService.GetK9GameAccessKey:input_type -> game.v1.GetK9GameAccessKeyReq
	26,  // 47: game.v1.LiveGameCallbackRpcService.GameUserBet:input_type -> game.v1.GameUserBetReq
	28,  // 48: game.v1.LiveGameCallbackRpcService.GameUserReward:input_type -> game.v1.GameUserRewardReq
	30,  // 49: game.v1.LiveGameCallbackRpcService.GameUserBetCancel:input_type -> game.v1.GameUserBetCancelReq
	32,  // 50: game.v1.LiveGameCallbackRpcService.GameUserAdjustment:input_type -> game.v1.GameUserAdjustmentReq
	34,  // 51: game.v1.LiveGameCallbackRpcService.TransferCallback:input_type -> game.v1.TransferCallbackReq
	36,  // 52: game.v1.LiveGameRpcInnerService.AddTripartiteTransferRecord:input_type -> game.v1.AddTripartiteTransferRecordReq
	37,  // 53: game.v1.LiveGameRpcInnerService.AddTripartiteTransferRecordStatus:input_type -> game.v1.AddTripartiteTransferRecordStatusReq
	39,  // 54: game.v1.LiveGameRpcInnerService.ProcessMessageTransferData:input_type -> game.v1.ProcessMessageTransferDataReq
	41,  // 55: game.v1.LiveGameRpcInnerService.ProcessMessageTransferSend:input_type -> game.v1.ProcessMessageTransferSendReq
	38,  // 56: game.v1.LiveGameRpcInnerService.TripartiteTransferRecordStatus:input_type -> game.v1.TripartiteTransferRecordStatusReq
	44,  // 57: game.v1.LiveGameRpcInnerService.CreateCompensationFailedRecord:input_type -> game.v1.CreateCompensationRecordReq
	46,  // 58: game.v1.LiveGameRpcInnerService.GetGameDetailsByThird:input_type -> game.v1.GetGameDetailsByThirdReq
	49,  // 59: game.v1.LiveGameRpcInnerService.AddGameBetRecord:input_type -> game.v1.AddGameBetRecordReq
	52,  // 60: game.v1.LiveGameRpcInnerService.AddGameSettledRecord:input_type -> game.v1.AddGameSettledRecordReq
	54,  // 61: game.v1.LiveGameRpcInnerService.AddGameCancelRecord:input_type -> game.v1.AddGameCancelRecordReq
	55,  // 62: game.v1.LiveGameRpcInnerService.AddGameAdjustmentRecord:input_type -> game.v1.AddGameAdjustmentRecordReq
	56,  // 63: game.v1.LiveGameRpcInnerService.AddTransferGameBetRecord:input_type -> game.v1.AddTransferGameBetRecordReq
	57,  // 64: game.v1.LiveGameRpcInnerService.SendGameBetBetMQ:input_type -> game.v1.SendGameBetBetMQReq
	58,  // 65: game.v1.LiveGameRpcInnerService.SendGameBetBetSettlementMQ:input_type -> game.v1.SendGameBetBetSettlementMQReq
	59,  // 66: game.v1.LiveGameRpcInnerService.AddRecentlyGamePlay:input_type -> game.v1.AddRecentlyGamePlayReq
	0,   // 67: game.v1.LiveGameRpcInnerService.SyncGameBetSummaryToPGTask:input_type -> game.v1.GameReq
	60,  // 68: game.v1.LiveGameRpcService.GetGameCategoryListByCurr:input_type -> game.v1.GetCategoryListByCurrReq
	60,  // 69: game.v1.LiveGameRpcService.GetGameCategorySimpleListByCurr:input_type -> game.v1.GetCategoryListByCurrReq
	66,  // 70: game.v1.LiveGameRpcService.GetGameListByCategory:input_type -> game.v1.GetGameListByCategoryReq
	67,  // 71: game.v1.LiveGameRpcService.GetPlatformListByCurr:input_type -> game.v1.GetPlatformListByCurrReq
	67,  // 72: game.v1.LiveGameRpcService.GetPlatListSimpleByCurr:input_type -> game.v1.GetPlatformListByCurrReq
	79,  // 73: game.v1.LiveGameRpcService.GetPlatformDetails:input_type -> game.v1.GamePlatformDetailsReq
	78,  // 74: game.v1.LiveGameRpcService.GetGameListByPlatform:input_type -> game.v1.GetGameListByPlatformReq
	80,  // 75: game.v1.LiveGameRpcService.GetGameListBySearch:input_type -> game.v1.GetGameListBySearchReq
	80,  // 76: game.v1.LiveGameRpcService.GetGameSimpleListBySearch:input_type -> game.v1.GetGameListBySearchReq
	81,  // 77: game.v1.LiveGameRpcService.GameAddFavorite:input_type -> game.v1.GameHandelFavoriteReq
	81,  // 78: game.v1.LiveGameRpcService.GameRemoveFavorite:input_type -> game.v1.GameHandelFavoriteReq
	82,  // 79: game.v1.LiveGameRpcService.GameFavoriteList:input_type -> game.v1.GetGameFavoriteListReq
	86,  // 80: game.v1.LiveGameRpcService.GetHotGameList:input_type -> game.v1.GetHotGameListReq
	85,  // 81: game.v1.LiveGameRpcService.GetRecentlyGameList:input_type -> game.v1.GetGameRecentlyListReq
	87,  // 82: game.v1.LiveGameRpcService.GetHotPlatformList:input_type -> game.v1.GetHotPlatformListReq
	89,  // 83: game.v1.LiveGameRpcService.GetGameDetails:input_type -> game.v1.GameDetailsReq
	83,  // 84: game.v1.LiveGameRpcService.GetUserFavoriteIds:input_type -> game.v1.GetUserFavoriteIdsReq
	90,  // 85: game.v1.LiveGameRpcService.GetUserBetRecordList:input_type -> game.v1.GetUserBetRecordListReq
	93,  // 86: game.v1.LiveGameRpcService.GetUserBetRecordSummary:input_type -> game.v1.GetUserBetRecordSummaryReq
	96,  // 87: game.v1.LiveGameRpcService.GetHomePlatformItems:input_type -> game.v1.GetHomeGameItemReq
	96,  // 88: game.v1.LiveGameRpcService.GetHomeGameItems:input_type -> game.v1.GetHomeGameItemReq
	96,  // 89: game.v1.LiveGameRpcService.GetHomeGameList:input_type -> game.v1.GetHomeGameItemReq
	101, // 90: game.v1.LiveGameRpcService.GetGameConfInfo:input_type -> game.v1.GetGameConfInfoReq
	103, // 91: game.v1.LiveGameRpcService.GetNewGameList:input_type -> game.v1.GetNewGameListReq
	106, // 92: game.v1.LiveGameRpcService.GetBigWinGameList:input_type -> game.v1.BigWinGameListReq
	109, // 93: game.v1.LiveGameRpcService.FetchGamePlatformMeta:input_type -> game.v1.FetchGamePlatformMetaReq
	111, // 94: game.v1.LiveGameRpcService.FetchHotGameList:input_type -> game.v1.FetchHotManagementReq
	114, // 95: game.v1.LiveGameRpcService.FetchGameMapByIDs:input_type -> game.v1.FetchGameMapByIDReq
	116, // 96: game.v1.LiveGameRpcService.FetchPlatformMapByIDs:input_type -> game.v1.FetchPlatformMapByIDReq
	1,   // 97: game.v1.LiveGameExternalService.K9GameResourceListSync:output_type -> game.v1.GameReply
	1,   // 98: game.v1.LiveGameExternalService.K9GameTransferBetRecordListSync:output_type -> game.v1.GameReply
	3,   // 99: game.v1.LiveGameExternalSingleService.EnterGame:output_type -> game.v1.SingleEnterGameReply
	5,   // 100: game.v1.LiveGameExternalSingleService.EnterGameTry:output_type -> game.v1.SingleEnterGameTryReply
	7,   // 101: game.v1.LiveGameExternalTransferService.EnterGame:output_type -> game.v1.TransferEnterGameReply
	9,   // 102: game.v1.LiveGameExternalTransferService.WalletTransferInGame:output_type -> game.v1.WalletTransferInGameReply
	13,  // 103: game.v1.LiveGameExternalTransferService.WalletTransferOutGame:output_type -> game.v1.WalletTransferOutGameReply
	15,  // 104: game.v1.LiveGameExternalTransferService.GetWalletTransferBalance:output_type -> game.v1.GetWalletTransferBalanceReply
	19,  // 105: game.v1.LiveGameExternalTransferService.GetGameTransferOrderStatus:output_type -> game.v1.GetGameTransferOrderStatusReply
	19,  // 106: game.v1.LiveGameExternalTransferService.GetGameTransferOrderStatusV2:output_type -> game.v1.GetGameTransferOrderStatusReply
	22,  // 107: game.v1.LiveGameExternalTransferService.GetGameTransferBetOrderList:output_type -> game.v1.GetGameTransferBetOrderListReply
	11,  // 108: game.v1.LiveGameExternalTransferService.WalletTransferInGameV2:output_type -> game.v1.WalletTransferInGameReplyV2
	17,  // 109: game.v1.LiveGameExternalTransferService.GetWalletTransferBalanceV2:output_type -> game.v1.GetWalletTransferBalanceReplyV2
	25,  // 110: game.v1.LiveGameCallbackRpcService.GetK9GameAccessKey:output_type -> game.v1.GetK9GameAccessKeyReply
	27,  // 111: game.v1.LiveGameCallbackRpcService.GameUserBet:output_type -> game.v1.GameUserBetReply
	29,  // 112: game.v1.LiveGameCallbackRpcService.GameUserReward:output_type -> game.v1.GameUserRewardReply
	31,  // 113: game.v1.LiveGameCallbackRpcService.GameUserBetCancel:output_type -> game.v1.GameUserBetCancelReply
	33,  // 114: game.v1.LiveGameCallbackRpcService.GameUserAdjustment:output_type -> game.v1.GameUserAdjustmentReply
	35,  // 115: game.v1.LiveGameCallbackRpcService.TransferCallback:output_type -> game.v1.TransferCallbackReply
	1,   // 116: game.v1.LiveGameRpcInnerService.AddTripartiteTransferRecord:output_type -> game.v1.GameReply
	1,   // 117: game.v1.LiveGameRpcInnerService.AddTripartiteTransferRecordStatus:output_type -> game.v1.GameReply
	40,  // 118: game.v1.LiveGameRpcInnerService.ProcessMessageTransferData:output_type -> game.v1.ProcessMessageTransferDataReply
	42,  // 119: game.v1.LiveGameRpcInnerService.ProcessMessageTransferSend:output_type -> game.v1.ProcessMessageTransferSendReply
	43,  // 120: game.v1.LiveGameRpcInnerService.TripartiteTransferRecordStatus:output_type -> game.v1.TripartiteTransferRecord
	45,  // 121: game.v1.LiveGameRpcInnerService.CreateCompensationFailedRecord:output_type -> game.v1.CreateCompensationRecordResp
	47,  // 122: game.v1.LiveGameRpcInnerService.GetGameDetailsByThird:output_type -> game.v1.GetGameDetailsByThirdReply
	50,  // 123: game.v1.LiveGameRpcInnerService.AddGameBetRecord:output_type -> game.v1.AddGameBetRecordReply
	48,  // 124: game.v1.LiveGameRpcInnerService.AddGameSettledRecord:output_type -> game.v1.AddGameBetBaseReply
	48,  // 125: game.v1.LiveGameRpcInnerService.AddGameCancelRecord:output_type -> game.v1.AddGameBetBaseReply
	48,  // 126: game.v1.LiveGameRpcInnerService.AddGameAdjustmentRecord:output_type -> game.v1.AddGameBetBaseReply
	1,   // 127: game.v1.LiveGameRpcInnerService.AddTransferGameBetRecord:output_type -> game.v1.GameReply
	1,   // 128: game.v1.LiveGameRpcInnerService.SendGameBetBetMQ:output_type -> game.v1.GameReply
	1,   // 129: game.v1.LiveGameRpcInnerService.SendGameBetBetSettlementMQ:output_type -> game.v1.GameReply
	1,   // 130: game.v1.LiveGameRpcInnerService.AddRecentlyGamePlay:output_type -> game.v1.GameReply
	1,   // 131: game.v1.LiveGameRpcInnerService.SyncGameBetSummaryToPGTask:output_type -> game.v1.GameReply
	61,  // 132: game.v1.LiveGameRpcService.GetGameCategoryListByCurr:output_type -> game.v1.GetCategoryListByCurrReply
	63,  // 133: game.v1.LiveGameRpcService.GetGameCategorySimpleListByCurr:output_type -> game.v1.GetCategorySimpleListByCurrReply
	76,  // 134: game.v1.LiveGameRpcService.GetGameListByCategory:output_type -> game.v1.GetGameDetailsListReply
	68,  // 135: game.v1.LiveGameRpcService.GetPlatformListByCurr:output_type -> game.v1.GetPlatformListByCurrReply
	70,  // 136: game.v1.LiveGameRpcService.GetPlatListSimpleByCurr:output_type -> game.v1.GetPlatListSimpleByCurrReply
	69,  // 137: game.v1.LiveGameRpcService.GetPlatformDetails:output_type -> game.v1.GamePlatformDetail
	76,  // 138: game.v1.LiveGameRpcService.GetGameListByPlatform:output_type -> game.v1.GetGameDetailsListReply
	76,  // 139: game.v1.LiveGameRpcService.GetGameListBySearch:output_type -> game.v1.GetGameDetailsListReply
	77,  // 140: game.v1.LiveGameRpcService.GetGameSimpleListBySearch:output_type -> game.v1.GetGameSimpleListBySearchReply
	1,   // 141: game.v1.LiveGameRpcService.GameAddFavorite:output_type -> game.v1.GameReply
	1,   // 142: game.v1.LiveGameRpcService.GameRemoveFavorite:output_type -> game.v1.GameReply
	76,  // 143: game.v1.LiveGameRpcService.GameFavoriteList:output_type -> game.v1.GetGameDetailsListReply
	76,  // 144: game.v1.LiveGameRpcService.GetHotGameList:output_type -> game.v1.GetGameDetailsListReply
	76,  // 145: game.v1.LiveGameRpcService.GetRecentlyGameList:output_type -> game.v1.GetGameDetailsListReply
	88,  // 146: game.v1.LiveGameRpcService.GetHotPlatformList:output_type -> game.v1.GetHotPlatformListReply
	73,  // 147: game.v1.LiveGameRpcService.GetGameDetails:output_type -> game.v1.GameDetails
	84,  // 148: game.v1.LiveGameRpcService.GetUserFavoriteIds:output_type -> game.v1.GetUserFavoriteIdsReply
	91,  // 149: game.v1.LiveGameRpcService.GetUserBetRecordList:output_type -> game.v1.GetUserBetRecordListReply
	94,  // 150: game.v1.LiveGameRpcService.GetUserBetRecordSummary:output_type -> game.v1.GetUserBetRecordSummaryReply
	99,  // 151: game.v1.LiveGameRpcService.GetHomePlatformItems:output_type -> game.v1.GetHomePlatformItemsReply
	100, // 152: game.v1.LiveGameRpcService.GetHomeGameItems:output_type -> game.v1.GetHomeGameItemsReply
	98,  // 153: game.v1.LiveGameRpcService.GetHomeGameList:output_type -> game.v1.GameDetailsList
	102, // 154: game.v1.LiveGameRpcService.GetGameConfInfo:output_type -> game.v1.GetGameConfInfoReply
	104, // 155: game.v1.LiveGameRpcService.GetNewGameList:output_type -> game.v1.GetNewGameListReply
	107, // 156: game.v1.LiveGameRpcService.GetBigWinGameList:output_type -> game.v1.BigWinGameListReply
	110, // 157: game.v1.LiveGameRpcService.FetchGamePlatformMeta:output_type -> game.v1.FetchGamePlatformMetaReply
	112, // 158: game.v1.LiveGameRpcService.FetchHotGameList:output_type -> game.v1.FetchHotManagementReply
	115, // 159: game.v1.LiveGameRpcService.FetchGameMapByIDs:output_type -> game.v1.FetchGameMapByIDReply
	117, // 160: game.v1.LiveGameRpcService.FetchPlatformMapByIDs:output_type -> game.v1.FetchPlatformMapByIDReply
	97,  // [97:161] is the sub-list for method output_type
	33,  // [33:97] is the sub-list for method input_type
	33,  // [33:33] is the sub-list for extension type_name
	33,  // [33:33] is the sub-list for extension extendee
	0,   // [0:33] is the sub-list for field type_name
}

func init() { file_game_v1_game_proto_init() }
func file_game_v1_game_proto_init() {
	if File_game_v1_game_proto != nil {
		return
	}
	file_game_v1_game_proto_msgTypes[73].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_game_v1_game_proto_rawDesc), len(file_game_v1_game_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   125,
			NumExtensions: 0,
			NumServices:   6,
		},
		GoTypes:           file_game_v1_game_proto_goTypes,
		DependencyIndexes: file_game_v1_game_proto_depIdxs,
		MessageInfos:      file_game_v1_game_proto_msgTypes,
	}.Build()
	File_game_v1_game_proto = out.File
	file_game_v1_game_proto_goTypes = nil
	file_game_v1_game_proto_depIdxs = nil
}
