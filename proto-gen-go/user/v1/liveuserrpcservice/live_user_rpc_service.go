// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.5
// Source: user.proto

package liveuserrpcservice

import (
	"context"

	"github.com/hanyougame/live-proto/proto-gen-go/user/v1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BatchGetUserBalanceReq    = v1.BatchGetUserBalanceReq
	BatchGetUserBalanceResp   = v1.BatchGetUserBalanceResp
	BatchGetUserBalanceV2Req  = v1.BatchGetUserBalanceV2Req
	BatchGetUserBalanceV2Resp = v1.BatchGetUserBalanceV2Resp
	GetInfoByUserTokenReq     = v1.GetInfoByUserTokenReq
	GetUserBalanceReply       = v1.GetUserBalanceReply
	GetUserBalanceReq         = v1.GetUserBalanceReq
	GetUserFullInfoByIdReply  = v1.GetUserFullInfoByIdReply
	GetUserFullInfoByIdReq    = v1.GetUserFullInfoByIdReq
	GetUserFullMapInfoReply   = v1.GetUserFullMapInfoReply
	GetUserFullMapInfoReq     = v1.GetUserFullMapInfoReq
	GetUserInfoByIdReq        = v1.GetUserInfoByIdReq
	UpdateUserBalanceReq      = v1.UpdateUserBalanceReq
	UpdateUserBalanceResp     = v1.UpdateUserBalanceResp
	UserDetailsInfoReply      = v1.UserDetailsInfoReply
	UserWalletInfo            = v1.UserWalletInfo
	UserWalletList            = v1.UserWalletList

	LiveUserRpcService interface {
		// 根据token获取用户信息
		GetInfoByUserToken(ctx context.Context, in *GetInfoByUserTokenReq, opts ...grpc.CallOption) (*UserDetailsInfoReply, error)
		// 获取用户余额
		GetUserBalance(ctx context.Context, in *GetUserBalanceReq, opts ...grpc.CallOption) (*GetUserBalanceReply, error)
		// 修改用户余额
		UpdateUserBalance(ctx context.Context, in *UpdateUserBalanceReq, opts ...grpc.CallOption) (*UpdateUserBalanceResp, error)
		// 根据用户id获取部分用户信息
		GetUserInfoById(ctx context.Context, in *GetUserInfoByIdReq, opts ...grpc.CallOption) (*UserDetailsInfoReply, error)
		// 获取用户详细信息（全部-需要其他用户字段就在reply里面加）
		GetUserFullInfoById(ctx context.Context, in *GetUserFullInfoByIdReq, opts ...grpc.CallOption) (*GetUserFullInfoByIdReply, error)
		// 获取用户信息map
		GetUserFullMapInfo(ctx context.Context, in *GetUserFullMapInfoReq, opts ...grpc.CallOption) (*GetUserFullMapInfoReply, error)
		// 批量查询用户余额
		BatchGetUserBalance(ctx context.Context, in *BatchGetUserBalanceReq, opts ...grpc.CallOption) (*BatchGetUserBalanceResp, error)
		// 获取多用户多钱包余额接口
		BatchGetUserBalanceV2(ctx context.Context, in *BatchGetUserBalanceV2Req, opts ...grpc.CallOption) (*BatchGetUserBalanceV2Resp, error)
	}

	defaultLiveUserRpcService struct {
		cli zrpc.Client
	}
)

func NewLiveUserRpcService(cli zrpc.Client) LiveUserRpcService {
	return &defaultLiveUserRpcService{
		cli: cli,
	}
}

// 根据token获取用户信息
func (m *defaultLiveUserRpcService) GetInfoByUserToken(ctx context.Context, in *GetInfoByUserTokenReq, opts ...grpc.CallOption) (*UserDetailsInfoReply, error) {
	client := v1.NewLiveUserRpcServiceClient(m.cli.Conn())
	return client.GetInfoByUserToken(ctx, in, opts...)
}

// 获取用户余额
func (m *defaultLiveUserRpcService) GetUserBalance(ctx context.Context, in *GetUserBalanceReq, opts ...grpc.CallOption) (*GetUserBalanceReply, error) {
	client := v1.NewLiveUserRpcServiceClient(m.cli.Conn())
	return client.GetUserBalance(ctx, in, opts...)
}

// 修改用户余额
func (m *defaultLiveUserRpcService) UpdateUserBalance(ctx context.Context, in *UpdateUserBalanceReq, opts ...grpc.CallOption) (*UpdateUserBalanceResp, error) {
	client := v1.NewLiveUserRpcServiceClient(m.cli.Conn())
	return client.UpdateUserBalance(ctx, in, opts...)
}

// 根据用户id获取部分用户信息
func (m *defaultLiveUserRpcService) GetUserInfoById(ctx context.Context, in *GetUserInfoByIdReq, opts ...grpc.CallOption) (*UserDetailsInfoReply, error) {
	client := v1.NewLiveUserRpcServiceClient(m.cli.Conn())
	return client.GetUserInfoById(ctx, in, opts...)
}

// 获取用户详细信息（全部-需要其他用户字段就在reply里面加）
func (m *defaultLiveUserRpcService) GetUserFullInfoById(ctx context.Context, in *GetUserFullInfoByIdReq, opts ...grpc.CallOption) (*GetUserFullInfoByIdReply, error) {
	client := v1.NewLiveUserRpcServiceClient(m.cli.Conn())
	return client.GetUserFullInfoById(ctx, in, opts...)
}

// 获取用户信息map
func (m *defaultLiveUserRpcService) GetUserFullMapInfo(ctx context.Context, in *GetUserFullMapInfoReq, opts ...grpc.CallOption) (*GetUserFullMapInfoReply, error) {
	client := v1.NewLiveUserRpcServiceClient(m.cli.Conn())
	return client.GetUserFullMapInfo(ctx, in, opts...)
}

// 批量查询用户余额
func (m *defaultLiveUserRpcService) BatchGetUserBalance(ctx context.Context, in *BatchGetUserBalanceReq, opts ...grpc.CallOption) (*BatchGetUserBalanceResp, error) {
	client := v1.NewLiveUserRpcServiceClient(m.cli.Conn())
	return client.BatchGetUserBalance(ctx, in, opts...)
}

// 获取多用户多钱包余额接口
func (m *defaultLiveUserRpcService) BatchGetUserBalanceV2(ctx context.Context, in *BatchGetUserBalanceV2Req, opts ...grpc.CallOption) (*BatchGetUserBalanceV2Resp, error) {
	client := v1.NewLiveUserRpcServiceClient(m.cli.Conn())
	return client.BatchGetUserBalanceV2(ctx, in, opts...)
}
