syntax = "proto3";

package activity.v1;
option go_package = "./pb/v1";

enum EventType {
  UNKNOWN = 0;
  BET = 1;  // 打码
  RECHARGE = 2; // 充值
  REGISTER = 3; // 注册
}

// 新增 SpinType 枚举
enum SpinType {
  SPIN_TYPE_UNKNOWN = 0;
  SPIN_TYPE_SILVER = 1;   // 白银转盘
  SPIN_TYPE_GOLD = 2;     // 黄金转盘
  SPIN_TYPE_DIAMOND = 3;  // 钻石转盘
}

message ActivityReq{

}
message ActivityReply{

}
service LiveActivityInnerService{
  // 抢红包活动事件
  rpc RedPacketCampaignEvent(RedPacketCampaignEventReq) returns (ActivityReply);
  // 抢红包活动倒计时事件
  rpc RedPacketCountdownEvent(RedPacketCountdownEventReq) returns (ActivityReply);
  // 判断用户抢红包条件
  rpc CheckUserRedPacketCondition(CheckUserRedPacketConditionReq) returns (CheckUserRedPacketConditionReply);
  // 增加用户领取红包次数缓存
  rpc IncreaseUserRedPacketCount(IncreaseUserRedPacketCountReq) returns (ActivityReply);

  // 幸运转盘活动事件
  rpc LuckySpinEvent(LuckySpinEventReq) returns (ActivityReply);
  // 增加幸运值
  rpc AddLuckyPoint(AddLuckyValReq) returns (ActivityReply);
  // 使用幸运值
  rpc UseLuckyPoint(UseLuckyPointReq) returns (ActivityReply);
  // 我的幸运值
  rpc GetUserLuckyPoint(GetLuckyPointReq) returns (GetLuckyPointReply);
  // 幸运值获取记录
  rpc LuckyPointsAddList(GetLuckyPointListReq) returns (LuckyPointsAddListReply);
  // 幸运值消费记录
  rpc LuckyPointsUsedList(GetLuckyPointListReq) returns (LuckyPointsUsedListReply);
  // 获奖记录 公告展示
  rpc RewardList(RewardListReq) returns (RewardListReply);
  // 获取用户当前周期内有效邀请人数
  rpc GetUserInviteCount(GetUserInviteCountReq) returns (GetUserInviteCountReply);
}

message GetUserInviteCountReq {
  int64 user_id = 1;      // 用户id
  int64 activity_id = 2;  // 活动id
}

message GetUserInviteCountReply {
  int32 invite_count = 1; // 有效邀请人数
}

message RewardListReply {
  repeated RewardData data = 1; // 奖励数据列表
}

message RewardData {
  string user_id = 1; // 用户id
  int64 reward = 2; // 奖励金额
  int32 reward_time = 3; // 奖励时间
  SpinType spin_type = 4; // 转盘类型
}

message GetLuckyPointListReq{
  int64 user_id = 1; // 用户id
  int64 activity_id = 2; // 活动id
}

message RewardListReq {
  int64 activity_id = 1; // 活动id
}

message LuckyPointsUsedItem {
  SpinType spin_type = 1; // 转盘类型
  repeated UseLuckyPoint UsedList = 2; // 使用的幸运值列表
  int64 user_id = 3; // 用户id
  int32 create_at = 4; // 创建时间
  map<string, string> detail = 5; // 额外信息
  string user_name = 6; // 用户名
  int64  point_before = 7; // 领取前的幸运值
  int64 point_after = 8; // 领取后的幸运值
  int32 point = 9; // 幸运值
  int32 reward = 10; // 奖励金额
}

message LuckyPointsUsedListReply {
  repeated LuckyPointsUsedItem data = 1 ;
}


message LuckyPointsAddItem {
  int64 user_id = 1; // 用户id
  int32 point = 2; // 幸运值
  int32 create_at = 3; // 创建时间
  int32 claim_id = 4; // 领取id
  map<string, string> detail = 5; // 额外信息
  string user_name = 6; // 用户名
  int64  point_before = 7; // 领取前的幸运值
  int64 point_after = 8; // 领取后的幸运值
  string condition = 9; // 条件
  int64 expire_time = 10; // 过期时间
}

message LuckyPointsAddListReply {
  repeated LuckyPointsAddItem data = 1 ;
}


message UseLuckyPoint {
  int32 claim_id = 1; // 领取id
  int32 point = 2; // 幸运值
}

message UseLuckyPointReq {
  int64 user_id = 1; // 用户id
  int64 activity_id = 2; // 活动id
  int32 reward = 3; // 奖励金额
  int32 point = 4; // 消耗的总幸运值
  SpinType spin_type = 5; // 转盘类型
  map<string, string> detail = 6; // 额外信息
  int32 cycle_id = 7; // 周期id
}

message GetLuckyPointReq {
  repeated int64 user_id = 1; // 用户id
  int64 activity_id = 2; // 活动id
}

message GetLuckyPointItem {
  int64 total_count = 1; // 总幸运值
  int64 expired_count = 2; // 过期幸运值
  int64 available_count = 3; // 可用幸运值
  int64 used_count = 4; // 已使用幸运值
  int64 user_id = 5; // 用户id
}

message GetLuckyPointReply {
  repeated  GetLuckyPointItem data = 1; // 用户幸运值列表
}

message AddLuckyValReq {
  int64 user_id = 1; // 用户id
  int64 activity_id = 2; // 活动id
  int32 expire_time = 3; // // 过期时间
  int32 point = 4; // 幸运值
  string condition = 5; // 条件
  string event_type = 6; // 事件类型
  string event_data = 7; // 事件数据
  map<string, string> detail = 8; // 额外信息
}

message RedPacketCampaignEventReq {
  int64 user_id = 1;   // 用户id
}

message RedPacketCountdownEventReq {
  int64 activity_id = 1; // 活动id
}

message LuckySpinEventReq {
  EventType type = 1;
  bytes data = 2; // 数据
}

message CheckUserRedPacketConditionReq{
  repeated int64 user_ids = 1;   // 用户id
  int64 activity_id = 2;   // 活动id
  int64 period_index = 3;   // 活动阶段

}
message CheckUserRedPacketConditionReply{
  map<int64, bool> user_packet_conditions = 1;
}

message IncreaseUserRedPacketCountReq{
  int64 user_id = 1;
  int64 activity_id = 2;
  int64 period_index = 3;
  string current_date = 4;
}


