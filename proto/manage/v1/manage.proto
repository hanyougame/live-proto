syntax = "proto3";

package manage.v1;
option go_package = "./pb/v1";


message ManageReq{

}
message ManageReply{

}


message CurrencyDetailReply {
  int64 currency_id = 1;                          // 自增主键，唯一标识每条记录
  int64 rank = 2;                        // 排名，表示货币在列表中的排序位置
  string currency_name = 3;              // 货币名称，例如“印度卢比”
  string country_name = 4;               // 所属国家，例如“印度”，允许为空（如“波场”）
  string currency_code = 5;              // 货币代码，例如“INR”
  string currency_flag_url = 6;          // 货币国旗图标的 URL，保存图片的路径或链接
  string thousand_separator = 7;         // 千分位符号，例如“,”，表示格式化显示
  string currency_symbol = 8;            // 货币符号，例如“₹”
  string exchange_rate = 9;              // 货币兑换比例，默认值为 1:1
  int64 currency_type = 10;             // 货币类型，例如“法定货币”或“数字货币”
  int64 is_enabled = 11;                 // 是否启用，默认启用
  int64 is_visible = 12;                 // 大厅显示开关，表示是否在用户界面显示
}
message CurrencyDetailReplyList {
  repeated CurrencyDetailReply list = 1;
}

message GetCurrInfoByIDReq {
  int64 id = 1;                          // 自增主键，唯一标识每条记录
}

// =============== IP相关消息定义 ===============

// IP地理位置信息
message IPGeolocationInfo {
  string ip = 1;                         // IP地址
  string country_code = 2;               // 国家代码 如"CN"
  string country_name = 3;               // 国家名称 如"中国"
  string region_name = 4;                // 地区名称 如"北京市"
  string city_name = 5;                  // 城市名称 如"北京"
  string isp_name = 6;                   // ISP名称 如"电信"
  string timezone = 7;                   // 时区 如"Asia/Shanghai"
  double latitude = 8;                   // 纬度
  double longitude = 9;                  // 经度
  string continent_name = 10;            // 大洲名称
  int64 ip_type = 11; // IP类型 1 IPv4 2 IPv6
}

// 单个IP查询请求
message GetIPGeolocationReq {
  string ip = 1;                         // IP地址
}

// 单个IP查询响应
message GetIPGeolocationReply {
  IPGeolocationInfo geolocation = 1;     // IP地理位置信息
}

// 批量IP查询请求
message BatchGetIPGeolocationReq {
  repeated string ips = 1;               // IP地址列表
}

// 批量IP查询响应
message BatchGetIPGeolocationReply {
  map<string, IPGeolocationInfo> geolocations = 1;  // IP -> 地理位置信息映射
}

message SendSmsReq {
  string phone = 1; // 手机号
  string country_code = 2; // 区号
  string msg = 3; // 短信内容
  string sms_code = 4; // 短信三方Code标识
  string captcha = 5; // 验证码
}

message SendSmsReply {
  string third_order_no = 1; // 三方单号
  string resp = 2; // 三方响应
  int64 status = 3; // 状态 1-发送成功 2-发送失败
  string phone = 4; // 实际发送手机号
}

message SmsBalanceReq {
  repeated string sms_codes = 1; // 三方Code标识
}

message SmsBalanceReply {
//  repeated string balances = 1; // 余额
  map<string, string> balances = 1; // 余额
}

message SendEmailReq {
  repeated string to = 1; // 收件人
  string subject = 2; // 邮件主题
  string content = 3; //  邮件内容
}

message SendEmailReply {
}

message SendWhatsappVerificationCodeReq {
  repeated string to = 1; // 收件人
  string captcha = 2; // 验证码
}
message SendWhatsappVerificationCodeRsp {
  
}

service LiveManageRpcService{
  // 获取法定货币信息
  rpc GetLegalTenderInfo (ManageReq) returns (CurrencyDetailReplyList);
  // 通过货币ID获取货币信息
  rpc GetCurrInfoById (GetCurrInfoByIDReq) returns (CurrencyDetailReply);
  // =============== IP相关接口 ===============
  // 获取单个IP地理位置信息
  rpc GetIPGeolocation (GetIPGeolocationReq) returns (GetIPGeolocationReply);

  // 批量获取IP地理位置信息
  rpc BatchGetIPGeolocation (BatchGetIPGeolocationReq) returns (BatchGetIPGeolocationReply);

  rpc SendSms (SendSmsReq) returns (SendSmsReply);
  rpc SmsBalance (SmsBalanceReq) returns (SmsBalanceReply);

  rpc SendEmail (SendEmailReq) returns (SendEmailReply);
  // 发送whatsapp验证码
  rpc SendWhatsappVerificationCode (SendWhatsappVerificationCodeReq) returns (SendWhatsappVerificationCodeRsp);
}
